%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: softwarestack.pdf
%%Creator: Adobe Acrobat 17.9.0
%%For: Yuya
%%CreationDate: 2017/06/25, 15:55:24
%%BoundingBox: 0 0 720 427
%%HiResBoundingBox: 0 0 720 426.6001
%%CropBox: 0 0 720 426.6001
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1153 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   xmp:ModifyDate="2017-06-25T15:55:11+09:00"
   xmp:CreateDate="2017-06-25T15:55:10+09:00"
   xmp:MetadataDate="2017-06-25T15:55:11+09:00"
   xmp:CreatorTool="PowerPoint 用 Acrobat PDFMaker 17"
   xmpMM:DocumentID="uuid:e86fcdc7-fcba-4cf2-9bda-95519b348c9e"
   xmpMM:InstanceID="uuid:6b727afe-6a26-48c6-99f7-91b29528bdd7"
   dc:format="application/pdf"
   pdf:Producer="Adobe PDF Library 15.0"
   pdfx:Version="1">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint Presentation</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>takuya</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -426.6 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 426.6 li
720 426.6 li
720 0 li
cp
clp
27.3 121.14 mo
143.34 121.14 li
143.34 184.5 li
27.3 184.5 li
cp
false sop
0 0 0 0 cmyk
ef
1.56 lw
0 lc
0 lj
8 ml
[] 0 dsh
true sadj
27.3 121.14 mo
143.34 121.14 li
143.34 184.5 li
27.3 184.5 li
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H)
%%Title: (CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-984 -440 2037 1068} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 25022 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300EE23D0BA079325E1D5F86AF2FE7DC374914003E
5DDB91552C283> |
50 <001C60D8A8C9B6D4D2A28BE0121463C7987A93335808FDB30041D1CADBEF
E618FACAB463FB87922904E28497D2405308F9433C7690650A37E85055852C8E
8CBA64DCFBE6DB35661B6DAA9439B576F3018F818A01D328179C94AD037E4337
A3F991042436B3ADB85CC131543AA293146D17C3E273EAE980BE4C2F31617E4F
409A209609349CD1D026BCAEC0900A> |
54 <001C60D8A8C9B657193E1FCC679DC9E788A90EC6DDEEDD9D123EEC2DA9EC
A4A5ADF458398BAE90E508F2B77B84FEC2A6B8A7AFF973976B58B06993840E66
71C4944781284B1C114728DF1E9C0E434538BDABA1342FE3490F3C1DF084F380
542E5CC742036ACDFF2C6D0DD0E12451B7BAD1BFF3DCC2CE073E5425C2C3A9AC
25861E49C02979E9B7597A8B242C957026970077919B6949FF998D40787A9187
A1C41748CD38162A028C5D633A3BDE13623B4492DF562184A5040E88F8539824
A143DACEC0B9A47EAED2> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H /Identity-H 0 [/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
73.4181 159.232 mo
(\0002\0006)
[12.8318 0 ]xsh
164.58 206.68 mo
164.58 200.992 169.191 196.38 174.88 196.38 cv
673.64 196.38 li
679.329 196.38 683.94 200.992 683.94 206.68 cv
683.94 247.88 li
683.94 253.569 679.329 258.18 673.64 258.18 cv
174.88 258.18 li
169.191 258.18 164.58 253.569 164.58 247.88 cv
cp
0 0 0 0 cmyk
ef
164.58 206.68 mo
164.58 200.992 169.191 196.38 174.88 196.38 cv
673.64 196.38 li
679.329 196.38 683.94 200.992 683.94 206.68 cv
683.94 247.88 li
683.94 253.569 679.329 258.18 673.64 258.18 cv
174.88 258.18 li
169.191 258.18 164.58 253.569 164.58 247.88 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: LKAAAA+SegoeUI Initial
ct_T42Dict begin
-0.57 -0.41 1.996 1.297
 256 array 0 1 255 {1 index exch /.notdef put} for  /LKAAAA+SegoeUI
Type42DictBegin
[<00010000000c000c000c000c4f532f325f623d91000000cc000000606376
742082035ddb0000012c00000a226670676d4944d86700000b5000000a5c
676c796668940f3e0000c4ac00001f5068656164ef461957000015ac0000
003668686561140e1c3d000015e400000024686d7478cbde28d100001608
000052206c6f6361027b80be00006828000052246d6178701a580dea0000
ba4c000000206e616d65f1f27acd0000ba6c000001fe7072657093ee1eb9
0000bc6c00000840676469720000000000000000000000000003044f0190
00050008059a05330000011b059a0533000003d1006602120805020b0502
040204020203e4002effc000e47f00000009000000004d5320200040000d
fffd05d3fe51010d08a20202200001ff000000000400059a000000200017
05ec00160000059a00180000059a00180000000000000000000000000000
0400001800000000ffe8ff890000ffe8ff890000ffe8fe4efe29fff50000
059a0000feba00000000000002cdffed05a1000d0248ffeb0359000d0000
ffeb000000000000000000000000ffed0433001200a400ab008b00810077
feae00000000000000000800000008000000040000000000008a00000000
00000073000000000000006b000000710080006200000000000000000000
0000000000000000000000000000000000d600d600000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000b000a8009100000000000000a800a400000000
0000000000a800a4009b006800000000000000000097008c00000000008a
0083000000000094008a00a4000000000000000000000000000000000000
000000000000000000000000000000000000000000e000e000a000e401be
01020000000000000000000000000000000000860086000000c500c30081
004a005a005105db05db0086005800900058008a00800000000000000000
000000cf0000000000d6000000780077007a0061007a0081000000000000
0081006b0000000000000078006d00000000009200810092008b00a00097
01d3004c0074006400a800000000000000000000062300c9006a006d004c
0061006900c800a20080007e006b059a0011022400110300ffef00810067
007100000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
008f0063009600c0febcfef2006400640076007c02f6000d0200000d0496
fff300540046006a006b004c0769fe3100e400bc00000000000000000000
04cd001106a00000ffedfe0000aa00b6006c000000aa00b8006c00bb0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000ff00fe63fd6dfd76ff82ff83
05e905e304be04ec03640419006e007f008c009b00a7006e007f009100a0
00a800000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000008300bc00940094ff85
ffae00520029061400ae00460046fe580560008f00850085005c00540046
00a70098005800e1009e004b006900b4ffe8000000000000000000000000
009c006400e1005a004b0000054e0000405585645b5a5954524f4e4d4c4b
4a49484746434241403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d
0c0b0a090807060504030201002c0118b0184358456ab0194360b00c2344
231020b00c4ef04d2fb000121b21231120332f592d2c0118b0184358b005
2bb000134bb0145058b100403859b0062b1b21231120332f592d2c0118b0
1843584eb0032510f221b000124d1b2045b00425b00425234a6164b02852
58212310d61bb0032510f221b0001259592d2cb01a435821211bb00225b0
022549b00325b003254a612064b01050582121211bb00325b0032549b000
5058b0005058b8ffe238211bb0003821591bb0005258b01e38211bb00038
21595959592d2c0118b0184358b0052bb000134bb0145058b90000ffc038
59b0062b1b21231120332f592d2c4e018a10b10c194344b00014b1000ce2
b00015b90000fff03800b0003cb0282bb0022510b0003c2d2c0118b0002f
b00114f2b00113b001154db000122d2c0118b0184358b0052bb00013b900
00ffe038b0062b1b21231120332f592d2c0118b018435845646a23456469
b01943646060b00c2344231020b00cf02fb000121b2121208a208a525811
331b212159592d2c014bb0c85158b10b0a432343650a592d2c004bb0c851
5800b10a0b4323430b592d2c00b00c2370b1010c3e01b00c2370b1020c45
3ab10200080d2d2cb0122bb0022545b00225456ab0408b60b00225234421
21212d2cb0132bb0022545b00225456ab8ffc08c60b0022523442121212d
2cb000b0122b2121212d2cb000b0132b2121212d2c014bb0c85158b00643
b00743650a592d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2cb1000325456854b01c4b505a58b0032545b003
2545606820b004252344b0042523441bb00325204568208a2344b0032545
6860b003252344592d2cb00325204568208a2344b003254564686560b004
25b0016023442d2cb00943588721c01bb01243588745b0112bb00d2344b0
0d7ae41b038a45186920b00d23448a8a8720b0a05158b0112bb00d2344b0
0d7ae41b21b00d7ae4595959182d2c208a4523456860442d2c456a422d2c
01182f2d2c0118b0184358b00425b00425496423456469b0408b6120b080
626ab00225b00225618cb0194360b00c2344218a10b00cf6211b21212121
592d2c01b0184358b0022545b002254564606ab00325456a6120b0042545
6a208a8b65b0042523448cb00325234421211b20456a4420456a44592d2c
012045b00055b018435a584568234569b0408b6120b080626a208a236120
b003258b65b0042523448cb00325234421211b2121b0192b592d2c018a8a
45642345646164422d2cb00425b00425b0192bb0184358b00425b00425b0
0325b01b2b01b0022543b04054b0022543b000545a58b003252045b04061
4459b0022543b00054b0022543b040545a58b004252045b0406044595921
2121212d2cb0032520b0072587052e23208ab00425b00725b0142b1021c4
212d2cc02d2c4b525845441b2121592d2cb00243583ded181bed592d2c4b
505845441b2121592d2c01184b52588a2fed1b212121592d2c4b53234b51
5a58b003254568b003254568b003256054582121211bb00225456860b003
2523442121591b212121592d2cb00243583dcd181bcd592d2c462346608a
8a462320468a608a61b8ff8062232010238ab10c0c8a70456020b0005058
b00161b8ffba8b1bb0468c59b0106068013a2d2c2045b0032546524bb013
515b58b0022546206861b00325b003253f2321381b2111592d2c2045b003
25465058b0022546206861b00325b003253f2321381b2111592d2c004bb0
c8515800b00743b006430b592d2c8a10ec2d2cb00c4358211b2046b00052
58b8fff0381bb0103859592d2c20b0005558b8100063b003254564b00325
456461b0005358b0021bb04061b00359254569535845441b2121591b21b0
022545b00225456164b028515845441b212159592d2c21210c6423648bb8
4000622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d
2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423
648bb84000626023212d2c184b5358b00425b00425496423456469b0408b
6120b080626ab00225b00225618cb00c2344218a10b00cf6211b218a1123
1220392f592d2cb00225b002254964b0c05458b8fff838b008381b212159
2d2cb0134358031b02592d2cb0134358021b03592d2cb00a2b2310203cb0
172b2d2cb00225b8fff038b0282b8a102320d023b0102bb0054358c01b3c
59201011b00012012d2cb0482b2d2c01b0022510d023c901b00113b00014
10b0013cb001162d2c01b00013b001b0032549b0031738b001132d2c4b53
234b515a5820458a60441b2121592d2c184b5358b00425b004254964b003
25b00325496468b0408b6120b080626ab00225b00225618cb00c234421b0
04251023b00cf61bb00425b0042511122320392f59cc21212d2c0118b018
4358b0052546234564611b21b00425b004254a59b00e23442310b00eec23
10b00eec2d2cb01b435820b0016045b000515820b0016020452068b00055
58b0206044211b212121591b20b0016020452068b0005558b8ffe06044b0
1c4b50582045b02060441b21591b21212159591b21592d2cb00225462068
61b00325b003253f2321382d2c462346608a8a462320468a608a61b8ff80
62232010238ab10c0c8a70456020b0005058b00161b8ff808b1bb0818c59
683a2d2cb0402a212d2c2035b001602d2cb0024354584b53234b515a5838
1b2121591b21212121592d2c49b00e23442d2cb0024354584b53234b515a
5820458a60441b2121591b21212121592d2c4b53234b515a5820458a6044
1b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b21
21592d2cb000214b5458381b2121592d2cb002435458b0462b1b21212121
592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b212121
21592d2cb002435458b0492b1b212121592d2c00b00225201149b0005158
b8ffc0381b21592d2c00b00225201149b0005358b040381b21592d2c4b52
587d1b7a592d2cb1020142b123018851b1400188535a58b1020042b91000
0020885458b202010243604259b12401885158b920000040885458b20202
02436042b12401885458b2022002436042004b014b5258b2020802436042
591bb940000080885458b202040243604259b94000008063b80100885458
b202080243604259b94000010063b80200885458b202100243604259b126
01885158b94000020063b80400885458b202400243604259b94000040063
b80800885458b2028002436042595959595959b10002435458400a054008
4009400c020d021bb10102435458b2054008ba010000090100b30c010d01
1bb18002435258b2054008b80180b109401bb2054008ba01800009014059
b9400000808855b94000020063b8040088555a58b30c000d011bb30c000d
0159595942424242422d2cb080b0024350b001b00243545bb0104b515a58
212310b0201ac91b8a10ed592d2cb0592b2d2c8a10e52d2c204569442d2c
b12501885058b94000020063b8040088545cb0144b525b1bb001592d0001
000000058ccd06bbc29b5f0f3cf5001b080000000000aff53caf00000000
d4b503c3fb6bfcb60ffe0a630000000900010001000000000001000008a2
fdfe00000ff4fb6bf9c20ffe000100000000000000000000000000001488
052a00a60000000000c7000002310000024600b4032300a304ba00210450
00a2068c00500667007701d700a3026a008c026a00160356004c057900e8
01bc00270333009001bc0070031effe404500056045000e40450006d0450
007b0450000e045000a40450006f045000620450005a0450005e01bc0070
01bc002705790110057900e8057901100396008307a400ac052900160496
00bc04f4005e059c00bc040c00bc03e800bc057d005e05ae00bc022100bc
02db001404a400bc03c400bc072f00bc05fc00bc0608005e047b00bc0608
005e04c900bc0440007904310029057f00aa04f800120779001a04b8001a
046c001204900021026a00c80308ffe6026a0035057900e6035200000225
00520412005a04b400a603b2006004b60060042f00600281003504b60060
048700a601f0009001f0ff3a03fa00a601f000a606e400a6048700a604b0
006004b400a604b6006002c800a60365006802b6002b0487009003d5000e
05c8001803ac001a03df000e039e0021026a005c01ea00ac026a00420579
00d1052900160529001604f4005e040c00bc05fc00bc0608005e057f00aa
0412005a0412005a0412005a0412005a0412005a0412005a03b20060042f
0060042f0060042f0060042f006001f0005801f0ffec01f0ffd301f0ffc9
048700a604b0006004b0006004b0006004b0006004b00060048700900487
00900487009004870090030000300304006c045000b80450006a03960083
034000a403aa0054045a00a603330090071f0138071f00a2062f004c0242
00870350007d057b00e806e2000a0608005e06890052057900e8057b00e8
057b00e804500044049e00a60448004e04ef0033060800bc045100be0323
00520372004e060a006406a8005a04b000310396008f02310000024600b4
057900e80533007b0450005e057b00d105280033040c005c040c005a05dd
008c05290016052900160608005e0772005e076c00600400000008000000
0304006a0304006e01d5006a01d5006e057900e804ab006c03df000e046c
00120162fec8045000660287005c0287005c047000350470003503000030
01bc007001d500580304005809ae005005290016040c00bc05290016040c
00bc040c00bc022100780221fffc0221fff10221001b0608005e0608005e
0608005e057f00aa057f00aa057f00aa01f000a602f8005c02b20023027b
003e026e0025019c006c023e005201a4003302980040017b003e02f80066
03c4002102310016044000790365006804900021039e002101ea00ac059c
001c04790060046c001203df000e047b00bc04b400a6057900e80579010c
02cf005002ee006802ee00810772005007400050079e008103e8001c057d
005e04b60060022100ad044000790365006804f4005e03b2006004f4005e
03b2006004b600600352000001bc0070052900160412005a052900160412
005a059c00bc05650060059c001c040c00bc042f0060040c00bc042f0060
03c400bc01f0008e03c400bc027500a603c400bc028500a605fc00bc0487
00a605fc00bc048700a60608005e04b0006004c900bc02c800a604c900bc
02c8009704400079036500680431002902b6002b043100290385002b057f
00aa04870090057f00aa0487009004900021039e002104900021039e0021
03c600bc0608005e0608006004ea005a04ac005c038100520499006103e6
0022059800600352000003d700b40323006e08e200bc04fc00bc03f60090
04d9ffd701d500820304008d066e00960296000e04d5009202d5008302d5
008304d500b202d50070052900160412005a04f4005e03b2006004f4005e
03b20060040c00bc042f0060040c00bc042f0060040c00bc042f0060057d
005e04b60060057d005e04b60060057d005e04b6006005ae00bc048700a6
05ae001c0487001e0221ffd001f0ffad0221001301f0ffef0221fffe01f0
ffdb0221005001f0003702db001401f0ff3a04a400bc03fa00a603fa00a6
03c400bc01f0002705fc00bc048700a605fc00bc048700a60608005e04b0
00600608005e04b0006004c900bc02c800a6044000790365006804310029
02b6002b057f00aa04870090057f00aa04870090057f00aa04870090057f
00aa048700900779001a05c80018046c001203df000e01ee00a605290016
0412005a06e2000a06a8005a0608005e04b0003101bc00700779001a05c8
00180779001a05c800180779001a05c80018046c001203df000e01d5006e
035200000450006a04cd00550760005007600081076e008c072300a2031e
00db031e00db01bc0027022e00ce022effda052900160490ffc50631ffc5
0307ffc60668ffd10556ffb3069cffd10222ffb205290016049600bc040c
00bc0490002105ae00bc022100bc04a400bc05080018072f00bc05fc00bc
0414003a0608005e05b400bc047b00bc0421002e04310029046c001204b8
001a06350088060a00640221fff1046c001204ea005a03810052049a0082
022200a6046c0014046200a7042700050389004c049a008204b100610222
00a6043100a603fcfffe049e00a70435000c038f004d04b0006004b000a1
03af0057046c0014044e000c06000098067700770222ffed046c001404b0
0060046c001406770077040c00bc059a002903c600bc04f0005e04400079
0221fff107d9001007de00bc05c8002904a400bc048a003c05ab00bc0529
0016049300bc049600bc03c600bc058c000f040c00bc06efffea04520060
05fe00bc05fe00bc04a400bc05620010072f00bc05ae00bc0608005e05b4
00bc047b00bc04f4005e04310029048a003c05d0005e04b8001a05f000bc
054a00a6079800bc07d700bc05a50029064400bc049c00bc04ee00680826
00bc04ba003d0412005a04a20077043d00a6031000a604600012042f0060
05f800040391005004a600a604a600a603fa00a604370010059e00a6049e
00a604b00060049e00a604b400a603b200600348001e03df000e057d0060
03ac001a04cd00a604850098066600a6069800a604ba001e05ad00a60408
00a603b2005a068100a60406003e042f0060049e0027031000a603b20060
0365006801f0ffd306520010067400a6048a002703fa00a603df000e049e
00a603c000bc032000a60800000008fa00bc0504001102cf002f02ee007b
02ee004d02ee004101f000a6044000790365006804720064061a005e04c7
006005aa00aa04b40090026e00ab02aa00f2022500660225006403d30042
03d3004203d3006c03d300a9026e0025026e0038026e002503d300a9026e
00ab03d300a9026e0025026e0038026e002503d300a903d3006c05290016
0412005a052900160412005a052900160412005a052900160412ffe80529
00160412005a052900160412005a052900160412005a052900160412005a
052900160412005a052900160412005a052900160412005a052900160412
005a040c00bc042f0060040c00bc042f0060040c00bc042f0060040c00bc
042f0060040c000e042f000c040c00bc042f0060040c00bc042f0060040c
00bc042f00600221009a01f00088022100b201f000900608005e04b00060
0608005e04b000600608005e04b000600608005e04b000300608005e04b0
00600608005e04b000600608005e04b00060061a005e04c70060061a005e
04c70060061a005e04c70060061a005e04c70060061a005e04c70060057f
00aa04870090057f00aa0487009005aa00aa04b4009005aa00aa04b40090
05aa00aa04b4009005aa00aa04b4009005aa00aa04b40090046c001203df
000e046c001203df000e046c001203df000e0431002902b6002b040c00bc
042f006005fe00bc04a600a6022100bc02db001401f0009001f0ff3a041e
00290348001e0748ffea063e000404e600bc043e00a604a400bc03f600a6
05f000bc04cd00a6046c001203df000e046c001203df000e0504001a03f2
001a053e00a604850098054a00a6048700a605c40056042f00520608005e
04b00060026e003e026e003e026e003e026e003e0350007d0350007d03d3
00a903d300a903d300a903d300a90225001402250014026e001e026e001e
026e0014026e0014040c00bc042f0060052900160412005a049600bc04b4
00a6049600bc04b400a6049600bc04b400a604f4005e03b20060059c00bc
04b60060059c00bc04b60060059c00bc04b60060059c00bc04b60060059c
00bc04b60060040c00bc042f0060040c00bc042f0060040c00bc042f0060
040c00bc042f0060040c00bc042f006003e800bc02810035057d005e04b6
006005ae00bc048700a605ae00bc048700a605ae00bc048700a605ae00a0
0487008c05ae00bc048700a60221ffcf01f0ffb90221fff201f0ffd404a4
00bc03fa00a604a400bc03fa00a604a400bc03fa00a603c400bc01f00095
03c400bc01f0fffa03c400bc01f0fffc03c400bc01f0ffdf072f00bc06e4
00a6072f00bc06e400a6072f00bc06e400a605fc00bc048700a605fc00bc
048700a605fc00bc048700a605fc00bc048700a60608005e04b000600608
005e04b000600608005e04b000600608005e04b00060047b00bc04b400a6
047b00bc04b400a604c900bc02c800a604c900bc02c800a604c900bc02c8
00a604c900bc02c800a60440007903650068044000790365006804400079
03650068044000790365006804400079036500680431002902b6002b0431
002902b6002b0431002902b6002b0431002902b6002b057f00aa04870090
057f00aa04870090057f00aa04870090057f00aa04870090057f00aa0487
009004f8001203d5000e04f8001203d5000e0779001a05c800180779001a
05c8001804b8001a03ac001a04b8001a03ac001a046c001203df000e0490
0021039e002104900021039e002104900021039e0021048700a602b6002b
05c8001803df000e0412005a01ee004e04ea005a04ea005a04ea005a04ea
005a04ea005a04ea005a04ea005a04ea005a052900160529001605eeffbc
05eeffbe05eeffbc05eeffbe05eeffbc05eeffbc03810052038100520381
00520381005203810052038100520490ffbd0490ffbe05b2ffbc05b2ffc0
05b2ffbd05b2ffbf049a0082049a0082049a0082049a0082049a0082049a
0082049a0082049a00820630ffbd0630ffbe0756ffbc0756ffc00756ffbd
0756ffbf0756ffbc0756ffbc022200940222006e0222ffdd0222ffb30222
001b0222ffea0222ffc00222ffc00306ffbd0306ffbe03f8ffbd03f8ffc0
042affbc0434ffbf042affbd042affbd04b0006004b0006004b0006004b0
006004b0006004b00060066effbd066effbe07a0ffbc07a0ffbe07a0ffbc
07a0ffbe046c0014046c0014046c0014046c0014046c0014046c0014046c
0014046c00140556ffbe068cffc0068cffbf068cffbc0677007706770077
067700770677007706770077067700770677007706770077069cffbd069c
ffbe07a6ffbc07a6ffc007a6ffbd07a6ffbf07a6ffbc07a6ffbc04ea005a
04ea005a0381005203810052049a0082049a008202220034022200a604b0
006004b00060046c0014046c0014067700770677007704ea005a04ea005a
04ea005a04ea005a04ea005a04ea005a04ea005a04ea005a052900160529
001605eeffbd05eeffc105eeffbd05eeffbf05eeffbd05eeffbc049a0082
049a0082049a0082049a0082049a0082049a0082049a0082049a00820631
ffbc0630ffbe0756ffbc0756ffbe0756ffbc0756ffbe0756ffbc0756ffbc
067700770677007706770077067700770677007706770077067700770677
0077069cffbc069cffbe07a6ffbc07a6ffbe07a6ffbc07a6ffbe07a6ffbc
07a6ffbc04ea005a04ea005a04ea005a04ea005a04ea005a04ea005a04ea
005a05290016052900160529fffb052900160529001604b001e404b001ba
04b001e404b0014004b00133049a0083049a0083049a0083049a0083049a
00830490ffac0490ffc40631ffac0631ffc405ae00bc04b0014a04b00142
04b001330222ffec0222fffa0222ffb20222ffb20222ffdf0222ffd50221
fffe0221001202e8ffae0307ffc604b0014404b0013804b00133046c0014
046c0014046c0014046c001404b000a104b000a1046c0014046c0014046c
0012046c00120556ff960556ffb20504ffbe04b0010204b0010204b001d1
0677007706770077067700770677007706770077069cffac069cffd106b3
ffac069cffd1060a006404b001d104b001e20000fee80000fec00000ff02
0000fe580000feee0000ff9e0000fedd0000ff330000fedd0000fee80000
ffcb0000ff580000fedd0000feee0000feee0000ff8c0000ff8c0000ff8c
0000002f0000ff3e0000ff3e0000ff480000ff480000ff160000ff520000
ffa60000ff4c0000ff4c0000ff4c0000ff030000ff1a0000ff1a0000fedd
0000ff350000ff9c0000ff560000ff5d0000ffcb0000fe9c0000feb10000
fee80000fee80000feee0000fee90000fec00000ff050000fe570000fe57
0000fec00000ff020000fe580000fe660000fe700000ffa60000fe9c0000
ff440000fea50000ff300000ff9e0000fe570000fe700000000a0000fec0
0000ff9c0000feaa0000ff640000fe9c0000fe2a0000ff580000ff4c0000
fec00000fec00000fec00000fea80000ff5c0000fd0e0000fce60000fdaf
04b4002104e8ffac049300bc04b400a6049e003304b4002104f6006a04f6
005e03ba0060059c001c05eeffac0494005c04b4006004bc0060040e005a
0454007003e8ff9a0589005e04f8001206fe00a6024e00b8023a002904a4
00bc03fc00a601f0001403fcfffe072300b805fcff9a049a00830608005e
07c0005e0652006004cfffac04b400a6049c00bc04400062036500560421
002d025eff8302b8002b0433ffcd02b8002b04330027060a006205b200b8
048e000f0423000e04900021039e002104e2000a04e2005e0389001e0346
000a0450006004500074030a00480327001e045e00a601ea00ac031000ac
03a60033024600b409e800bc091c00bc0833006006d900bc05c200bc0401
00a6089400bc07be00bc067700a605290016040a00520221fff701f0ffdf
0608005e04b00060057f00aa04870090057f00aa04870090057f00aa0487
0090057f00aa04870090057f00aa04870090042f005205290016040a0052
05290016040a005206e2000a06a00052057d005e04b60060057d005e04b6
006004a400bc03fa00a60608005e04b000600608005e04b0006004e2000a
0389ffdd01f0ff3a09e800bc091c00bc08330060057d005e04b6006007fe
00bc058300bc05fc00bc048700a605290016040a005205290016040a0052
040c009e042f0060040c00bc042f00600221ff8601f0ff6e0221fff801f0
ffe60608005e04b000600608005e04b00060049a00a002c8000404c900bc
02c8009a057f00aa04870090057f00aa04870090040800100370001e05ae
00bc048700a605df00bc04b8003e0489004804900021039e002105290016
040a00520608005e04b000600608005e04b000600608005e04b000600608
005e04b00060046c001203df000e04b00133040a01080487011c0487011c
04b00123040a009004b6006004b400a604b600a603ba005a03ba006004b6
006004b60060042f005204e60050034e0060034e005a040e005a04680060
0238ff8104b6006004b60060043c006003d5000e03a8000a048700900487
00a6048700a60218000a023a00940290004c023effec0302ffec01ee00a6
04d300a606e400a606e400a606e400a60472ff96047200a604b000a604b0
00600596006005c40060051a006002c8000c02c8000c02c8000c02c800a6
02c800a602ae009002ae000c03a200a603a200a6032f006801faff920210
ff9e024effa60244ff4402b8003802b8002b04cb002104c2006004770090
03d5000c05c8001803df000c0356000a039e0021041800210389ffdd0389
ffea02ec001c02ec000402ec000003ba006004f2006003df00a60462005c
043c0060048700a601eeff1803fc0004031400a604b6006002ec001c02ec
0004075400600798006007cf006004e8002b03cf002b05be002b06580035
04a40098048e00a603f4003103f40074046200a604ba001404850012056c
ffb104850012051a0060066a000004900000059e005604b0006004a8005e
03a4006003fc00bc039c009004c400480404003304e4000003f2ff7b0723
00b806e400a604d5003304140033051600000444ffec04e2004803ae003e
04c4001403e20014054c005e04b000600485000a034400000490000004a8
00a203b2006001f0ff3a0608005e03bc006003bc006006e8001e056c001e
052b002904a40029074400bc05b800a60552001603fe000c06fc00bc0587
00a605d300290485001e077000bc05fe00a6045200310399002106440066
061400660608005e04b0006005c2001204a0000e05c2001204a0000e0a7f
005e08f20058069c005e053300600908005e0727006006e8001e056c001e
04b4005e038100600400002d03270052034c005e0000ff900000ff8607e2
002107980035049c0029040c002d047c00bc04b500a6048c00bc040400a6
0452006003a2005804a4001203fa002705ae002904a6001e06b800bc054e
00a6081600bc06b000a605c6005e0474006004f4005e03b2006004350029
0348001e06fa00290579001e057f00a604b4009806ae00290510002906ae
002905100029022100bc06efffea05f8000404a400be040c00a605ae00bc
049e00a6053e00a604850098052900160412005a052900160412005a06e2
000a06a8005a040c00bc042f006005c40056042f005205c40056042f0052
06efffea05f800040452006003910050042f00520389ffdd05fe00bc04a6
00a605fe00bc04a600a60608005e04b000600608005e04b0006004ee0068
03b2005a048a003c03df000e048a003c03df000e048a003c03df000e054a
00a604850098064400bc05ad00a6048e005604b6006006d3006406e20060
0670002905c6001e0477002903cb001e073e0018065e001407ea00bc06cb
00a605b8005e043e00600566002904c8001e04b001330487011c0487011c
040a010804b0012302aaff8c0000ff270000ff210000ffcb0000ff040000
ff2b0000ff2b0000ff140000ff2b0000fe960000ff9c0000ff6a0000ff10
0000ff2301d5007201d5007204b001ba02b0006602b00066014effbe01b2
006601b2000a01b2000a023e0066032d0014023a000a01d500820304008d
01c7006a01c7006e01c7006e02aa00fb02aa00fb01ba001401ba000a04ac
007204ac007004ac006604ac006602aa0120024200870225005202aa0120
027b003e0225005202420087023900b6023900b602aa00fb02aa00fb02aa
00a002aa00a002aa00a0027b003e02aa007902b000480256000a014c0066
01f0003e0242001401ba000a031000960310009603100096031000960310
009602aa006202aa006202aa003c0352000002aa006e01f0ff3a0218000a
045700960457009604570096045700960457004304570043045700430457
004304570043031000430457002f0457002f0457002f0457002f0457002f
0310002f04570025045700250457002504570025045700250310002f0457
001a0457001a0457001a0457001a0457001a0310001a0457004204570042
045700420457004204570042031000420457009604570096045700960457
00960457004204570042045700420457004204570042031000420457002f
0457002f0457002f0457002f0457002f0310002f0457002f0457002f0457
002f0457002f0457002f0310002f04570026045700260457002604570026
045700260310002604570042045700420457004204570042031000420457
009604570096045700960457009604570042045700420457004204570042
045700420310004204570026045700260457002604570026045700260310
00260457002304570023045700230457002304570023031000230457002f
0457002f0457002f0457002f0457002f0310002f0457004b0457004b0457
004b0457004b0457004b0310004b04570096045700960457009604570096
0457004204570042045700420457004204570042031000420457001a0457
001a0457001a0457001a0457001a0310001a045700240457002404570024
0457002404570024031000240457002f0457002f0457002f0457002f0457
002f0310002f0457004e0457004e0457004e0457004e0457004e0310004e
04570096045700960457009604570096000000000000ff540000ff540000
fda70000ff6805270060026000a6050e00a602b6002b04bcffdb04bcffdb
02aa008502aa008502aa00c802aa00c802aa008702250052029800280298
002802b20023023900ad02aa009802aa009802aa009802aa009802aafff0
02aafff202aa003a0000ff740000ffa60000feee0000ff300000ff740000
ff740000fea10000ffa60000fce60000fce60000fce6047b00bc04b400a6
03c0000a054a000006a2005203df003e03b20060046600a60470003c0356
00a6034c005a01ee008e0262001403fa00a603230042059e00a604a600a6
04b0006003cd005a04f2006004f2006004f2004c07700052044a006004c2
006004c2006003b200a603a2001e03a2001e0348001e0446009004890066
05be003e0489006603d5000e05c80018039e002103580050034a0050043a
0014031000a603c0000a049e00a603b200a604ba0060047d000a02e2000a
03e6fff602c6007b02db00230346007b0272007b027200480346003e0364
007b0179007b01d3000a02d5007b0244007b0431007b0381007b0381007b
0368003e030c003e02b6007b02c2007b0252000a03500074043500100285
003e0285006602c6003e03df004802c6006602c6003e027d003e027d0048
021c003e021c004202c6003e014e0058026a006603fa006602b0006602bc
003e0229003e02bc003e02bc003e02be0066019c000a02a6005c029c003e
03fa00600240000a028e001402ac00600256ffec02bc003e0344003e0262
fff6014e005801b2006602a6005c0240000a02ac00600256ffec02c60066
0344003e0262fff604a600fc014e005802c60066045700420704008f04fe
0074045000760450007606e400a6052a002306da00bc05f4001404370064
04b600600400002a039600290900002c03a4003004b50026071f00a2077a
0060077a0060050600160529001604f4001603b2002103c400120431ffef
03650068039e002104160030019c006c0000ff2b0000febd0000ff600000
fce604b0002104f4006804f4005e04f4006803c600bc031000a604b4ffbb
04b600600281fff806e4ffc00487ffc004b4ffbb02c8ffbb02aeffa503b5
002702b6ffef039e002104b600a603b1007a049f0060073d0016052e0016
0290004a0222fffb04b400220446002204c2001404b400a604b600600281
003504b6006003fa00a601f0005c06e400a6048700a604b400a602c8005c
036500680376ff9203d5000e03ac001a039e00210412005a04b6006004b6
0060042f0060038100520391005005e0005201f0009003ba005a01faff92
048700900389ffdd02c600660222003e0226003d02bd003e021c00420177
000a014effdd02c6003e02a6005c014e000f017400660162001101620011
014eff8701740066014c003101cb006603fa006603fa006002b0ffbc02b0
006602d0006602b0003e02ef003e01d80042014effc9019c000a02a60005
02bd003e02a2005c0293005c0240000b0217001a0217001a025b001a0212
fffb02bd003e0000ff3e0000ff3e0000ff9c0000fedd01bc00700285003e
027d003e02bc003e02230012027d0048045100540451000c045100690451
005602aa00420000ff500000ff500000ff500000ff2903b50027027b003e
0223001204ea005a04ea005a04ea005a04ea005a04ea005a04ea005a04ea
005a04ea005a0222fff9022200020222fffc0222ffe50222ffee0222ffee
0222ffee0222ffee046c0014046c0014046c0014046c0014046c0014046c
0014046c0014046c00140222ffd30222ffd30222ffd30222ffd3046c0014
046c0014046c0014046c00140aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b4045100bc02ee0048
02ee004902ee004902ee005d02ee005d02ee005d026a00cc026a00640160
005b02ee006802ee008102cf007f02ee004802cf002f02ee007e02ee0049
02ee004d02ee004802ee004902ee005d02ee005d02ee005d026a00cc026a
006402ee004802cf007f02ee006802ee008102cf002f02ee007e02ee0049
02ee004d02ee004802ee004902ee005d02ee005d02ee005d026a00cc026a
0064064600bc050d00a605aa0010049f001005f800bc050600a6077800bc
060600a60450005a0304006e041d008d057900e80447005e068e00bc059e
00a60000ffdc0000ff250000ffdc0000fe51020100ab020100490201ffa2
0201004902acffba02acffba02acffba04adffba04ad007e04adffba04ad
007e04adffba04ad007e06aeffba06aeffba0804ffba035600b90201002b
0402002b04ad002b035700620402004f0402ffef04adfff404ad00490402
00220804ffba04aeffba04adffba04ad006504aeffba04adffba04ad0065
0402ffba0402ffba052a00a60402ffba0402ffba0402ffba02acffba04ae
ffba02acffba0603005305580067040200a102acffba06ae009a040200a1
06ae009a0201006f02acffba04ad005204ad0052052a00a6052a00a6052a
00a604ad004904ad004904adffa206ae00820201000004adffa20201006f
040200ab0357005a0201ffa2020100490402000002010049060300820201
00ab075900ab040200ab075900ab075900ab04ad007e04ad007e04ad007e
04020052040200520357000003570000095a009b095a009b0ab1009b0ab1
009b06ae001906ae001904020065040200650156ffba080400ab0603009b
06ae00ab0558009b04ad00390558009b040200ab040200000603009a0603
009a000000050000ff3300000005000000050000ffbf000000050000ffd4
0000004504ad005202010052052a00a60000ffa2052a00a6052a00a6052a
00a602acffba0402ffba0402ffba075900ab02acffba075900ab02acffba
04ad007e0558007e04adffba03570000075900ab0402ffba075900ab0402
ffba0603009a06ae009a02acffba040200a1040200ab035600b90201002b
0402002b04ad002b0402002b04ae00720402002f04adfff404ad00490402
00220558009b052a00a6075900ab02acffba04020052035700000558009b
040200ab02acffba0402ffba040200ab040200ab0759007202ac00720759
007202ac00720201002d04ae007c031d0042080400ab0402ffba0402ffba
052a00a6052a00a6080400a104020057000000c40000ff1700000010052a
00a60000ffc2052a00a6052a00a6052a00a6052a00a60603009b052a00a6
00000049000000490201ff970201ff970201ffc20201ffc20201ffc20201
ffc2035700ab035700ab040200000402ffe70603009a06ae009a075900ab
02acffba075900ab02acffba075900ab02acffba075900ab02acffba0759
00ab02acffba075900ab02acffba04ad007e04ad007e04adffba04ad007e
04ad007e04adffba04ad007e04ad007e04adffba04ad007e04ad007e04ad
ffba04ad007e04ad007e04adffba04ad007e0558007e04adffba04020052
040200520402005204020052040200520402005204020052040200520357
0000035700000357000004020000035700000357000003570000095a009b
06aeffba095a009b06aeffba095a009b06aeffba0ab1009b0804ffba0ab1
009b0804ffba06ae00190402006504ad006504aeffba04adffba080400ab
080400ab0402ffba0402ffba080400ab0402ffba0402ffba080400ab0402
ffba0402ffba080400ab0402ffba0402ffba0603009b0603009b08af0019
0804ffba075900ab0402ffba06ae00ab0402ffba06ae00ab0402ffba06ae
00ab0402ffba075900ab0402ffba075900ab0402ffba075900ab0402ffba
075900ab0402ffba075900ab0402ffba0558009b02acffba0558009b02ac
ffba0558009b02acffba0558009b02acffba0558009b02acffba0558009b
0558009b02acffba0558009b02acffba0458007e0558007e04adffba0402
000004020000040200000402000004020000040200000402000004020000
06ae00320758001e0603009a06ae009a02acffba040200000603009a06ae
009a0603009a06ae009a0000ffa80000ffb7000000370000001d0000ff2b
08fc003208ad0032000000630000006300000023000000160000ff2b0000
ffc90201004d035700210000ff820000003204cd00320000001000000010
00000016095a009b06aeffba0ab1009b0804ffba0402006504ad006504ae
ffba04adffba0357005a04ad003904adffc204adffc204ad003404ad0034
04ad003a04ad003a04ad005204ad005204ad005204ad005204ad005204ad
005204ad005204ad005204ad006504020052075900ab075900ab02fe0000
04adff9704adff9704c10066075900720ab0fdcf08af0049095a007208af
004902ac004604ad00320000ffc90000ffe9000000030000ff880000ffc4
000000c40000ffbf000000320000ffc60402005204020052035700000357
000006030053055800670558ffba0402ffba0000fe930000fea90000fe91
02acffba02acffba02acffba02acffba0a0500a10c06009b0000ffd40000
ffd40000ffd40000ff6c0000ffd404ad0035040200650000ffe70000ffdf
0000ffdf000000970000003d00000005075900ab0356ffba075900ab02ac
ffba075900ab02acffba075900ab02acffba075900ab02acffba075900ab
02acffba075900ab02acffba04ad007e04ad007e04adffba04ad007e0558
007e04adffba040200520402005203570000095a009b06aeffba04020065
04ad006504aeffba04adffba0402006504ad006504aeffba04adffba0402
006504ad006504aeffba04adffba080400ab0402ffba0402ffba080400ab
0402ffba0402ffba075900ab0402ffba0402ffba075900ab0402ffba0402
ffba075900ab0402ffba0402ffba04ad003904aeffba04ad003904aeffba
0558009b02acffba0558009b02acffba0558009b02acffba0558009b0558
009b02acffba02acffba0357000003570000095a009b06aeffba052a00a6
04ad005204ad00520000ff1a0400ff1a0400019f040001b302f400140496
001c057f001e05070018040c008b042f006002db001401f0ff3a0601005e
04b6006004c9001c02c8001c046c001203df000e03cd005a03b2006003cd
005a01f000a6041e00290348001e04f4001a03e0001a04b8001a03ac001a
045400700381005205620010043700100000003e0000003f0000003e0000
003f0000003f0000003f0000006600000077000000db05ed0035039c0048
03cd005a03c4001c024a001404190027047b001c04c900bc0412005a02b6
ffb505f000bc04b300a6051c00bc044a00a604f5002103fb0021048d004b
041f00bc032b00a60598006002f700af034f00af035a00af03de007504c9
007504c900750400000008000000040000000800000002aa000002000000
015500000450000001bc000001000000000000000118000001c700000000
000003570000035700000357000003570000035700000357000003570000
035700000357000003570000035700000357000003570000040200ab0402
00a1076c00790364003f0608005e04b600600779001a05c8001804f500b0
0000fc8c0000000000000000000000000000000000000000000000000000
00000760004a0760008d06e7009603c7009606e700e703c7009606e50096
05280033057800e6059d00e6059200e6061e00e606e400a5080000a506e4
005006e400a506e4005006e400a506e4008c06e4020d06e400a5057a005e
057a005e057a005e057a00cd05e8005e04a0000e087e001a069d001803c7
009603c70096024600b4024600b4024600b402f8006301bc0070048200e8
01d7009401d700a306ae039b051002d60000000000000000000000000000
000000000000000000000000000000000000000000000000ffa400000000
0000ffa50000ffcd0333004b0000fed2019d0094000002000000fd3c01bc
00700000ff9c0000ff9c051800a5049000500382003103d90020056c00b8
022500be02b20031056500be057200a0022500be0478002f045c004e0468
0059058d00be056500a4022500be033200670568009604d6005904e4006c
050c00960485001e04af004b054f00420479002f0647006e05cf0034042e
00be042e00be042e00be01d5006e0304006e0478002f0478002f0468ff51
0468ff51045300be04d60059051800a503d90020056c00b8045c004e0468
0059058d00be0479002f05cf0034046a005f0647006e064700610647006e
06470061051800a5051800a5051800a5049000500382003103d90020056c
00b8026bfffb02dafffa057200a0026bfffb0478002f045c004e04680059
056500a4033200670568009604e4006c050c009604af004b054f00420479
002f0647006e05cf0034022500b504900050045c004e050c009605380059
099a000000000000051800a5046800590538005905520059053800590000
ff430000ff150000ff730000ffa10000ff490000ff450000ff610000feab
0000fe26000000640000ff420000ff45000000640000fee10000fe060000
ff170000ff5b0000ff430000ff6a0000ff4b0000ff450000fee10000ff68
0000ff450000ff170000ff430000ff4b0000ff6a000000640000fd870000
ff290000ffa4033200ab022500b60000feb20608005e0522003305550064
05a6005a046800640555006405f600320619005e03c400200508008c05f6
003205e2005c054a00c90608005e067f00320636003205550064046800b0
047b00bc0608005e05a6005a04940032057f00aa056b00a6054a00a6056b
00c9057d005e05e2005c049c00bc05190064056b00c9053b003206310032
050e00c904f4005e05220033055a0096068c005203f8006004b0006004b0
0060070000600451006004510060062c003c0721006004e1006004510060
086600600488006004880060060e0060045100600451003f060e0060047d
009a0608005e0682006006ff004004510060062e006004510060053b0032
045800a604eb006004880060050d00320450005004d600ae062700210453
006004f50060054f00320451005e0451006004c4005207a8006004510060
0451005f04b0006004b100400364007002a8003204750028047500280475
00280448003004750028071000280475ff3f0713005b03f4002804750059
0717003105510030047500310713005b05f2002805f20028070c0059049c
0059047500420713005b0713005b0472007104750028047500280475005b
0475002f04750042070c00590710003f04b00021047500420489ff8a0717
003104c5002f045600350475004604750028070c0059063a00aa057f00aa
0586005e05940078057f00aa05a8006404ff00bc057f00aa063f00aa0586
005e053300aa045800bc065300bc0562005e057f00aa049000210554005e
0594007805f6006205c600aa04ab005e0594fff60554005e05cf00aa0554
005e06330082059a006405c600aa05cf00aa057a005e05190064059d00aa
056f009005c600aa0656005e053f00140608005e05cb008600ca000000e1
00000135000001920000013500000229000002ce000006e40090048700a6
04f2006004c300a6048700a604ec0060048700a6048700a6052b00a604ca
005e048700a6027600a606b100a604b0006004870090048700a604570060
04d400a60418006004a500900226ff7004b0fff604260060048700a6034c
006006e4009004640060048700a60487009004be009006a6008f048700a6
04b60060032600a606a6008f04b4000004b00060057f00600572009001bc
00700242002a090e009008f8009008f80090090e00900b67009004500083
0450003701f000900450005c031e0079045000990450007b047d00320450
00a40450006f041e00450450005a0450005e0450005c045000e804500099
0450007b04500032045000a40450006f045000600450005a0450005e0450
0056031e00530450006d0450007b047d0032045000a40450006f041e0045
0450005a0450005e04500056045000a804500060045000830450000e0450
00a40450006e04500056045000640450005e02ee004802ee005002ee0068
02ee008102ee002f02ee007b02ee004902ee004d02ee004102ee00490404
000003ec00b0040f005804ac00b0037000b0035b00b00494005804e900b0
020400b00281001103ec00b0034c00b0061200b0052a00b004ed005803e0
00b004ed005803f800b0035d00680385001904c2009c0415000006690005
0402001e03bb001403db0029059ffff806310058034c00380501004103e0
00b004ac002d043300a60404000004040000040400000404000004040000
04040000040f0058037000b0037000b0037000b0037000b00204fffc0204
00870204ffe90204ffe0052a00b004ed005804ed005804ed005804ed0058
04ed005804c2009c04c2009c04c2009c04c2009c03bb0014040400000404
000004040000040f0058040f00580494005804ac00b004ac002d037000b0
037000b0037000b0037000b0037000b00494005804940058040f005804e9
00b004e9002d0204ffc3020400040204fff10204003f020400a0048500b0
0281001103ec00b0034c00b0034c00b0034c00b0034c00b0052a00b0052a
00b0052a00b0053800b004ed005804ed005804ed005803f800b003f800b0
03f800b0035d0068035d0068035d0068035d006803850019038500190385
00190385001904c2009c04c2009c04c2009c04c2009c04c2009c04c2009c
0669000506690005066900050669000503bb001403bb001403bb001403db
002903db002903db002904040000059ffff8050100410404000003ec00b0
0322009c044a002a037000b003db002904e900b004ed0058020400b003ec
00b004150000061200b0052a00b00395004904ed005804e700b003e000b0
03ac00300385001903bb0014050200500402001e0540007d051000580404
0000037000b004e900b00204008704ed005803bb0014051000580204ffe0
03bb0014037000b0048d0022033600b004190058035d0068020400b00204
ffe0028100110680000d069400b004e1002203ec00b003f4003604df00b0
0404000003e700b003ec00b0033600b004af0012037000b005e700000388
0050052a00b0052a00b003ec00b0048a000d061200b004e900b004ed0058
04e700b003e000b0040f00580385001903f40036050200500402001e0511
00b00460007d067300b006a400b00489002205a100b003ec00b0041e0054
06e000b003e90012033100b004a5003504a7003504fa0035071e0035071e
003505450057040f005804940058035d0068049600bc047b00bc047b0052
059c00bc0431002904310027057d005e04a400bc04a4000202db001404f4
005e04f400680490002103e800bc03e80054072f00bc05fc00bc03c400bc
0440007904c900bc04c9000904f8001204f8001205ae00bc057d009102db
00b00779001a04b8001a046c0012049600670529001605290017040c00bc
040c0058022100bc0608005e057f00aa057f00aa03c40020059c005e01bc
007001bc0027037800700378007001bc002701bc007004ef009003330090
022100300608005e05a60077024600b401bc005c01bc005e039600830304
006f0304006801d5006f01d5007401d50062030400680565006003c400bc
027500a604d9ffe4057d005e04b6006004a400bc03fa00a605fc00bc0487
00a604c900bc02c800a60385002b044000790365006801bc005e01d50074
031f013d0431002902b6002b0558ffba0558ffba0558ffba0759001e0603
007c0759007c020100760000ffc800000043000000370000000d00000037
020100700603009a06ae009a02acffba02acffba0402000002acffba0759
00ab02acffba075900ab02acffba075900ab02acffba04adffba04adffba
04adffba0402005204020052095a009b06aeffba095a009b06aeffba0ab0
009b0804ffba0ab0009b0804ffba06ae001906aeffba06aeffba06ae0019
06aeffba06aeffba075900ab075900ab0402ffba0402ffba075900ab0759
00ab0402ffba0402ffba0603009a06ae009a02acffba02acffba0603009a
06ae009a02acffba02acffba0603009a06ae009a02acffba02acffba0804
00ab0603009b06ae00ab0402ffba04ad003904adffba0558009b02acffba
0558ffba060300530402ffba0402000002acffba02acffba02acffba0000
ffd40000ffd80000ffd40000ffd40000ff6c000000050000fff800000005
0000004900000005000000050201004f075900ab02acffba0603009b0402
ffba0402ffba02010049040200000402ffe70402ffba0402ffba075900ab
02acffba075900ab02acffba075900ab02acffba075900ab02acffba0759
00ab02acffba075900ab02acffba075900ab02acffba075900ab02acffba
04adffba04adffba04adffba04adffba04adffba04adffba04adffba0402
005204020052040200520402005204020052040200520402005204020052
04020052095a009b06aeffba095a009b06aeffba095a009b06aeffba0ab0
009b0804ffba0ab0009b0804ffba06ae001906aeffba06aeffba080400ab
080400ab080400ab080400ab080400ab080400ab0603009b0402ffba0402
ffba0603009b0402ffba0402ffba075900ab0402ffba08af00190804ffba
075900ab0402ffba06ae00ab0402ffba06ae00ab0402ffba06ae00ab0402
ffba075900ab0402ffba075900ab0402ffba075900ab0402ffba075900ab
0402ffba075900ab0402ffba075900ab0402ffba0558009b0558009b0558
009b0558009b0558009b02acffba0558009b0558009b02acffba02acffba
0558009b02acffba0558009b02acffba0558ffba0402ffba04adffba0402
005704020057040200000402000004020000040200000402000004020000
040200000402000002acffba02acffba0402000002acffba02acffba02ac
ffba02acffba00000081095a009b06aeffba0ab1009b0804ffba075900ab
0402ffba075900ab02acffba075900ab02acffba075900ab02acffba0759
00ab02acffba075900ab02acffba075900ab02acffba04adffba04adffba
040200520402005203570000095a009b06aeffba080400ab080400ab0759
00ab075900ab075900ab04ad003904adffba04ad003904adffba0558009b
02acffba0558009b02acffba0558009b02acffba095a009b06aeffba04ae
007e0558007e04adffba04adffba04ae007e0558007e04adffba04adffba
095a009b095a009b06aeffba06aeffba035700000357000004ad007e04ad
007e04adffba04adffba02ac001702ac001702ac001602ac00160603009a
06ae009a02acffba02acffba0603009a06ae009a02acffba02acffba0603
009a06ae009a02acffba02acffba04ad001704ad001704ad001604ad0016
0759007202ac00720759007202ac007204ae007e0558007e04adffba04ad
ffba095a009b095a009b06aeffba06aeffba095a009b095a009b06aeffba
06aeffba06ae00ab06ae00ab0402ffba0402ffba020100a4020100030201
00a402010003020100030201ff62020100030201ffc60000ff9700000000
020100890201006002ac001e0201003c00000017000000160000003006ae
009a02acffa202ac004902ac007202ac007202acff9702acffc202ac0034
02ac003a03570017035700160603ffc80603ffc80603ffc80603ffc80603
ffc80603ffc80603ffc80603ffc80603ffc80603ffc80603ffc80603ffc8
0603ffc80603ffc80603ffc80603ffc80603ffc80603ffc80603ffc80603
ffc80603ffc80603ffc80759ffc80759ffc80759ffc80759ffc80759ffc8
0759ffc80759ffc80759ffc80759ffc80759ffc80201fda60201fda60201
fda60201fda60201fda60201fda60201fda60201fda60201fda60201fda6
0201fda60201fda603570039035700390357003903570039035700390357
003903570039035700390357003903570039035700390357003903570039
0357003903570039055800820558009a0558009a0558009a0558009a0558
009a0558009a0603001e0558009a0558009a0558009a0558009a0558009a
0558009a04ad007206ae007204ad007206ae007204ad007206ae007204ad
007206ae00720558009a0558009a0558009a0201fff10201ffea040200a1
0357003904a9006405190065049000210451005f0470000a04b000600451
ffe60455002d04500072045000a1045000c20450011f045000f704500108
045000e1045000a1045000a9045000bc0426007603b0008a0461006d0432
007604b4006c04e2009704e700900540007604a300800487007605350096
041e006405590078060d0082051d008c05fa009606a1006405180087061c
00780581009604840098048401000484005d0484006b0484009404840059
0484007d048400bf0484002b0484002b043e007603b2002d0452007c04d7
000f04ce000a0544001604940041052c00360499008004c2007d04d10082
041500820415009606000082056f00640587006405640064056f006404be
00b404a6008204a5007705e40050062c00500603008c061b00500762008c
07620050059b0050076200320762005005de007206fc007406c400600474
00580624007306cc005d061a007304c0007006ce007405e8007305870082
059d008204d600640525008205f8006e065a00820593006404ee006e05a7
008204a800820446005d0760000007580064075d00640696006107620061
0762006405780046076200640762006105ad008206250082064400b405f5
008205cd008205cd008205290050070c0082061e0082069d008205b70078
05b3007804a2007805e90050058900780589007806d000780610006405cb
0070072d0078045600780410006404780078044b007804e5007804ff0078
0594007805de006404a00078048e007804840080045d007f048b003a045d
007f045d0080048b0080048b0080049f008004840080048b0080048b0080
04110066043c008004b8006604f5006604d3008004d3008003aa00670484
00800484008004b400a004d9008c061f006406be00a0053c00a0053c00a0
0501007b062500a0051a00a0057800e9041a008403cc006904b500840480
008403c9008403f3008404610084046c008403db007003b7008405020060
03a40050045c002d03f6005004620060063f006004810077069e0060044a
000a04850060048f006005f20082028100f006510064057c006405be00b4
054800b4047c00640601000004d000820641006404d5006704d5008404d5
006704d5003f04d5006b04d5005c049f00d604d5005904d5007b04d5008b
022100300221ffd00221fff90221ff8602210030022100300221fffd0389
ffbe039fffbd0398ffc1039fffbe03b9ffc0039fffbe0279ffbf027bffbe
0221fffe0221fff20221fff20221fff20221003002210030022100300221
003004fc00300221ffd1022100300221001c027bffc7027bffc70221fff3
0221fff802210012025dffaf02210030022100140221ffff073800bc0738
00bc073800bc073800bc03e8009305ee004805cd006c03e8006003400077
03e8003e042f00960478002e03e8005c06bf00730692007306e70075038a
0019080c00aa03e8006006af007306af007506bb00820677009304860069
03e8006b03e8006b063e009604ae0020063500aa056500120445005703a0
00260340002508270028034c002b0444002203e9004c03e9000b03e9005f
03e9004e03e900aa0ae5008c06af006e06af0080036e00b2020300b203a5
005301e5002b03b300a601e5007a01e5007a01e5002b03d7000004ae006a
04ae0068045f00000304006f0304006801d5006f01d5007401d500620304
006801d50074034c009006e4008d01bc0070073800bc073800bc073800bc
04ad00ab04ad00ab06ae00a106ae00a106ae000006ae000006ae000006ae
000006ae000006ae000006ae000006ae0000095a009a095a009a0558ffba
095a009a095a009a0558ffba0000ff0e0000ff360000ff720000fefc0000
fe840000ff460000ff2c0000ff200000feec0000ff2c0000ff040000ff2c
0000ff150000ff400000ff3e0000ff230000ff060000ff2f0000feba0000
fe930000ff040000fe940000ff360000ff210000ff270000ff180000fef7
0000fea20000fec20000ff070000feee0000feb204a9002103c1002104a9
002103c10021044000770365007002d900bc02c900a6057f00aa0461007d
05bb0048037200190908005e0726006004befff3046d0032075f00330655
001c06c100bb05fe00a60826006006810063076700bc063000a605290016
03d1000a05d3002904b1001e076700bc05da00a60603001e04df000505f0
003e04cd003e06e8000f05510012070500100557001008d300bc06be00a6
0608005e04b000600608005e04b0006009b6005e071e00600655007e0000
fec207e2006f07e2011307e2002603d1007d0000fe9c0000ff3304a600fc
040101330598000f047600120440007903650067089c0060073b0050078f
00a606e1009805be000f04a400120596002904b0001e043100290348001e
05eb00ae04c7008f043100290348001e068e00290554001e054a00a60487
00a607d100bc068f00a60450002b0499003205dc00e705dc00e706780000
03960083019a000003ac00ac057a005e03730030080000e6080000e601f0
00370000fd3307d1000007d1000007d1000007d1000007d1000007d10000
07d1000007d1000007d1000007d1000007d100000333009008fc003208fc
003208fc003208fc003208fc003208fc003208fc003208fc003208fc0032
0450005304b000bb04b0010104b000af04b000c204b0006a04b0006404b0
003904b0002e04b0007904b00081060400fd06040170060400b90604007d
060400ff0604008c0604001f060400f50604003a060400af04c400b704c4
012a04c4007d04c4008b04c400b404c4007904c4009d04c400df04c4004b
04c4004b051400e1051400dc051400a6051400680514002d0514000c0514
00680514004d051400ab0514007d052800ad05280115052801150528002f
0528004005280034052800550528004f052800c1052800dc074401bd0744
0100074400d2074400ff074400f80744005c074400270744011a07440048
07440023066800bf0668003406680045066801780668009e066800360668
00990668014a066800280668009905dc00ac05dc00a105dc00f605dc00dd
05dc006005dc004305dc007e05dc00d605dc008d05dc010d071c01c8071c
0024071c0037071c0032071c007e071c0037071c0046071c0125071c004b
071c003d066800df066800a3066800c6066800bb066800cf066800cf0668
010806680035066800a706680067066800d0066800d206680147066800a3
066800dd066800dd066800440668009a066800b906680015057801090578
0122057800f80578010e057800b7057800780578006c0578003b057800cb
057800e3041000470410005a041000440410005a0410005a041000440410
004404100030041000470410004404880080048800a30488009b0488005d
048800310488005704880057048800d70488008304880083060401480604
01210604007406040043060400f0060400d60604010f0604008f0604010b
06040120044c009d044c00b6044c0036044c005a044c00c5044c00ab044c
0079044c0074044c00a8044c00ce05c800c305c8016a05c8010805c80120
05c8012105c8003c05c8010505c8005005c800c905c8010105c800d60604
008b060402b10604001f060400b7060400d7060400f90604013706040033
0604011c060400450000000000000000000000000000ff9c0000fee60000
ff9c0382003103d90020056c00b805cf00340239006d01ac005a0239005b
01ac004e05ae00bc048700a605f100290505002b046b006603c500260445
005103da002104ba005104900021035b00b0035d006809080016068b005a
093900160716005a07e4001606c3005a073600160544005a073600160544
005a073600160544005a04f4006803b2005004a4001203fa002704a400bc
03fa00a604a4001203fa0027045b00bc028200a603c4001201f0001e0608
000004b0000006df005e056400600aa5005e07f80060047b001904b4001e
0583001e05a600050679000a06e500050608005e04b6006007d4005e0642
0060045c001e032e000f0479003d03ee000f04f8001203d5ffe80779001a
05c8001804ea0055042d003e047b001204b40027047b001204b4002703d9
00bc033200a603cd00600319001e03c8001402f2ff7604240038042a0043
0269002805650060029f00a607a900a6054d00a602c800a604a700a604ea
002b03b0ffec0608000f04790060030800bc02c800a604a4005a04a40059
049f006003c4002001f000a6061500bc04c900a602f400bc02c800a604fa
005e03ac006005ae00bc0317ffe5063d00bc04cd00a604f4000003b20000
057d000104b6000004a4001203fa002605fc00120487001904c9001202c8
002304400045036500600600ffac03640019043e003e06e4009003e80054
047b0052072f00bd022100bc092b001a072500500731007f0976004a0711
00500753008d075300810707002f071700500760007b0421005003c400bc
04f4005e059c00bc072f00bc059c001a078c001a01f000a603b2006004b6
006006e400a6083c005e059c00bc083c005e04f4006804f4005e065c0105
059c00bc0918005e0760004804270000075900ab02acffba075900ab02ac
ffba04ad007e04ad007e04adffba04adffba06ae001906aeffba06aeffba
06ae0019080400ab0402ffba0402ffba080400ab0603009b0402ffba0402
ffba0603009b0558009b02acffba02acffba0558009b04ad003904aeffba
04adffba04ad00390603008202acffba02acffba06ae00820603009a02ac
ffba02acffba06ae009a0357ffa60357ffa60402000004020000041c0002
041c00020000000000000000000000000000000000000000000000000000
00640000006400000000000000640000006400000000000000000000ffbf
00000000000000000000000a000000050000000500000000000000000000
0000000000000000000000000064000000640000000009860072041f00bc
032b00a6048300500438005005fe00bc04a600a604a400bc07020010055a
001005fe00bc060400a606a5003d068a003e04a400bc03fa00a608090010
06730010085700bc06da00a6057d00a604b40098028100350281003504ac
005c052c00bc0344001e04cc00810421007704a2000603dfffbd05ea00bc
066800600334007804b000600370004901ae000602f7001c044000790468
002101bb007001bc00700178002701bc006f030000300300012e03000030
039600830be800000ff4000002b70025034c005b0111ffda0221fff7031b
000c0372005b0289005a03f3001e0438005c030f0064030f0064030f0064
030f0064030f0064030f0096030f0096030f0096030f0096030f009603c3
009603c3009603c3009603c3009603c300960aa000b40450004006180032
07570026072f00bc0529001603b20060048700a605c2006e05e0007503e8
ff9a02810035054a005e042600600572005e04700060054a005e04430060
0452006005f3005e04bd002804a400020431002905fe003204eafff906a8
005a03a40064042f0013051000290281003504b6006002b7000002c70023
01f0fff6070400a604a800a6048700a6042d0064042d005404b00080076c
0060076c0060078d006007f8006007f800600461007d03ff00b0024200a6
040100a603aa001c04de001c03a3003c0557003c01faff920487009004cb
002106e400a606e400a604eb000e044e000c049c000c044e000c042c001a
03acff1f042cff1f03acfec803df000e026e002502b2006401f4000001bf
000002e4000004a0006005100058025800cf025800cf0258002e0258002e
0258002e0258002e0258002e0258002e0258002e0258002e025800670258
00cf025800cf0258008b028a000c028a000c0000ffd4024effba024effba
024effba02010005020100050d74005207f5003206f9003208630032024e
0029024effba029e0005032a009a020c000502260015024effba024e0021
024effba024e0029024effba024efff8024effba024e0069024effba024e
ffba09bd0019075900ab02acffba02acffba075900ab021200c404020052
040200520ab1009b0804ffba0804ffba0ab0009b075900ab0402ffba0402
ffba075900ab040200ab040200ab03570000035700000000008c0000fe45
02db001405fa00bc04cd00a605aeff98049eff5c0a08000f08460012058c
000f04600012059e0010046500100aa5005e07f800600608005e04b00060
031b000c0289005a04f200280000ff9c05760050045000bc02b00066026a
0066014c006603fa006602b0006602be00660209003c019c000a03b1001e
02ed006e02ed006e02ed006e02ed006e02ed006e02ed006e02ed006e02ed
006e01bc0070043100290368002004b8001a049600bc046200a707b2005a
06770077067400a6065000a606890060078a009005030035057c006804cf
005003250050076e003c0901005403850074093dfff80402006506ae00ab
075900ab075900ab075900ab035700000603009a080400ab0603009b0558
009b000000000000ff2b000000000000000000000032000000320000fce6
0000fb6b0000fb9b0000fc000000fd710000fd0e000000000000fffe060c
00260000fed404ad006504adffba04aeffba06ae00ab0402ffba0402ffba
075900ab02acffba02acffba075900ab02acffba02acffba075900ab02ac
ffba02acffba0000fe840357000006ae009a02acffba02acffba080400ab
0402ffba0402ffba0603009b0402ffba0402ffba0558009b00>
<000000000000004200000042000000420000004200000042000000420000
017600000176000001760000017600000176000001760000017600000176
00000176000001d800000210000002580000029000000314000003660000
036600000366000003660000036600000442000004420000044200000442
000004420000044200000442000004420000044200000442000004420000
055600000556000006420000064200000642000006420000064200000642
0000066a0000066a0000066a000007100000082a0000091e00000a080000
0ade00000ade00000c1000000d7400000e1800000e1800000e1800000e18
00000f3000000f3000000f3000000f3000000f3000000f3000000f300000
0f3000000f300000103e0000113600001204000012040000130c0000130c
0000144800001448000014d0000014d0000015a0000015f20000172e0000
1800000018de000019d6000019d600001a6a00001b8c00001c4e00001d2a
00001d2a00001e6400001e6400001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500000
1f5000001f5000001f5000001f5000001f5000001f5000001f5000001f50
00001f5000001f5000001f5000001f5000001f5000001f5000001f500001
0000148802b9002000a3000700020010002f00860000050e0a5c00040001
0000000a007e0001000000000003000e00000001000000000004000e000e
0001000000000006000e001c00030001040900000066002a000300010409
0001001c00900003000104090002000e00ac0003000104090003001c00ba
0003000104090004001c00d60003000104090006001c00f2000300010409
00070072010e4d564b5349512b5365676f6555494d564b5349512b536567
6f6555494d564b5349512b5365676f65554900a900200032003000310036
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0020
004d0056004b005300490051002b005300650067006f0065005500490052
006500670075006c00610072004d0056004b005300490051002b00530065
0067006f006500550049004d0056004b005300490051002b005300650067
006f006500550049004d0056004b005300490051002b005300650067006f
006500550049005300650067006f00650020006900730020006100200074
0072006100640065006d00610072006b0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000670072006f0075
00700020006f006600200063006f006d00700061006e006900650073002e
0000b90020013eb40918014a20b8013cb40918014a20b80134b40918014a
20b80132b40918014a20b8012fb40918014a20b8012eb40918014a20b801
2cb40918014a20b8010cb40918014a20b80104b40918014a20b80103b409
18014a20b8010140fb0918014a20ff0918014a20fe0918014a20fc091801
4a20f30918014a20f10918014a20f00918014a20ef0918014a20ed091801
4a20ea0918014a20dc0918014a20da0918014a20d80918014a20d3091801
4a20cd0918014a20cc0918014a20ca0918014a20c90918014a20c8091801
4a20c60918014a20c40918014a20c20918014a20c00918014a20bd091801
4a20b40918014a20b10918014a20af0918014a208c0918014a208b091801
4a208a0918014a20890918014a20380918014a20370918014a2084091801
4a20830918014a207f0918014a207e0918014a207d0918014a2062091801
4a20500918014a20480918014a200e0918014a2fbe04ed0001004f04ec00
01004004eb4061090d39dfe016171cd4d516171c7b7c161b7b7c19d1d216
171c767716171c6d7016171c6c6f16171c6b6e161b6b6e7f721a74751415
1c676a14151c666914151c6568141b656885711a1973167a431921794319
213b39002b3a39002b3995481f2fbc04e6002f050300020503b313ff1fe0
be04f7000100e004f70001002004f0b30d113940b804eab20b1439b9ffc0
04efb31b22393f410d04f40001008f04f30001003004f30001003004ef00
01004004e8b30b103930bd015500010080015500010154b395241f3fbf01
420001000f014100a001410002ffe0b4f1292b3940b80140b33d433940b8
0140b324283940b8013fb32c2f3940b8013fb3171c3940b8013d4016262b
39e6e7032b40e72c2e3940e71b1c3940541f1f39b8ffc04016cb23233940
d9292a395352022b52e2022b20b00b0d39b901020101401b022bfdfc0a2b
fbaf052bf2e2022bc3c5022b40da171939dbe2022bb8ffc0b3e2303139b8
ffc04011e21d1e3940d6171739ebbe022bbe9a022bb80184b2990a2bb801
81b2990a2bb80180b2990a2bb8017f400f990a2b9b990a2b999a022b9a95
052bb8ffe0b7ee1416399291032bb8ffe0400cf4131639ec95042b919524
1fb8ffe0400b631819396663019695022bb8ffe0400c952528393837002b
3784ff1fb80101b67d022bfcdb0a2bb9013e013cb2022b40b8013cb21f24
39b8012fb27d032bb8012eb384032bd0b8012cb50140d8171939b8ffc040
09c422253940c2171739b8ffc0b3c01a1b39b8ffc0b7c0101239cdcc032b
b8ffc0b7c9232339cac8032bb8ffc04016f00b0d39ea7e022b30620c0c06
43b1af022baf7e022bb8ffc0b3d30f1239b8ffc0b3bd272839bc01860089
0100002b0185b28a0a2bb8ffc0401c8c1e1e39898a042b8a840a2b8b8403
2b817f012b7d7e042b7e84032bb8ffe04041621819396284012b8884012b
8784012b8584012b8384042be984f984026984012784011b371518361515
35151234150f33150c3215093115063015032f15002e154126014a014b00
150050014c00010070014a0001013a013b000f01380139000e0136013700
0e000b0138003b0138004b013800cb01380004000b0136003b0136005b01
3600030010013a00010106b203ff1f4121010a010b000f01080109000e01
060107000e006b01080001000b0108003b0108004b010800bb010800eb01
0800fb01080006000b010a005b010a008b010a00030106402203ff1f2627
0e28270f35360e33360f2a2b0e2c2b0f22230e24230f1e1f0e201f0f00bf
01310010013100200131000300000130408001702ae02a02003c01102440
247024a024040f10110c090a0b0c0607080c0304050c0001020c26061c1f
0603181f0f033f03df03039f00df00020f171f172f17030f141f142f1403
1b011d0d18071a0d1510170d1204140d2f1b012c3c2a3c283c263c243c22
3c203c1e3c1b3c183c153c123c0f3c093c063c033c003c50335401b0124b
004b5442b013014b004b5342b0332b4bb8032052b0322b4bb009505b58b1
01018e59b0332bb00288b8010054b00488b8020054b012435a5b58b80119
b101018e851bb900010100b04b60858d592b2b1db0644b5358b0801d59b0
324b5358b0901d59004bb03251b01b23422b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b732b2b2b2b737373732b2b2b2b2b2b2b73737373732b2b2b2b2b
2b2b2bb1282645b02a4561b02c4560442b2b2b737374b801064569b8010a
456961b8010a2344b801084569b8010a4560b8010823442b2b2b2b737373
b8013a4569b80138456960b801382344b8013a4569b80136456960b80136
23442b2b2b73732b2b2b2b2b2b2b2b2b2b2b017374752b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b
2b002b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73732b73742b737373732b2b2b7374
2b732b2b2b2b2bb018b03f4b53422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b7373b109322b4bb05052424bb008524bb008505bb01a23424bb0c8524b
b036505bb00c2342b100024354b102024354b1060243545b5b584115013e
0064013c00640134006401320064012f0064012e0064012c0064010c0064
01040064010300640101404f64ff64fe64fc64f364f164f064ef64ed64ea
64dc64da64d864d364cd64cc64ca64c964c864c664c464c264c064bd64b4
64b164af648c648b648a648964846483647f647e647d646264506448640e
642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b00>
[8017 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> LKAAAA+SegoeUI AddT42Char 
2 374 15 <00010027fef8013c00e400030045401d390301390001024003b20400200c
064d00280b064d0080024011194802b8ffeab30c064d02b8ffeab60b064d
022f05015d2f2b2b2b1acd2b2b0010f61acd3130015d5d25032313013ca0
7575e4fe1401ec00>LKAAAA+SegoeUI AddT42Char 
2 1642 47 <000100bc000003a4059a000500864009010491590112020305b8fff0b310
064d05b8fff0b30d064d05b8fff0b30c064d05b8fff0b30b064d05b8ffe8
b30a064d05b8ffe0b309064d05b8ffc040180a1f4805050704060d064d04
060c064d04060b064d047e01b8fff8b30d064d01b8fff240090c064d0105
0b064d012f2b2b2be92b2b2b12392f2b2b2b2b2b2b2b003f3f2b31302121
1133112103a4fd18a80240059afafe00>LKAAAA+SegoeUI AddT42Char 
2 4158 69 <000200a6ffe8045405ec0010001d009c402b000a011006031501150f1595
590f16071b091b9559091004000c060d064d0c060c064d0c060b064d0c83
18b8fff8b30d064d18b8fff2b30c064d18b8ffe3401a0b064d18181f0602
12060d064d12060c064d12060b064d128403b8fff840110d064d03020c06
4d03010b064d032f1f015d2f2b2b2be92b2b2b323212392f2b2b2be92b2b
2b003f3f2b110033183f2b110033183f3130015f5e5d2523152311331133
36333212151002232203151416333236353426232206014e04a4a40479e9
c5dffad9cb6ca57f95a99e878fae949405ecfd60ccfeede7fefffecb0249
8f7fb1e4cbabc2c7>LKAAAA+SegoeUI AddT42Char 
2 4406 70 <00010060ffe80362041800150085405b580301090f190f020b0015010c03
1515130213955902160b0b0d080d9559081000200c014d00000b0c0c064d
0b020b064d700b010b200c014d0b10060d064d10060c064d10060b064d10
8305140d064d050c0c064d05230b064d052f2b2b2be92b2b2b2f2b5d2b2b
332f2b003f2b110033182f3f2b110033182f5f5e5d31305e5d015d250623
22003534003332171526232206151416333237036076a2dbfef30122f287
6772829dc9bd9f86762f47011de3fd013332a850e1b7b4d05900>LKAAAA+SegoeUI AddT42Char 
2 4612 72 <00020060ffe803dd04180012001900afb50f0701100606b8ffc0402d0b0e
4806060104190195591919040f0904955909160f1695590f107f07010716
0c064d07200c014d0707008313b8ffc0b40b0c004c13b8ffd0b30c014d13
b8fff0b30d064d13b8ffe840280b064d13131b1901080d064d01080c064d
01080b064d01830c100d064d0c100c064d0c1d0b064d0c2f2b2b2be92b2b
2b3212392f2b2b2b2be9322f2b2b5d003f2b00183f2b11120039182f2b11
120039182f2b31305f5e5d01211616333237150623220235340033321215
2726262322060703ddfd2d04b09aad9187ded9f8010fc9c9dca801877874
a21301d7abba729a620117fdef012dfefce7358e9ea68600>LKAAAA+SegoeUI AddT42Char 
2 4876 74 <00020060fe1e041004180018002500ca40100a0401030f0e01100624180b
0c004c08b8ffe0b40b0c004c05b8ffc0403a0b0f4805050702079559021c
0a230d2395590d16170f151d131d95591310041519160300060d064d0006
0c064d00060b064d008409050d064d09b8fff8b30c064d09b8fff0402b0b
064d0909270420060d064d20060c064d20060b064d208310100d064d100e
0c064d101a0b064d102f27015d2f2b2b2be92b2b2b3312392f2b2b2be92b
2b2b17332f003f2b110033183f3f2b110033183f2b110033182f2b31302b
2b015f5e5d005f5d25102122273516332011352306232202351012333217
333533033534262322061514163332360410fde4be8ead9d017a0475ebbf
e9fbdacf6404a4a4a57b98aca5888aad52fdcc48a460019270c40111e601
050134a68efdcf977aaeddc7abcdc400>LKAAAA+SegoeUI AddT42Char 
2 5192 76 <000200900000016605d9000b000f004e40230006635b000e0f0d0962030d
0c0362ff300c060d064d0c060c064d0c060b064d0c840db8fffeb30c064d
0db8fffeb60b064d0d0d11101112392f2b2be12b2b2b2b0110e100182f3f
c62b313013222635343633321615140613231133fa2c3e3e2c2d3f3f23a4
a405043c2e2e3d3d2e2c3efafc040000>LKAAAA+SegoeUI AddT42Char 
2 5934 81 <000100a6000003f804180012009640280211010210011004011509150a0f
0c040f0495590f1000060d064d00060c064d00060b064d008401b8fff6b3
0d064d01b8fff8b30c064d01b8fff8401e0b064d0101140c08060d064d08
060c064d08060b064d088409020d064d09b8fffeb30c064d09b8fffeb60b
064d092f14015d2f2b2b2be92b2b2b3212392f2b2b2be92b2b2b003f2b11
0033183f3f3f3130015f5e5d005d21231110232206151123113315333633
32161503f8a4ee7ba1a4a40474dca8b202480146b98dfdb80400aac2d9cd
>LKAAAA+SegoeUI AddT42Char 
2 6144 82 <00020060ffe804500418000b00170089402319400b024d00129559001606
0c9559061009060d064d09060c064d09060b064d098315b8fff0b30d064d
15b8fff040090c064d201530150215b8ffde402a0b064d1515190f080d06
4d0f0a0c064d0f060b064d0f8303100d064d030c0c064d03190b064d032f
19015d2f2b2b2be92b2b2b12392f2b5d2b2be92b2b2b003f2b00183f2b31
30012b0522003510003332001514000322061514163332363534260252e3
fef1011af0e50101feebdd9eb8ba9c9fabab18011fed01020122fee6faf5
fed903a6d7bdb6d2cebec0d0>LKAAAA+SegoeUI AddT42Char 
2 6366 83 <000200a6fe29045404180010001d009c402b000a011006031b01150f1595
590f16040f061b091b955909100c060d064d0c060c064d0c060b064d0c83
18b8fff8b30d064d18b8fff2b30c064d18b8ffe3401a0b064d18181f0612
02060d064d02060c064d02060b064d028403b8fff840110d064d03020c06
4d03010b064d032f1f015d2f2b2b2be92b2b2b323212392f2b2b2be92b2b
2b003f2b110033183f3f2b110033183f3130015f5e5d2523112311331533
36333212151002232203151416333236353426232206014e04a4a40479e9
c6defad9c770a57f95a99e878fae94fd9505d7b4ccfeede7fefffecb0249
8f7fb1e4cbabc2c7>LKAAAA+SegoeUI AddT42Char 
2 6614 85 <000100a6000002bc041200100059b9000cffe840270b0c004c0715080f00
000a020e107000010000120a06060d064d06060c064d06060b064d068407
b8fff3400e0d064d07040c064d07050b064d072f2b2b2be92b2b2b321139
2f5d003fcd32322f3f3f31302b0126232206151123113315333636333217
02bc2b51698da4a4042390594022035a21c6abfdf60400d36c790e00>LKAAAA+SegoeUI AddT42Char 
2 7052 87 <0001002bffea0281052f0014007c403b03180b0c004c1414120212955902
160a0a070e060b0707069559070f00000d400b004d0d060d060b080f060d
064d0f060c064d0f060b064d0f8404b8fff2b30d064d04b8fff0b30c064d
04b8ffeeb30b064d042f2b2b2be92b2b2b333233322f2f2b332f003f2b11
003311331133182f3f2b110033182f31302b250623201111233533353711
21152111141633323702813a5ffef3b0b0a40102fefe46513e2d0a20012c
025e8cfa35fed18cfdbf67582200>LKAAAA+SegoeUI AddT42Char 
2 7246 88 <00010090ffe803e20400001100a14036490601490601030d100b0c004c0f
03010c060115030c050c95590516100f080f0100060d064d00060c064d00
060b064d00847f0f010fb8fffab30d064d0fb8fffcb30c064d0fb8fffc40
2a0b064d0f0f130a060d064d0a060c064d0a060b064d0a84070a0d064d07
060c064d07020b064d072f13015d2f2b2b2be92b2b2b12392f2b2b2b5de9
2b2b2b33003f3f3f2b110033183f5f5e5d31302b015f5d005d2123352306
2320111133111033323635113303e2a40466d6fe92a3f8789ba4a2ba01b4
0264fdb6febcb18f024e>LKAAAA+SegoeUI AddT42Char 
2 7466 90 <00010018000005b00400001b00d24016781b01771401760c017b0a017401
01380901370c011bb8fff8b30b064d13b8fffeb30b064d0ab8fff8b30b06
4d02b8fffa40180b064d14020b064d0c080b064d09060b064d01080b064d
08b8ffc0b30b004d14b8fff040090b004d13180b004d0cb8fff840090b00
4d09100b004d1bb8ffe0400b0b0d014c0c200b0d014c06b8ffd040230b0d
014c17300b0d014c0f300b0d014c02060f17131b00070a0b0f0a00001d0b
2f1d015d2f11332f002f3f1217392b2b2b3130012b2b2b2b2b2b002b012b
2b2b2b2b2b2b2b5d5d5d5d5d5d5d01012303262723060703230133131617
33363713331316173336371305b0fecdaad30c04040312e5a4fecaacd40a
0408030fec96d40a0508020fd00400fc0002dd2a352439fd210400fcfe23
392c320300fcfc25372735030400>LKAAAA+SegoeUI AddT42Char 
2 0 0 <000200a600000484057600030007001a400b07010304000305050904002f
cd12392fcd002fcd3fcd31303311211125211121a603defcb602b6fd4a05
76fa8a94044e>LKAAAA+SegoeUI AddT42Char 
LKAAAA+SegoeUI /CharStrings get begin
/space 3 def
/comma 15 def
/L 47 def
/b 69 def
/c 70 def
/e 72 def
/g 74 def
/i 76 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/t 87 def
/u 88 def
/w 90 def
end
LKAAAA+SegoeUI /Encoding get
dup 32 /space put
dup 44 /comma put
dup 76 /L put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 119 /w put
pop
end
%ADOEndSubsetFont
/CSVBME+SegoeUI /LKAAAA+SegoeUI findfont ct_VMDictPut
/CSVBME+SegoeUI*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 31{/.notdef}rp /L 21{/.notdef}rp /b 
/c /.notdef /e /.notdef /g /.notdef /i 4{/.notdef}rp 
/n /o /p /.notdef /r /.notdef /t /u 
/.notdef /w 136{/.notdef}rp]
CSVBME+SegoeUI nf
CSVBME+SegoeUI*1 [24 0 0 -24 0 0 ]msf
273.808 236.22 mo
(Libnoc)
[11.2798 5.7601 14.1599 13.5598 14.04 0 ]xsh
343.648 236.22 mo
(, )
[5.15988 0 ]xsh
355.768 236.22 mo
(Librouting)
[11.2798 5.7601 14.1599 8.40018 14.0399 13.5598 8.16254 5.7601 13.5598 0 ]xsh
464.608 236.22 mo
(, )
[5.15988 0 ]xsh
476.848 236.22 mo
(Libpower)
[11.2798 5.7601 14.1599 14.1599 14.04 17.4001 12.5999 0 ]xsh
27.3 195.9 mo
143.34 195.9 li
143.34 259.26 li
27.3 259.26 li
cp
0 0 0 0 cmyk
ef
27.3 195.9 mo
143.34 195.9 li
143.34 259.26 li
27.3 259.26 li
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H 12 GetGlyphDirectory
47 <001C60D8A8C9B7C0541669D7370A7DC82D0FE7609994B88F29295E35C496
98> |
82 <001C60D8A8C9B67CE7CE430288ACE655FC18A1D8370CE1DDA2E576D42D95
2935890B3612622581158EF50D603003AA972C41A121E64BB6F37621B04965F4
3EA69CB46F90D238F5DAE0124B98691CB90FD5451D28D05F53213F42F1BC0356
874853C9B7BD> |
90 <001C60D8A8C9B5815AB29355756BBBBB7B640B3EF9C0ADD93B359EDAED5A
53B66E090481043989A5C8B6D5E739738BBF7578CD7082830968074974D0B070
8C4BC351> |
16 <001C60D8A8C9B747CAE0D00908757181BDD4551E11F2FDDBA4> |
72 <001C60D8A8C9B6612940B43A18E0B1770AF5BDCC7392AD759565082DD8CF
112D9CD0C6B3257D7D22519ADB92136D7E5D1D05E7477F42DA2B96DAD9046D86
40464B1A0AB77262177E91CF9635E292FDFB04FE2C5EEA7A914E233900C57954
9CDDC6CBE9AE53> |
89 <001C60D8A8C9B7DA5D265A40CAE56BAC11275BF6B170C9AE7FF724CE9BC4
DE71CCD04EA427B8516624F1> |
79 <001C60D8A8C9B83BB863980AEF9E9F39410E46222AA7649168> |
76 <001C60D8A8C9B83BB8639D029E8270304F33B21678103AB44A70DBCF305B
F7B5B01435688228> |
69 <001C60D8A8C9B64FADB504A89B86F77E6E9B4C0E648D47828EE29E5F9D9F
2F8CBC143395D535AAEAC719A70CB6B83280EF30A101EA039F95D1DE0F0B833C
677403754AE5E15023FEE19647361DCB4FB9E93DF512F65BAF21AD32620D4EB5
381055EBD19A97263A52A56B242F48C9B31B31> |
85 <001C60D8A8C9B745265EC8CAD9F82A31B319F6B4C33E8770F879104566FE
981B857E600C8D166D0F392984CBE7F2367280B0F63C58E8863F40D4708C0E6F
3FA965E7B8> |
68 <001C60D8A8C9B66B395FB12F5A3ED397212B4E934EE7CEBB33FC6D17765E
C6AF590852ACA1D95C264AFE5F1DF4A05582D1D4BE94405B769F1E5F1F51A3BA
C7DDC8124D7A18D9BA6AD14539A3D2A595244C3375F26DC7CD56D4BB99F90CEE
67FE105A5C8537E33E55933C183B6DC8F7A56F0F340CFFC601558E2B91B243D8
20A3FB90B5A85667344F9B868EDE56F1FA7F7A5641ACE489CA47EA80FFC6> |
92 <001C60D8A8C9B7DA5D265A40CAE56BAAAC24F23FE013275937448B08EC3F
CA627346997A559B8080CD88114ABE14> |
!
end
end end
%ADOEndSubsetFont
/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
42.4581 224.425 mo
(\000/\000R\000Z)
[9.59989 10.3198 0 ]xsh
76.6604 224.425 mo
(\000\020)sh
84.0977 224.425 mo
(\000/\000H\000Y\000H\000O)
[9.59989 9.84086 9.71954 9.83128 0 ]xsh
55.2899 243.625 mo
(\000/\000L\000E\000U\000D\000U\000\\)
[9.59989 4.92035 10.6788 7.43739 10.0804 7.43738 0 ]xsh
27.3 267.54 mo
143.34 267.54 li
143.34 330.9 li
27.3 330.9 li
cp
0 0 0 0 cmyk
ef
27.3 267.54 mo
143.34 267.54 li
143.34 330.9 li
27.3 330.9 li
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H 6 GetGlyphDirectory
43 <001C60D8A8C9B6DB894EE886ABB56160EE6EB7F2CA468C68DE0AAFFD2664
39756B9637B5503D3349BD25E193A952D7F863> |
71 <001C60D8A8C9B64FADB5FC35FDDB0E6BFB2621E7676DB9FAD261F4A008C2
E33C9DCF5E868D64478093EBB31AA9A4949D1CE18A21FFF01E6616036036361D
655A3CD3A52E3BCE1D7E0A7735F7E70C92951ECDBD11D12D247C7D4929AED91A
53F617BD021461BC5E487F7E52C281A289CD6E6AFD2A1019DF2D9456ACD5F2> |
86 <001C60D8A8C9B795A0B1B6195BB4EF5EEB174499F971BEF793954239BBE2
A5B5645E3FE6E77AAEACF7F480E78DC1428F2C84378178EE1E0E8F85A09FEDA8
DA5FFC39D1610270B36FD014EB946A160B0C1BDE67A52B117446F67801E83DB1
879BA2CE929E27953E5E66943011EA6F1205D28F5C846282838C050A73A5D0E6
80E8017F3B7A8A0071E2A809355D77267BAA3DD77BBC1D1E0076E23EAB781EB4
5482FC0C2B0D876C57D3FF0AA5542D6DDE8475> |
87 <001C60D8A8C9B71131DFD48E5B38171D18A534FA02B6A9E2763569CFA3B7
ECEE6F74BA1CCCFF97CB3645227BC368F60E189BC2815F0D76598ECBC86220F3
B59495FE2F219D3499E83C042F3DE53C9BD5DB824B59B9A48B8A> |
70 <001C60D8A8C9B79815F8DE0ABC8BE37514A456F0EC5073847CEF451EF004
4904306072DAB8963365884A12F588B07DEB05154359BDB0AA7DB720EF324CB6
00B5213011609F1C32A7AC0D68ABA47021907F1E3BC885C8493686471B6F5C4E
70B2053EE3E500F62E4BD02423> |
81 <001C60D8A8C9B65DE77B5652AF785C8CE6863487F543AB94128E51B635C1
823D0188DC6D987CF4D843BB8D9F630C5EC03682278BC24324C12AFCF6441FB4
978A44E5185882F0A3E9D3C14C4FE27C> |
!
end
end end
%ADOEndSubsetFont
/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
43.8955 296.003 mo
(\000+\000D\000U\000G\000Z\000D\000U\000H)
[12.8398 10.0804 7.43739 10.6788 14.2811 10.0788 7.43738 0 ]xsh
37.5275 315.203 mo
(\000D\000E\000V\000W\000U\000D\000F\000W\000L\000R\000Q)
[10.0868 10.6804 8.7589 6.84037 7.44057 10.0868 8.76199 6.84037 4.92036 10.3198 0 ]xsh
166.02 128.58 mo
166.02 122.88 170.64 118.26 176.34 118.26 cv
673.62 118.26 li
679.32 118.26 683.94 122.88 683.94 128.58 cv
683.94 169.86 li
683.94 175.56 679.32 180.18 673.62 180.18 cv
176.34 180.18 li
170.64 180.18 166.02 175.56 166.02 169.86 cv
cp
0 0 0 0 cmyk
ef
166.02 128.58 mo
166.02 122.88 170.64 118.26 176.34 118.26 cv
673.62 118.26 li
679.32 118.26 683.94 122.88 683.94 128.58 cv
683.94 169.86 li
683.94 175.56 679.32 180.18 673.62 180.18 cv
176.34 180.18 li
170.64 180.18 166.02 175.56 166.02 169.86 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: LKAAAA+SegoeUI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CSVBME+SegoeUI gcheck setglobal} if
2 472 16 <0001009001fa02b2027b0003001c4010020153594f020102200001002001
01012f5d2f5d002f5d2b31300121352102b2fdde022201fa8100>CSVBME+SegoeUI AddT42Char 
2 2334 50 <0002005effe805aa05b2000b00170081401e001291590013060c91590604
09060d064d09060c064d09060b064d097d15b8fff0b30d064d15b8ffeab3
0c064d15b8ffea402f0b064d20153015021515190f060d064d0f060c064d
0f060b064d0f7d03100d064d03100c064d03100b064d032f19015d2f2b2b
2be92b2b2b12392f5d2b2b2be92b2b2b003f2b00183f2b31300520001110
0021200011100001220011100033320011100002fefecffe910176014201
29016bfe8cfed4e2fee60113ddec0110fef81801920142015a019cfe70fe
bdfea1fe680532febafef7fef7febd01340115011c013600>CSVBME+SegoeUI AddT42Char 
2 2782 53 <000200bc000004c0059a001c002700bb403a450f0103400e010f02010c05
171e08081e915908080a1d0b1d91590b03010a170911080d064d11080c06
4d11080b064d247d117902017a010102b8ffe8b40b0d014c01b8ffe84026
0b0d014c011c02110470000100080d064d00291e09060d064d09060c064d
09060b064d097e0ab8fff2b30d064d0ab8fffab30c064d0ab8fffab30b06
4d0a2f2b2b2be12b2b2b3210c62b5d17322b2b5d5d2fe12b2b2b1239002f
333f2b11120039182f2b1112003931305f5e5d015d5f5d2123032e032323
11231121321e0215140e0207151e0317011133323e023534262304c0c8f0
213e414b2f8aa801ac5e9f75422d5375492435302f1dfdb1e43f6b4e2c95
8d0192384f3217fd9e059a2f608f604b7d62451304102938472f0353fdf8
264767407381>CSVBME+SegoeUI AddT42Char 
2 3088 54 <00010079ffe803de05b2003500d240154b35014a2e01462501441a014615
0134180c004d2ab8ffe8b30c004d28b8fff0b30c004d19b8ffe840560c00
4d11180c004d092c13220418311a0001001b010c031b1840181d91591804
0001010b0301313106915931131b1b2c22080d064d22080c064d22080b06
4d227d1313012c080d064d2c080c064d2c080b064d2c7d09b8fff0400f0b
064d20090109093701080b064d012f2b12392f5d2be12b2b2b12392fe12b
2b2b12392f003f2b001810c45f5e5d3f2b001a1810cd5f5e5d1133321112
173931302b2b2b2b2b5d5d5d5d5d37351e0333323635342e02272e033534
3e02333217152623220e0215141e02171e0315140e0223222e0279225f69
6a2d9b99335a7b474b826037568cb35dd4617fc7376e56362950734b4d8a
683d538db8662264685d3ac61e302112736c3a56474124264e5e77506291
5e2e33bd581734523b3750423e252654667c506a935c290b151f>CSVBME+SegoeUI AddT42Char 
2 3444 55 <000100290000040c059a0007007e400b0312010506059159060305b8fffa
b30b064d00b8fffa40280b064d0005000e02030542cf050105050802080d
064d02080c064d02080b064d027e03040d064d03b8fff8400d0b064d0303
090809400c004d09b8ffc0b20b004d2b2b1112392f2b2be92b2b2b12392f
5d2b0110e2182f2e2b2b003f2b110033183f31300121112311213521040c
fe62a8fe6303e30502fafe050298>CSVBME+SegoeUI AddT42Char 
2 3888 68 <0002005affe8038304180014001f00aa4052061001000901100406180b0c
004c0b1596590b100d064d0b0b1c120115031c051c955905160f40090c48
0f0f0d120d95591210200f300f020f0b1f00060d064d00060c064d00060b
064d008401020d064d01b8fff4b30c064d01b8ffee40170b064d0101210f
1983080c0c064d08040b064d2f0801082f5d2b2be93312392f2b2b2be92b
2b2b33332f5d003f2b110033182f2b3f2b110033183f1112392f2b2b3130
002b5f5e5d5d212335230623222635102525102322073536332011070706
06151416333236350383a4046bd099ad01520133d3b99597c50169a4f772
746b597a9fa0b8a286011f2f2b01057ea860fe8294221051674b5fab8300
>CSVBME+SegoeUI AddT42Char 
2 5536 79 <000100a60000014a05ec0003003a40160115020000060d064d00060c064d
00060b064d008401b8fffeb30c064d01b8fffeb60b064d01010504111239
2f2b2be12b2b2b003f3f313021231133014aa4a405ec>CSVBME+SegoeUI AddT42Char 
2 5618 80 <000100a6000006540418001f00ddb6490c014904011eb8ffe8b70b004d0f
2101031cb8ffd0402c0c004d0216010c040515161b040d180d95591d1810
130f0a011200060d064d00060c064d00060b064d008401b8fffeb30c064d
01b8ffec401c0b064d010e0a120a421411060d064d11060c064d11060b06
4d118412b8fffa40310c064d120e0b064d121b09060d064d09060c064d09
060b064d09840a0a040d064d0a400d014d0f0a010c0320210a8430302b01
5f5e5d2b2b10e12b2b2b39182f2b2be12b2b2b322b0110f02b2be12b2b2b
00182f33333f3f332b110017335f5e5d31302b015f5d2b5d5d2123113426
2322061511231110232206151123113315333633321617363320110654a4
697c6993a4e96c8ca4a4046dd1699c1d72e20152024caa98c086fdb80260
012eb591fdb80400a2ba755fd4fe5f00>CSVBME+SegoeUI AddT42Char 
2 6762 86 <00010068ffe8030f0418002e00a1401907260103160103090c010909010f
000110042b100b0c004c12b8fff040350b0c004c0a380b0c004c05280f1e
04142d1719141995591410000110012001030b0301032d0395592d161717
281e830f0f00288305b8ffe040160b064d200530050205053000100d064d
001c0b064d002f2b2b11392f5d2be112392fe112392f003f2b001810c65f
5e5d3f2b001810c6111217392b31302b2b5f5e5d5d5d5f5d5d3735163332
35342e02272e0335343e02333217152623220e0215141e02171e0315140e
0223226886a1d8253f553144674523426e8d4b856971932e4a351d1d3850
33446c4c29437092509e25b0639029392c23131b3745583b486f4b262ea6
4a1526352028362a22141a37455a3e4c704a2400>CSVBME+SegoeUI AddT42Char 
2 7780 92 <0001000efe1e03d504000014009b400a0d1401000d0106020114b8ffe040
2c0b0d014c0d200b0d014c02200b004d0210011004000f0c0f10300b0d01
4c10010b06060803089559031c060bb8fff4400e0b064d010c0b064d0106
0b030c14b8fff440140b064d1400100b0c004c0000160d0c0b064d0d0cb8
fff0b30c004d0c2f2b332b11332f2b322b1217392b2b2f003f2b11003318
2f2f33332b3f3f5f5e5d31302b012b2b5d5d5d0101022322273516333237
3701330116173336370103d5fe297ee4402b352c7c3e52fe70b601150510
06050f01230400fb5cfec20d931294c203fefcec0f3f18340316>CSVBME+SegoeUI AddT42Char 
CSVBME+SegoeUI /CharStrings get begin
/hyphen 16 def
/O 50 def
/R 53 def
/S 54 def
/T 55 def
/a 68 def
/l 79 def
/m 80 def
/s 86 def
/y 92 def
end
CSVBME+SegoeUI /Encoding get
dup 45 /hyphen put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 108 /l put
dup 109 /m put
dup 115 /s put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CSVBME+SegoeUI*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen 30{/.notdef}rp /L 2{/.notdef}rp 
/O 2{/.notdef}rp /R /S /T 12{/.notdef}rp /a /b 
/c /.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /.notdef /w /.notdef /y 134{/.notdef}rp]
CSVBME+SegoeUI nf
CSVBME+SegoeUI*1 [24 0 0 -24 0 0 ]msf
273.614 158.149 mo
(Real)
[14.4002 12.5999 12.2401 0 ]xsh
318.614 158.149 mo
(-)sh
328.214 158.149 mo
(Time Operating System)
[12.6 5.7601 20.6398 12.5999 6.72006 18.1199 14.1575 12.5999 8.40018 12.2401 8.1601 5.76013 
13.5599 14.1601 6.60004 12.7202 11.6398 10.2 8.1601 12.5999 0 ]xsh
164.58 280.14 mo
164.58 274.44 169.2 269.82 174.9 269.82 cv
673.62 269.82 li
679.32 269.82 683.94 274.44 683.94 280.14 cv
683.94 321.42 li
683.94 327.119 679.32 331.74 673.62 331.74 cv
174.9 331.74 li
169.2 331.74 164.58 327.119 164.58 321.42 cv
cp
0 0 0 0 cmyk
ef
164.58 280.14 mo
164.58 274.44 169.2 269.82 174.9 269.82 cv
673.62 269.82 li
679.32 269.82 683.94 274.44 683.94 280.14 cv
683.94 321.42 li
683.94 327.119 679.32 331.74 673.62 331.74 cv
174.9 331.74 li
169.2 331.74 164.58 327.119 164.58 321.42 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: LKAAAA+SegoeUI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CSVBME+SegoeUI gcheck setglobal} if
2 1090 36 <0002001600000512059a0007000f00d0402c07070108060109100c004d02
08090a0b010b0d0e0f03040c0304010c0101100301100c004d04180b0d01
4c01b8ffe8b40b0d014c0cb8ffc0b40b0d014c0bb8ffc040390b0d014c0e
0d090a04050b0c080d064d0c401216480c0640080f02030f0391590f0f06
030105080f0c0b03020e090d0a0a0577050178000105b8ffe8400e0b0c00
4c00180b0c004c000011052f11332f2b2b5d5d121739002f2f3f392f2b00
1018c410c41a10dd2b2bc412173931302b2b012b2b2b5f5e5d5d87c0c00e
c0c010870ec0c005c0c0012b5d5d21230321032301331303262723060703
0512ba98fda08fbb0226ae9fe10b0b040a0ddf0192fe6e059afc8f02631e
423d23fd9d00>CSVBME+SegoeUI AddT42Char 
2 2568 51 <000200bc00000429059a000a001200904029460601020f010c040c009159
0c0c030212030b9159030307080d064d07080c064d07080b064d077d10b8
ffe8b30d064d10b8ffe8401e0c064d10100b064d1010140c01060d064d01
060c064d01060b064d017e02b8fff8b30d064d02b8fff440090c064d0204
0b064d022f2b2b2be92b2b2b3212392f2b2b2be92b2b2b003f2b00183f12
392f2b3130005f5e5d5d0111231121321615140023031133323635102101
64a8018ae6fdfee7efbdb0aeb7feb0021efde2059ae0ccccfefc02e4fdb4
9f91011c>CSVBME+SegoeUI AddT42Char 
2 5328 78 <000100a6000003f805ec000c009b40107a0c01770b017902017d0a017e01
010cb8fff040090c004d01100b004d00b8fff040220c004d09020a050115
05150a0f06000a0b0b0170000100140b064d00400b014d000cb8ffe8401c
0d064d0c0804060d064d04060c064d04060b064d048405040d064d05b8ff
ffb60b064d052f0e015d2f2b2be92b2b2b32322b2f2b2b5d33332f33003f
3f3f3f111239393130012b2b2b5d5d005d5d5d2123012311231133113301
330103f8e6fe3c04a4a40401aed7fe2501ecfe1405ecfc3f01d5fe12>CSVBME+SegoeUI AddT42Char 
CSVBME+SegoeUI /CharStrings get begin
/A 36 def
/P 51 def
/k 78 def
end
CSVBME+SegoeUI /Encoding get
dup 65 /A put
dup 80 /P put
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CSVBME+SegoeUI*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen 19{/.notdef}rp /A 10{/.notdef}rp 
/L 2{/.notdef}rp /O /P /.notdef /R /S /T 
12{/.notdef}rp /a /b /c /.notdef /e /.notdef /g 
/.notdef /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /.notdef /w 
/.notdef /y 134{/.notdef}rp]
CSVBME+SegoeUI nf
CSVBME+SegoeUI*1 [24 0 0 -24 0 0 ]msf
316.405 309.713 mo
(Abstraction Package)
[15.4801 14.1599 10.1999 8.16013 8.40018 12.2401 11.0401 8.1601 5.76013 14.0399 13.5599 6.84006 
13.4399 12.2401 11.0401 11.8799 12.2401 14.1601 0 ]xsh
166.02 351.64 mo
166.02 345.951 170.631 341.34 176.32 341.34 cv
345.2 341.34 li
350.889 341.34 355.5 345.951 355.5 351.64 cv
355.5 392.84 li
355.5 398.529 350.889 403.14 345.2 403.14 cv
176.32 403.14 li
170.631 403.14 166.02 398.529 166.02 392.84 cv
cp
0 0 0 0 cmyk
ef
166.02 351.64 mo
166.02 345.951 170.631 341.34 176.32 341.34 cv
345.2 341.34 li
350.889 341.34 355.5 345.951 355.5 351.64 cv
355.5 392.84 li
355.5 398.529 350.889 403.14 345.2 403.14 cv
176.32 403.14 li
170.631 403.14 166.02 398.529 166.02 392.84 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: LKAAAA+SegoeUI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CSVBME+SegoeUI gcheck setglobal} if
2 66 6 <00020021007b048e059a001b001f00bf406b0f170100060110061b020306
071a07181c1f09081908171d1e0a0b160b1411100d0c150c090d101f0406
030603e2591114171d04021b1b02e2591b061b061a0b0007100702090707
21161a03040000191a0e070f08010c030808210c0c1642120e0e15160b60
0c700c020c2f5d33cd32332fc62b11120139182f5f5e5d33e132322fc600
3fc412392f5e5dc41239392f2f2b11120017392b11120017393130108705
c0c0c0c01087c0c0c0c01087c0c0c0c01087c0c0c0c0015f5e5d5d010721
032107210323132303231321372113213721133303331333030723033304
8e17fefb3f01191bfeed587e56fa547d54fefa1401093dfeeb150115547e
54fc567b5491fc42fe04086afed46afe73018dfe73018d6a012c6a0192fe
6e0192fe6e6afed4>CSVBME+SegoeUI AddT42Char 
2 600 18 <0001ffe4ff12032d059a00030019400d77010100100b004d01000300022f
2f003f2f3130012b5d01012301032dfd509902ae059af9780688>CSVBME+SegoeUI AddT42Char 
2 656 19 <00020056ffe703fc05b20010001800294015008911111a1589400a0f139a
590f0705179a590519003f2b00183f2b01182f1aed12392fed3130011402
0606232226260235341236363320031021201110212003fc417bb3726ca9
743c3f7ab57501c3a8feddfecd012d012902d3b4feeabf635fb60109abbc
0120c363fd110264fd91fdbb>CSVBME+SegoeUI AddT42Char 
2 788 20 <000100e4000002d405ba000e001d400d0d07008a01080707010d07011800
3f3f12392f33012fedc63331302123110e0307353e03373302d4a413495b
653036797568263e04d71331302a0ca60f333f452100>CSVBME+SegoeUI AddT42Char 
2 1366 38 <0001005effe8048c05b200150099400f450a014900014a03010f17010c03
09b8ffc0400c0c004d03180b004d0a0b0015b8ffc040430b004d15151302
1391590213000b010c030b0b0d080d91590804000b300b0d014c3f0b010b
0b1710060d064d10060c064d107d05100d064d05080c064d05130b064d05
2f2b2b2be92b2b12392f5d2b33003f2b110033182f5f5e5d3f2b11003318
2f2b33113331302b2b015f5e5d5d005d5d25062320001110002132171526
232200111000333237048c9fedfecefe90019e013ecc869abaf7fecd011f
e9d89e3c54018a0140015801a83bb356feb6feecfefafec96000>CSVBME+SegoeUI AddT42Char 
2 1602 44 <000100bc00000164059a00030010b6007e0101120203003f3f012fe13130
212311330164a8a8059a>CSVBME+SegoeUI AddT42Char 
2 1808 48 <000100bc00000672059a001b00ba40157a1a017513012613361302721601
16180b0d014c0db8ffe8b40b0d014c05b8ffe840370b0d014c161a010509
0d0612111212030400080d064d00080c064d00080b064d007e1a080d064d
1a7f010101180d064d0101060c064d01b8fffab50b064d011d13b8fff840
170d064d130d10060d064d10060c064d10060b064d107e11b8fff2b30d06
4d11b8fff6b30c064d112f2b2be12b2b2b39322b12392b2b2f2b5d332be9
2b2b2b39003f3f1217392b2b2b5d3130015d5d5d21231134372306070123
0126272316151123113301161733363701330672a70e041813fe1652fe17
15160408a2de01b8330f062b1a01c1d203c272a5612afbb20446306356c3
fc40059afc187339763a03e4>CSVBME+SegoeUI AddT42Char 
CSVBME+SegoeUI /CharStrings get begin
/numbersign 6 def
/slash 18 def
/zero 19 def
/one 20 def
/C 38 def
/I 44 def
/M 48 def
end
CSVBME+SegoeUI /Encoding get
dup 35 /numbersign put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 67 /C put
dup 73 /I put
dup 77 /M put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CSVBME+SegoeUI*1 
[32{/.notdef}rp /space 2{/.notdef}rp /numbersign 8{/.notdef}rp /comma /hyphen /.notdef 
/slash /zero /one 15{/.notdef}rp /A /.notdef /C 5{/.notdef}rp 
/I 2{/.notdef}rp /L /M /.notdef /O /P /.notdef 
/R /S /T 12{/.notdef}rp /a /b /c /.notdef 
/e /.notdef /g /.notdef /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /.notdef /w /.notdef /y 134{/.notdef}rp]
CSVBME+SegoeUI nf
CSVBME+SegoeUI*1 [20.04 0 0 -20.04 0 0 ]msf
233.917 367.624 mo
(MPPA )
[17.9998 11.2825 11.2825 12.96 0 ]xsh
189.508 391.632 mo
(I/O Cluster )
[5.27065 7.79956 15.1201 5.52107 12.3587 4.80167 11.3987 8.52094 6.83972 10.4407 6.96005 0 
]xsh
290.189 391.632 mo
(#0)
[11.8838 0 ]xsh
312.874 391.632 mo
(-)sh
320.91 391.632 mo
(1)sh
27.3 339.06 mo
143.34 339.06 li
143.34 402.42 li
27.3 402.42 li
cp
0 0 0 0 cmyk
ef
27.3 339.06 mo
143.34 339.06 li
143.34 402.42 li
27.3 402.42 li
cp
.750271 .679713 .654902 .901946 cmyk
@
/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
43.8956 377.182 mo
(\000+)sh
56.7434 377.182 mo
(\000D\000U\000G\000Z\000D\000U\000H)
[10.0804 7.43738 10.6788 14.2795 10.0804 7.43739 0 ]xsh
1.8 lw
1 lj
10 ml
150.06 16.26 mo
699.78 16.26 li
699.78 419.7 li
150.06 419.7 li
cp
@
157.44 4.32001 mo
253.2 4.32001 li
253.2 31.2 li
157.44 31.2 li
cp
.750271 .679713 .663661 .901946 cmyk
ef
0 0 0 0 cmyk
%ADOBeginSubsetFont: CSVBMF+Meiryo-Bold-90ms-RKSJ-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (CSVBMF+Meiryo-Bold-90ms-RKSJ-H)
%%Title: (CSVBMF+Meiryo-Bold-90ms-RKSJ-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /CSVBMF+Meiryo-Bold-90ms-RKSJ-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-984 -440 2037 1068} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 25022 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 6 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300EE23D0BA079325E1D5F86AF2FE7DC374914003E
5DDB91552C283> |
86 <001C60D8A8C9B795A0B1B6195BB4EF5EEB174499F971BEF793954239BBE2
A5B5645E3FE6E77AAEACF7F480E78DC1428F2C84378178EE1E0E8F85A09FEDA8
DA5FFC39D1610270B36FD014EB946A160B0C1BDE67A52B117446F67801E83DB1
879BA2CE929E27953E5E66943011EA6F1205D28F5C846282838C050A73A5D0E6
80E8017F3B7A8A0071E2A809355D77267BAA3DD77BBC1D1E0076E23EAB781EB4
5482FC0C2B0D876C57D3FF0AA5542D6DDE8475> |
92 <001C60D8A8C9B7DA5D265A40CAE56BAAAC24F23FE013275937448B08EC3F
CA627346997A559B8080CD88114ABE14> |
87 <001C60D8A8C9B71131DFD48E5B38171D18A534FA02B6A9E2763569CFA3B7
ECEE6F74BA1CCCFF97CB3645227BC368F60E189BC2815F0D76598ECBC86220F3
B59495FE2F219D3499E83C042F3DE53C9BD5DB824B59B9A48B8A> |
72 <001C60D8A8C9B6612940B43A18E0B1770AF5BDCC7392AD759565082DD8CF
112D9CD0C6B3257D7D22519ADB92136D7E5D1D05E7477F42DA2B96DAD9046D86
40464B1A0AB77262177E91CF9635E292FDFB04FE2C5EEA7A914E233900C57954
9CDDC6CBE9AE53> |
80 <001C60D8A8C9B50481A2B55D743B1651D3F393CE8D439B356951F765CD04
3B27A756E197C2504328CDF79D16AB0C97633A17C36E3BFEAA1B33FCB500BEFD
E1201BCBD0BE31C190CF21EC97C2903755F79267582C012B41E533EC03F8CECC
BD40F6D1C8645BA318151A2E925F64F25AF6D3786327EA30CBE7459380B58E05
416849E5AED69CA5B063A3853B74B1F0F8> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /CSVBMF+Meiryo-Bold-90ms-RKSJ-H-Identity-H /Identity-H 0 [/CSVBMF+Meiryo-Bold-90ms-RKSJ-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/CSVBMF+Meiryo-Bold-90ms-RKSJ-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
171.277 22.2095 mo
(\000V\000\\\000V\000W\000H\000P)
[9.84605 10.9187 9.84605 7.68051 11.1599 0 ]xsh
362.94 351.64 mo
362.94 345.952 367.551 341.34 373.24 341.34 cv
585.2 341.34 li
590.889 341.34 595.5 345.952 595.5 351.64 cv
595.5 392.84 li
595.5 398.529 590.889 403.14 585.2 403.14 cv
373.24 403.14 li
367.551 403.14 362.94 398.529 362.94 392.84 cv
cp
ef
1.56 lw
0 lj
8 ml
362.94 351.64 mo
362.94 345.952 367.551 341.34 373.24 341.34 cv
585.2 341.34 li
590.889 341.34 595.5 345.952 595.5 351.64 cv
595.5 392.84 li
595.5 398.529 590.889 403.14 585.2 403.14 cv
373.24 403.14 li
367.551 403.14 362.94 398.529 362.94 392.84 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: LKAAAA+SegoeUI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CSVBME+SegoeUI gcheck setglobal} if
2 870 25 <0002006fffe703fe05b20020003400464024120a00892121362b1989400a
1c269a591a1c1c300f1212140f149a590f0705309a590519003f2b00183f
2b110033182f1112392f392b01182f1aed3212392fed1139313001140e02
23222e023534123636333217152623220e0215333633321e0207342e0223
220e0215141e0233323e0203fe4478a6616cab773e5399d885945a6f7b60
9a6e3b0463e45e976b3aa8264768423d684c2b2a4c69403e66482801c769
b080475aa9f499bb0131d976299b39569dde88b34075a2784b78542d2e4f
693b4a8160372f547500>CSVBME+SegoeUI AddT42Char 
CSVBME+SegoeUI /CharStrings get begin
/six 25 def
end
CSVBME+SegoeUI /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CSVBME+SegoeUI*1 
[32{/.notdef}rp /space 2{/.notdef}rp /numbersign 8{/.notdef}rp /comma /hyphen /.notdef 
/slash /zero /one 4{/.notdef}rp /six 10{/.notdef}rp /A /.notdef 
/C 5{/.notdef}rp /I 2{/.notdef}rp /L /M /.notdef /O 
/P /.notdef /R /S /T 12{/.notdef}rp /a /b 
/c /.notdef /e /.notdef /g /.notdef /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /.notdef /w /.notdef /y 134{/.notdef}rp]
CSVBME+SegoeUI nf
CSVBME+SegoeUI*1 [20.04 0 0 -20.04 0 0 ]msf
452.339 367.624 mo
(MPPA )
[17.9998 11.2825 11.2825 12.96 0 ]xsh
375.906 391.632 mo
(Compute Cluster )
[12.3647 11.7595 17.2803 11.7594 11.4007 6.83972 10.4408 5.40082 12.3647 4.79965 11.3987 8.52094 
6.83972 10.4407 6.95801 0 ]xsh
529.994 391.632 mo
(#1)
[11.8838 0 ]xsh
552.679 391.632 mo
(-)sh
560.715 391.632 mo
(16 )
[10.8016 10.8016 0 ]xsh
27.3 46.38 mo
143.34 46.38 li
143.34 109.74 li
27.3 109.74 li
cp
0 0 0 0 cmyk
ef
27.3 46.38 mo
143.34 46.38 li
143.34 109.74 li
27.3 109.74 li
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H 2 GetGlyphDirectory
56 <001C60D8A8C9B6C2567A008FB65125BF3C6EF030E891DD9C89909673FC30
4123811B0DF8E01D266AED7EAA46941459997A4A9C4B8982CA80C627B7FFDD79
82ED77E6900DB8D9766F323DB6442A7ACBB712B7BD5B8E6654> |
83 <001C60D8A8C9B64FADB50451721DFEE62844A1E8DD4A1542853182200CC1
610CB2D97C6CB7C5B2458A06FAFC687CABEE52CAAB035C94EF233FCAD0A67491
322B437D91816EFEF2F842BD097ABB19BB8F22CB72DC324BF4BF533CDCF4CD2E
BFC05516D47AB251FC8D6362E901EFF56441> |
!
end
end end
%ADOEndSubsetFont
/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H findfont [15.96 0 0 -15.96 0 0 ]msf
38.2556 84.4398 mo
(\0008\000V\000H\000U)
[12.4808 8.76209 9.84085 0 ]xsh
76.783 84.4398 mo
(\000\020)sh
84.2204 84.4398 mo
(\000V\000S\000D\000F\000H)
[8.76049 10.6788 10.0868 8.762 0 ]xsh
165.9 55.1202 mo
165.9 49.4312 170.512 44.8202 176.2 44.8202 cv
673.64 44.8202 li
679.328 44.8202 683.94 49.4312 683.94 55.1202 cv
683.94 96.3202 li
683.94 102.008 679.328 106.62 673.64 106.62 cv
176.2 106.62 li
170.512 106.62 165.9 102.008 165.9 96.3202 cv
cp
0 0 0 0 cmyk
ef
165.9 55.1202 mo
165.9 49.4312 170.512 44.8202 176.2 44.8202 cv
673.64 44.8202 li
679.328 44.8202 683.94 49.4312 683.94 55.1202 cv
683.94 96.3202 li
683.94 102.008 679.328 106.62 673.64 106.62 cv
176.2 106.62 li
170.512 106.62 165.9 102.008 165.9 96.3202 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: LKAAAA+SegoeUI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CSVBME+SegoeUI gcheck setglobal} if
2 528 17 <00010070ffea015000cb000b001c40110006b05b001309af1f032f030203
2f0d015d2f71e1003f2b3130172226353436333216151406df2e41412e2f
424216422e2e43432e2e4200>CSVBME+SegoeUI AddT42Char 
2 3608 59 <0001001a0000049a059a001500c040197b13017a1201750d01740c017408
017507017902017b010113b8ffe040110b0d014c0c200b0d014c08200b0d
014c01b8ffe0400a0b0d014c13080c004d0cb8fff840090c004d0a100b00
4d08b8fff8400f0c004d01080c004d0f180b0d014c05b8ffe8b40b0d014c
0fb8fff0401f0d064d05100d064d01050f1304090b0309150a0b1400100b
004d0000170b09b8fff0b30b004d092f2bc611332f2bc6113939002f3f12
17392b2b2b2b3130012b2b2b2b2b2b2b2b2b5d5d5d5d5d5d5d5d21230126
272306070123010133011617333637013301049acdfeb60f12040a18feac
ce01e0fe46ce01251d160420180131c1fe3d0225192e1730fddb02d102c9
fe083232422601f4fd39>CSVBME+SegoeUI AddT42Char 
CSVBME+SegoeUI /CharStrings get begin
/period 17 def
/X 59 def
end
CSVBME+SegoeUI /Encoding get
dup 46 /period put
dup 88 /X put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CSVBME+SegoeUI*1 
[32{/.notdef}rp /space 2{/.notdef}rp /numbersign 8{/.notdef}rp /comma /hyphen /period 
/slash /zero /one 4{/.notdef}rp /six 10{/.notdef}rp /A /.notdef 
/C 5{/.notdef}rp /I 2{/.notdef}rp /L /M /.notdef /O 
/P /.notdef /R /S /T 3{/.notdef}rp /X 8{/.notdef}rp 
/a /b /c /.notdef /e /.notdef /g /.notdef 
/i /.notdef /k /l /m /n /o /p 
/.notdef /r /s /t /u /.notdef /w /.notdef 
/y 134{/.notdef}rp]
CSVBME+SegoeUI nf
CSVBME+SegoeUI*1 [24 0 0 -24 0 0 ]msf
269.815 84.6561 mo
(POSIX, )
[13.4399 18.1199 12.7202 6.36017 14.1599 5.15988 0 ]xsh
346.615 84.6561 mo
(OpenMP)
[18.1199 14.1599 12.5999 13.5599 21.5999 0 ]xsh
440.095 84.6561 mo
(, )
[5.15988 0 ]xsh
451.855 84.6561 mo
(OpenCL)
[18.1199 14.1599 12.5999 13.5599 14.8801 0 ]xsh
542.935 84.6561 mo
(etc.)
[12.5999 8.16016 11.0401 0 ]xsh
602.82 351.64 mo
602.82 345.951 607.431 341.34 613.12 341.34 cv
673.4 341.34 li
679.089 341.34 683.7 345.951 683.7 351.64 cv
683.7 392.84 li
683.7 398.529 679.089 403.14 673.4 403.14 cv
613.12 403.14 li
607.431 403.14 602.82 398.529 602.82 392.84 cv
cp
0 0 0 0 cmyk
ef
602.82 351.64 mo
602.82 345.951 607.431 341.34 613.12 341.34 cv
673.4 341.34 li
679.089 341.34 683.7 345.951 683.7 351.64 cv
683.7 392.84 li
683.7 398.529 679.089 403.14 673.4 403.14 cv
613.12 403.14 li
607.431 403.14 602.82 398.529 602.82 392.84 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: LKAAAA+SegoeUI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CSVBME+SegoeUI gcheck setglobal} if
2 2090 49 <000100bc00000540059a001300ad400d770c01720b017802017d01010bb8
fff0400a0b004d0f080b0d014c05b8fff8402f0b0d014c0e12010504090a
0309010f00060d064d00060c064d00060b064d007e7f110111180d064d11
11080c064d11b8fff840190b064d11150b0508060d064d08060c064d0806
0b064d087e09b8fff2b30d064d09b8fff840090c064d09060b064d092f2b
2b2be92b2b2b393212392b2b2f2b5de92b2b2b3933002f3f1217392b2b31
30012b5d5d5d5d21230126272316151123113301161733263511330540ce
fd1e1c120608a8da02ce2d0d040aa804772b2f2e97fbf4059afb9b461a3e
9503f200>CSVBME+SegoeUI AddT42Char 
CSVBME+SegoeUI /CharStrings get begin
/N 49 def
end
CSVBME+SegoeUI /Encoding get
dup 78 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CSVBME+SegoeUI*1 
[32{/.notdef}rp /space 2{/.notdef}rp /numbersign 8{/.notdef}rp /comma /hyphen /period 
/slash /zero /one 4{/.notdef}rp /six 10{/.notdef}rp /A /.notdef 
/C 5{/.notdef}rp /I 2{/.notdef}rp /L /M /N /O 
/P /.notdef /R /S /T 3{/.notdef}rp /X 8{/.notdef}rp 
/a /b /c /.notdef /e /.notdef /g /.notdef 
/i /.notdef /k /l /m /n /o /p 
/.notdef /r /s /t /u /.notdef /w /.notdef 
/y 134{/.notdef}rp]
CSVBME+SegoeUI nf
CSVBME+SegoeUI*1 [20.04 0 0 -20.04 0 0 ]msf
623.639 379.624 mo
(NoC)
[14.9999 11.7635 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/CSVBMF+Meiryo-Bold-90ms-RKSJ-H-Identity-H uf
/CSVBMF+Meiryo-Bold-90ms-RKSJ-H /CIDFont ur
/CSVBME+SegoeUI*1 uf
/CSVBME+SegoeUI uf
/LKAAAA+SegoeUI uf
/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H-Identity-H uf
/CSVBMD+MeiryoUI-Bold-90ms-RKSJ-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
