%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: subscriber_design2.pdf
%%Creator: Adobe Acrobat 18.9.0
%%For: Yuya
%%CreationDate: 2018/01/27, 20:31:59
%%BoundingBox: 0 0 720 540
%%HiResBoundingBox: 0 0 720 540
%%CropBox: 0 0 720 540
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1153 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   xmp:ModifyDate="2018-01-27T20:31:45+09:00"
   xmp:CreateDate="2018-01-27T20:31:43+09:00"
   xmp:MetadataDate="2018-01-27T20:31:45+09:00"
   xmp:CreatorTool="PowerPoint 用 Acrobat PDFMaker 18"
   xmpMM:DocumentID="uuid:c79429f4-2425-4074-ad36-60bf21db2121"
   xmpMM:InstanceID="uuid:d2cad536-17f7-46d1-adcf-65acee81e503"
   dc:format="application/pdf"
   pdf:Producer="Adobe PDF Library 15.0"
   pdfx:Version="1">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint Presentation</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>takuya</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
720 540 li
720 0 li
cp
clp
2.28 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
318.18 112.38 mo
696.66 112.38 li
696.66 459.06 li
318.18 459.06 li
cp
false sop
0 1 1 .00173953 cmyk
@
168.42 302.1 mo
302.82 302.1 li
302.82 459.06 li
168.42 459.06 li
cp
@
169.98 112.38 mo
304.38 112.38 li
304.38 269.34 li
169.98 269.34 li
cp
@
224.413 340.943 mo
232.747 339.008 241.487 339.875 249.279 343.41 cv
241.244 361.12 li
237.348 359.353 232.978 358.919 228.811 359.887 cv
cp
0 0 0 0 cmyk
ef
4.5 lw
224.413 340.943 mo
232.747 339.008 241.487 339.875 249.279 343.41 cv
241.244 361.12 li
237.348 359.353 232.978 358.919 228.811 359.887 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
267.23 359.978 mo
271.188 367.121 272.797 375.328 271.83 383.436 cv
252.52 381.133 li
253.003 377.079 252.198 372.975 250.22 369.404 cv
cp
0 0 0 0 cmyk
ef
267.23 359.978 mo
271.188 367.121 272.797 375.328 271.83 383.436 cv
252.52 381.133 li
253.003 377.079 252.198 372.975 250.22 369.404 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
261.914 405.075 mo
256.396 411.11 249.116 415.253 241.108 416.914 cv
237.159 397.872 li
241.162 397.041 244.802 394.97 247.561 391.952 cv
cp
0 0 0 0 cmyk
ef
261.914 405.075 mo
256.396 411.11 249.116 415.253 241.108 416.914 cv
237.159 397.872 li
241.162 397.041 244.802 394.97 247.561 391.952 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
194.374 376.683 mo
194.866 367.78 198.402 359.317 204.389 352.71 cv
218.799 365.77 li
215.806 369.073 214.038 373.305 213.792 377.756 cv
cp
0 0 0 0 cmyk
ef
194.374 376.683 mo
194.866 367.78 198.402 359.317 204.389 352.71 cv
218.799 365.77 li
215.806 369.073 214.038 373.305 213.792 377.756 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
203.866 353.3 mo
209.153 347.223 216.197 342.937 224.025 341.035 cv
228.617 359.932 li
224.703 360.883 221.181 363.026 218.538 366.065 cv
cp
0 0 0 0 cmyk
ef
203.866 353.3 mo
209.153 347.223 216.197 342.937 224.025 341.035 cv
228.617 359.932 li
224.703 360.883 221.181 363.026 218.538 366.065 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
249.552 343.535 mo
256.962 346.966 263.104 352.642 267.108 359.759 cv
250.159 369.295 li
248.157 365.736 245.086 362.898 241.381 361.182 cv
cp
0 0 0 0 cmyk
ef
249.552 343.535 mo
256.962 346.966 263.104 352.642 267.108 359.759 cv
250.159 369.295 li
248.157 365.736 245.086 362.898 241.381 361.182 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
271.771 383.911 mo
270.741 391.724 267.363 399.04 262.083 404.89 cv
247.646 391.859 li
250.286 388.934 251.976 385.277 252.49 381.37 cv
cp
0 0 0 0 cmyk
ef
271.771 383.911 mo
270.741 391.724 267.363 399.04 262.083 404.89 cv
247.646 391.859 li
250.286 388.934 251.976 385.277 252.49 381.37 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
241.114 416.913 mo
233.868 418.417 226.344 417.823 219.424 415.2 cv
226.316 397.015 li
229.776 398.326 233.539 398.624 237.161 397.872 cv
cp
0 0 0 0 cmyk
ef
241.114 416.913 mo
233.868 418.417 226.344 417.823 219.424 415.2 cv
226.316 397.015 li
229.776 398.326 233.539 398.624 237.161 397.872 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
200.971 400.59 mo
196.277 393.636 193.958 385.351 194.359 376.97 cv
213.784 377.9 li
213.583 382.09 214.743 386.233 217.09 389.71 cv
cp
0 0 0 0 cmyk
ef
200.971 400.59 mo
196.277 393.636 193.958 385.351 194.359 376.97 cv
213.784 377.9 li
213.583 382.09 214.743 386.233 217.09 389.71 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
219.233 415.127 mo
211.782 412.258 205.395 407.166 200.938 400.541 cv
217.073 389.686 li
219.302 392.998 222.495 395.544 226.221 396.978 cv
cp
0 0 0 0 cmyk
ef
219.233 415.127 mo
211.782 412.258 205.395 407.166 200.938 400.541 cv
217.073 389.686 li
219.302 392.998 222.495 395.544 226.221 396.978 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
224.83 150.893 mo
233.164 148.958 241.904 149.825 249.696 153.36 cv
241.661 171.07 li
237.765 169.303 233.395 168.869 229.228 169.837 cv
cp
0 0 0 0 cmyk
ef
224.83 150.893 mo
233.164 148.958 241.904 149.825 249.696 153.36 cv
241.661 171.07 li
237.765 169.303 233.395 168.869 229.228 169.837 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
267.647 169.929 mo
271.605 177.072 273.214 185.279 272.247 193.387 cv
252.937 191.084 li
253.42 187.03 252.615 182.926 250.637 179.355 cv
cp
0 0 0 0 cmyk
ef
267.647 169.929 mo
271.605 177.072 273.214 185.279 272.247 193.387 cv
252.937 191.084 li
253.42 187.03 252.615 182.926 250.637 179.355 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
262.331 215.026 mo
256.813 221.061 249.533 225.204 241.525 226.865 cv
237.576 207.823 li
241.579 206.992 245.219 204.921 247.978 201.903 cv
cp
0 0 0 0 cmyk
ef
262.331 215.026 mo
256.813 221.061 249.533 225.204 241.525 226.865 cv
237.576 207.823 li
241.579 206.992 245.219 204.921 247.978 201.903 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
219.65 225.077 mo
212.199 222.208 205.812 217.116 201.355 210.491 cv
217.49 199.636 li
219.719 202.948 222.912 205.494 226.638 206.928 cv
cp
0 0 0 0 cmyk
ef
219.65 225.077 mo
212.199 222.208 205.812 217.116 201.355 210.491 cv
217.49 199.636 li
219.719 202.948 222.912 205.494 226.638 206.928 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
194.79 186.634 mo
195.282 177.731 198.818 169.268 204.805 162.661 cv
219.215 175.721 li
216.222 179.024 214.454 183.256 214.208 187.707 cv
cp
0 0 0 0 cmyk
ef
194.79 186.634 mo
195.282 177.731 198.818 169.268 204.805 162.661 cv
219.215 175.721 li
216.222 179.024 214.454 183.256 214.208 187.707 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
gsave
0 540 mo
720 540 li
720 0 li
0 0 li
cp
clp
204.282 163.251 mo
209.569 157.174 216.613 152.888 224.441 150.986 cv
229.033 169.883 li
225.119 170.834 221.597 172.977 218.954 176.016 cv
cp
0 0 0 0 cmyk
ef
204.282 163.251 mo
209.569 157.174 216.613 152.888 224.441 150.986 cv
229.033 169.883 li
225.119 170.834 221.597 172.977 218.954 176.016 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
grestore
249.968 153.486 mo
257.378 156.917 263.52 162.592 267.524 169.71 cv
250.575 179.246 li
248.573 175.686 245.502 172.849 241.797 171.133 cv
cp
0 0 0 0 cmyk
ef
249.968 153.486 mo
257.378 156.917 263.52 162.592 267.524 169.71 cv
250.575 179.246 li
248.573 175.686 245.502 172.849 241.797 171.133 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
272.187 193.862 mo
271.157 201.675 267.779 208.991 262.499 214.841 cv
248.062 201.81 li
250.702 198.885 252.392 195.228 252.906 191.321 cv
cp
0 0 0 0 cmyk
ef
272.187 193.862 mo
271.157 201.675 267.779 208.991 262.499 214.841 cv
248.062 201.81 li
250.702 198.885 252.392 195.228 252.906 191.321 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
241.531 226.863 mo
234.285 228.367 226.761 227.773 219.841 225.15 cv
226.733 206.965 li
230.193 208.276 233.956 208.574 237.578 207.822 cv
cp
0 0 0 0 cmyk
ef
241.531 226.863 mo
234.285 228.367 226.761 227.773 219.841 225.15 cv
226.733 206.965 li
230.193 208.276 233.956 208.574 237.578 207.822 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
201.388 210.541 mo
196.694 203.587 194.375 195.302 194.776 186.921 cv
214.201 187.851 li
214 192.041 215.16 196.184 217.507 199.661 cv
cp
0 0 0 0 cmyk
ef
201.388 210.541 mo
196.694 203.587 194.375 195.302 194.776 186.921 cv
214.201 187.851 li
214 192.041 215.16 196.184 217.507 199.661 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
6.66 178.62 mo
6.66 164.172 34.678 152.46 69.24 152.46 cv
103.802 152.46 131.82 164.172 131.82 178.62 cv
131.82 193.068 103.802 204.78 69.24 204.78 cv
34.678 204.78 6.66 193.068 6.66 178.62 cv
0 0 0 0 cmyk
ef
2.04 lw
6.66 178.62 mo
6.66 164.172 34.678 152.46 69.24 152.46 cv
103.802 152.46 131.82 164.172 131.82 178.62 cv
131.82 193.068 103.802 204.78 69.24 204.78 cv
34.678 204.78 6.66 193.068 6.66 178.62 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: PHAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.348 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /PHAAAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f329bf03924000000cc000000606376
74203fba58ec0000012c000006886670676da1ea42ac000007b400000913
676c7966836946c30000f96c00001adc68656164f6a984e6000010c80000
0036686865610dbb1c530000110000000024686d7478fed3a9fd00001124
000064b06c6f636102872bf4000075d4000064b46d61787026b806c30000
da88000000206e616d65e96edc240000daa8000007de70726570f940ca73
0000e288000016e1676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e0002affc000247b00000009000000004d53202000200000
feff0600fe0001c4079e0226200001ff0000000003c0050e000000200014
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000005aa001500a0fff8ff42fea2fdbc03b6015401cc
0108010e00ff00f5006e014000a0055e006b0570fff60122fff10547ffec
04faffec0131fff4000a03a0036600b400e1044c007c40465f5e5d5c5b5a
59585554535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a
39383736352f2e2d2c2826252423221f181411100f0d0b0a090807060504
030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c452346
2361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b00426234848
2d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d4423
5920b0ed51582320b04d44235920b0042651582320b00d44235921212d2c
20204518684420b001602045b04676688a4560442d2c01b10b0a43234365
0a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228
453ab10200080d2d2c2045b00325456164b050515845441b2121592d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2c8a03458a8a87b011
2bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b52584544
1b2121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c
6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b
59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b00260
2d2c0c6423648bb84000626023212d2c4523456023456023456023766818
b08062202d2cb00426b00426b00425b0042545234520b003266062636820
b0032661658a2344442d2c2045b0005458b040442045b04061441b212159
2d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b
2121592d2c4b515820b0032545695358441b2121591b2121592d2c45b014
43b0006063b0016069442d2cb02f45442d2c452320458a60442d2c452345
60442d2c4b235158b90033ffe0b134201bb3330034005944442d2cb01643
58b00326458a586466b01f601b64b020606620581b21b04059b001615923
586559b02923442310b029e01b2121212121592d2cb0164358b004254564
b020606620581b21b04059b0016123586559b0292344b00425b007250820
58021b0359b0052510b004252046b0042523423cb0072510b006252046b0
0425b0016023423c2058011b0059b0052510b00425b029e0b0072510b006
25b029e0b00425b00725082058021b0359b00425b003254348b00625b003
25b0016043481b2159212121212121212d2cb0164358b004254564b02060
6620581b21b04059b0016123581b6559b0292344b00525b0082508205802
1b0359b0042510b005252046b0042523423cb00425b0072508b0072510b0
06252046b00425b0016023423c2058011b0059b0042510b00525b029e0b0
2920456544b0072510b00625b029e0b00525b00825082058021b0359b005
25b003254348b00425b0072508b00625b00325b0016043481b2159212121
212121212d2c02b00425202046b004252342b0052508b003254548212121
212d2c02b0032520b0042508b0022543482121212d2c452320451820b000
50205823652359236820b040505821b04059235865598a60442d2c4b5323
4b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b
53234b515a58381b2121592d2cb000214b5458381b2121592d2cb0024354
58b0462b1b21212121592d2cb002435458b0472b1b212121592d2cb00243
5458b0482b1b21212121592d2cb002435458b0492b1b212121592d2c208a
08234b538a4b515a5823381b2121592d2c0020b200400325b0062649618b
3812342d2c014623466023466123201020468a61b8ff80628ab140408a70
4560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2c
b012004b014b54422d2cb1020042b123018851b1400188535a58b9100000
20885458b202010243604259b12401885158b920000040885458b2020202
436042b12401885458b2022002436042004b014b5258b202080243604259
1bb940000080885458b202040243604259b94000008063b80100885458b2
02080243604259b94000010063b80200885458b202100243604259b94000
020063b80400885458b202400243604259595959592d2c451868234b5158
2320452064b04050587c59688a6059442d2cb00016b00225b0022501b001
233e00b002233eb10102060cb00a236542b00b234201b001233f00b00223
3fb10102060cb006236542b0072342b00116012d2c20b82000628a602362
2d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd1bed
5921b006255cb006255a58b0092b5920b005254ab0042547b004254760b0
062547b0806361b00225b0005558b00325b00725496359b0082558001b01
59b00425b0062549b009255cb009255a58b0092b59b0072546b0806361b0
032520b0005558631b2159612320b0005558b080631b21b08059b0592bb0
06255c586959b00425202010b00048233ab0062658001b0159b0052658b0
03252f598a12233221212d2cb00625b00a2587b00625b009254ab0005358
b00625b00a251bb00925b0072559b00225b00225070cb005256323b00625
636020b94000040063535821b00426b00426b00a1bb94000040063655158
b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0ab009
2eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b00525
b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821cd1b
ed59b00525b0052507b00825b00b254923b00625b0062587b00a2510b00b
25c15920b00051b800522378b00161b00225b00725b0072507b00a25b00d
254961b08062b00525b005250bb00a252338b00625b0062587b00825b008
250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ff
a723792121212121212121212121212d2c23b0005458b9400000001bb900
004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b00054
58b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940
0000001bb90000400059b05b2b2d2cb00426b00426080db00426b0042608
0db05b2b2d0000010000000633336cfbf39e5f0f3cf50019080000000000
bbeb7ccc00000000d5968a63fbdafd350a1a085000010009000200010000
0000000100000600fe0001c40aa0fbdafa860a1a00010000000000000000
000000000000192c040e0000000000000000000001cf000004d9001704d9
001704d9001704d9001704d9001704d9001704d9001704d9001704d90017
04d9001704d900170634ffd30634ffd3047c008d043c004f043c004f043c
004f043c004f043c004f043c004f050b008d050b008d051d000f051d000f
03e7008d03e7003f03e7008d03e7003f03e7003c03e7004d03e7005503e7
007503e7008d03e7008d03ac008d05190049051900490519004905190049
05190049050c008d050c008d054300100222008d0222ff5a022200260222
ff440222ff480222ff4e0222ff5b0222ff80022200220222001e04c9008d
02a6000302a6ffaf0460008d0460008d0362008d036200720371008d0362
008d03760015047e008d06fe008d0545008d0545008d0545008d0545008d
0545008d0521008d05690050056900500569005005690050056900500569
0050056900500569005005690050057200500572005006fe00500442008d
0442008d057d00500481008d0481008d0481006a0481008d03c8003f03c8
003f03c8001f03c8002303c8003f03c8003f03f6000c03f6000c03f6000c
03f6000c0539008c0539008c0539008c0539008c0539008c0539008c0539
008c0539008c0539008c0539008c0539008c04bb00160740002b0740002b
0740002b0740002b0740002b046800210428001004280010042800100428
00100428001003d3003303d3003303d3001e03d300330447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a0447
000a0447000a058fffe2058fffe20438008603cb005a03cb005a03cb005a
03cb005a03cb005a03cb005a049100860491008104a6002604a60026038f
0086038f0024038f0086038f0020038f0020038f001d038f0030038f003f
038f0086038f008603580086049c0058049c0058049c0058049c0058049c
0058049c0086049c008604c10034021000860210ff600210001f0210ff54
0210ff410210ff530210ff650210ff7b0210001802100016046f00860269
00000269ffa1040500860405008602fc008602fc0085030d008602fc0086
030c002c041500860648008604c7008604c7008604c7008604c7008604c7
00860497008604da005504da005504da005504da005504da005504da0055
04da005504da005504da005504e4005504e40055062e005503fd008603fd
008604de005504250086042500860425005a04250086036f0043036f0043
036f0001036f0006036f0043036f0043037b001b037b0008037b001b037b
001b04ac008404ac008404ac008404ac008404ac008404ac008404ac0084
04ac008404ac008404ac008404ac00840435001b068a002b068a002b068a
002b068a002b068a002b0404002603cd000b03cd000b03cd000b03cd000b
03cd000b038f003e038f003e038f0016038f003e03f3004703f3004703f3
004703f3004703f3003703f3004703f3004703f3004703f3004703f30047
03f300470633004706330047044b007e03590048035900480359003b0359
00480359004803590048077d004807080048060e0048060e0048044b004b
04c6004b048d004b044b004c0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0407004a0407004a0288001906c20019
0909001904ce001906c2001909090019046f0019046f0019046f0019046f
001904810019048100190481001904810019046f0019046f001906b60019
06b6001906b6001906b6001906c8001906c8001906c8001906c8001906b6
001906b60019046f0019046f001906b60019064d001908950019046f0019
046f001904ea0019046f001906b60019051600190516001905450019075e
001903cb001b03cb001b03cb001b03cb001b03cb001b044b004b044b004b
044b004b044b004b044b004b044b007e044bff9f0461fff901f7006b01f7
ff7801f7001a01f7ff6301f7ff3701f7ff7601f7ff6d01f7ff7301f70008
01f7007e0403006b043a006e020bffdb020bffdb020bff6d03d7007e03d7
007e03d7007e01f7007e01f700320273007e01f7003f021c00140361007e
0682007e044b007e044b007e044b007e044b0063044b007e04faff96044b
007e044d0048044d0048044d0048044d0048044d0048044d0048044d0048
044d0048044d0048045a0048045a004806be0048044b007e044b007e044b
004b02d8007e02d8007e02d8fff202d8005703310049033100490331ffff
03310000033100490331004905d4004905d400490470007f0211007e02c6
001702e8001702c6001702d6001b0510001704af001704af001704af0017
04af001704af001704af001704af001704af001704af001704af00170540
0017078a0017072800170728001707280017072800170728001707280017
07280017072800170728001707280017044b0079044b0079044b0079044b
0079044b005e044b0079044b0079044b0079044b0079044b0079044b0079
03c9001605f6002305f6002305f6002305f6002305f6002303ad002003ca
001603ca001603ca001603ca001603ca0016032e0045032e0045032e0003
032e004503540066037b005503a5005002bf003602f5005a0244003802f5
003a02c7003a01d0001c029c001802fb005a017a004f0184ffd902c0005a
0176005a046c005a02f9005a02f5003902f5005a02f5003a0200005a023a
003c01fa001c02fb005a02a50019041b002002a9002002a60017023a0034
026700000284000002a000000000fcfe0000fce3026800000284000002a0
00000000fcfe0000fce20336000003690000039b00000000fc980000fc64
0336000003690000039b00000000fc960000fc6501fc0000038e00000392
0000039600000000fc6b0000fc6803510000030f0000036d000003880000
0000fc890000fc6d031f000003470000036e00000000fca10000fc7a0314
0000031c0000032400000000fca80000fc9f029f000002a3000002a80000
0000fce20000fcde02cf000002c2000002b5000003e30000041500000445
00000000fc400000fc0f01e2000001f7000001e2000001e200000000fd43
0000fd43026d00660000fd60028600660000fd5502020067022c000004d9
001704d9ff72047c008d0347008d049f002b03e7008d03e7fe9d03d30033
050c008d050cfe7a056900500222008d0222fe930222ff4f0460008d04c0
001a06fe008d0545008d03f0004d056900500569ff0f050c008d0442008d
03c2004a03f6000c042800100428fe4d0428001006690000046800210676
0077057200490572fef30447000a0447000a0438008603120086040e0021
038f0086038f0086038f003e049c0086049c008604f60055021000860210
00100210ff5204050086041e00110648008604c700860393005704da0055
04da0055049c008603fd0086037a004e037b001b03cd000b03cd000b03cd
000b05bb00000404002605d8006e04e1005504e1005504ba004c04ba004c
045d007e0452005203bd000c0443000003a9004703a9004702ea0040045a
007e045a007e045c0050048f0004024a0079024a0000024aff7d024aff1d
03d7007e03e400000482007e03c500160315003e031e0044044d0048044d
004804a20020043e0064045b004603410049032400020463007404630074
04630073046300280598004205980044039b000905e7007605be004f05be
004f028900000000fd0403f400000000fc360224007d0224007d0224007d
02350036021000540210005404d900170472008e047c008d0375008d0375
008d0379008d0562000a03e7008d03e7003f03e7004c06a9003a03db003e
0537008d0537008d0537008d0222008d0222ff4e02a600030481008d0481
008d0508000a072a000a06fe008d050c008d072c008d0569005005690050
050a008d0442008d043c004f03c8003f03f6000c046100080461000804e5
001605ca0000046800210543008d0507008d048e004d072d008d076a008d
051d000c0663008d046d008d044f0048044f004f074f008d049800400516
000c050f000c051a00000447000a041c0088043800860321008603210086
033a008604b6000b038f0086038f0024038f001e05d800310396004a04b0
008604b0008604b00086021000860210ff5302690000040c0086040c0086
0461000306480086049c008604da005504d700550497008603fd008603cb
005a036f0043037b001b03d6001703d60017045a001a0543000004040026
04ba00860490008604320051066f008606960086049c001805d700860419
008603e6005d03ee0055068800860432004a048a001d0490001d04810000
06430003066c008603f30047044200000443000003f5007e02d6007e02d6
007e02f0007e01f7ff6d04a80019044b004b0407004a0407004a0407004a
05e50030036a003a0474007e047400700474007e01f7006b01f7ff76020b
ffdb03f5007e03f5007e043500140636001205b5004c045d007e065a007e
044d0048044900480446007e044b0079044b007e0359004803310049031e
00090682007e03ca001603ca001603f900160567004203ad0020047f007e
044c007e03e80030061b007e0650007e0477000905b2007e03f5007e037f
003f0380004a0606007e03fc002b046dfff90461fff90441001103a20000
03a2000003a200000000fc950000fc95029b00e6029b009b029b009b03b5
007303b5005303b50053040a0058026900cf02690091035e006d03550045
0210001702350036023500a00223007d05b1007c0210006b021000170210
006b02100017037b0064037b001b037b0064037b001b02100017037b001b
02c1005802c100a902c1005802c100a9044f0059044f0097044f0059044f
009703700002033f002003cd017003fc01870370001c033f003d0273003b
0273003b03fcfff503fcfff5073e0083073e0083073e0083073e008303fc
fff903fc00940224007d0224007d027e006b027e00610299009d02990057
02c0003602c000690259006d025900630277009202770065027e006b027e
00610299009d0299005702c0003602c0006903fc008603fc006003fc0061
03fc005604c80052045d005703fc001e03fc003901de00790382007905a3
0000057600000841000007300000074400000730000006ad009e06ad009e
040e006905c3003205d9004f02bd000003fc002104b6003c040e002003fc
0049040e00520458004c03fc00a903fc0044040e004c03fc0063044d0015
040e001d03df002d039f005503f8004f039f0054039f000506350039085e
008d03fc001c073f00860437001a04a8004e02de001903f2004f03f00043
0460001e03e9004f0442006603be002f0440004d04420047040e0039040e
0094040e0058040e0055040e001a040e0060040e0054040e0051040e003d
040e00420474005802ad001c03a000510385004d03d30024038a005f03ce
0058035f002503d4003a03dc0046039f0037039f0079039f0050039f0053
039f002d039f0062039f0045039f0047039f0038039f003804a8004e02de
001903f2004f03f000430444001e03e9004f0442006603be002f0440004d
04420047040e0039040e0094040e0058040e0055040e0024040e0060040e
0054040e0051040e003d040e0042032f003d0205001d02b4003e02b00038
02ed002302b2004302e4004b029d002e02ed003c02e4003602d7003b02d0
003a02c7004b01c7004d01c70047032f003d0205001d02b4003e02b00038
02ed002302b2004302e4004b029d002e02ed003c02e4003602d7003b02d0
003a02c7004b01c7004d01c7004702b5002f020500250270003002740023
02750010026a0031027a002a0261001d028b001e026e001b02b5002f0205
0025027000300274002302750010026a0031027a002a0261001d028b001e
026e001b02d8ff2e032c003805870038059400380543003805940038055a
00380592003805fa004205fa0042059d003b05eb003b05e8003b06070023
05b1004405e800440570002c05d50039087e0039057c004607ed004603fc
003403fc003703fc005403fc002203fc005303fc005403fc005103fc0044
03fc006603fc004503fc005503fc005603fc002f05e9002c0439002206b4
0059044c004c0301000e03fcfffe049f002b057200490482007e06420053
0467005304450036073e0092073e0087073e00b6073e00b606b7007606b7
010806b7007606b701080a7b00920626007d0466002801da000001da0000
04660000046600000466ffdb0466ffde0466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
04660000046601a804d9001704d9001704d9001704d9000504d9001704d9
001704d9001704d9001704d9001704d9001704d9001704d9001703e7008d
03e7008d03e7004703e7ffe803e7ffbd03e7ffdd03e7ffdd03e700460222
002c02220088056900500569005005690050056900500569005005690050
05690050061e005005940050059400500594005005940050059400500539
008c0539008c0617008c0617008c0617008c0617008c0617008c0617008c
04280010042800100428001003f3004703f3004703f3ffca03f3ff9a03f3
ffca03f3ffc503f3004703f3ffc503f3ffc903f3ffc803f3ffc503f30047
0407004a0407004a040700300407ffdb0407ffb60407ffd90407ffd90407
004a01f7001c01f7006b044d0048044d0048044dfff2044dffd2044dffef
044dfff2044d004805100048051000480510004805100048051000480510
0048044b0079044b0079052e0079052e0079052e0079052e0079052e005e
052e007903ca001603ca001603ca0016048d004b046600380447000a0447
000a0447ffe80447ffc30447ffe80447ffe80447000a0447fff10447fff2
0447fff20447ffef0447000a038f0086038f0086038f0000038fffa8038f
ff83038fffa8038fffa8038f00410210001c0210007f04da005504da0055
04da003e04da001904da003e04da003804da0055058b0055058b0055058b
0055058b0055058b0055058b005504ac008404ac0084058a0084058a0084
058a0084058a0084058a0084058a008403cd000b03cd000b03cd000b01da
0000046600000466ffdb0466000004660000046600000466000004660000
0466000004c100660540008d0545008d0536008d04b5008604c3008604b5
008603f6000c02c60017037b001b01f70008046f0019046f0019046f0019
06b6001906b6001906b6001903130018030a007803160054036b007802b7
007802920078037c00550367007801b000780205002802f4007802670078
049a00780392007803a1005502f4007803a10055030d00780288003a02b0
001e0378006e0313001804a1002802c9001802ac0011025d001b0000fdfc
0000fdfc0466010c0466010c0466007e0466007e03c1000003c10000030c
0000030c0000030c0000030c0000022c0000022c000001ff000001ff0000
01ff000001ff00000000fcff0000fcff02aa006902aa006902aa009802aa
009801ce000002aa008202aa008202aa008202aa0082027f0050027f006a
0324ffeb029100840466010c02aa001402aa001303360000033600000314
0000030c0000038e0000031f000003fcfff903fcfff9038e0000038e0000
0000fedd0000fe4a0000fdfa0000fdfa0000fe290000fe290000fdae0000
fdae01ce000002aa00140291008302aa001502aa000002aa0000039a0000
039a00000000fdfd0000fdfd0000fd090000fd090000fd090000fd0902aa
000002aa000003fcfff90466007e02aa0098038e0000038e0000038e0000
038e0000038e0000038e000004010014040101470000000002aa000002aa
000001ce000001ce0000030c0000030c000002aa000002aa00c802aa00c8
03f100c801ce000001ce000001e2000001e2000002aa00a003b1008402aa
000002aa0000075c003c075c0000075c0000075c0000075c0000075c003f
06d2000006d20000075c0000075c0000075c004001df002001df002001e7
002401e7002400f8002f00f8002f02070022020700220209003702090037
019d0028019d002802070023020700230209003902090039030900380309
0038015f003d015f003d015200100152001001c3000601c3000601bf0008
01bf0008032700250327002503270025032700250000ff9203bd0000041a
0000041a00000416ffe40416ffe4041a000b041a000b041a000b041a000b
0401ffff0401ffff0401ffff0401ffff015f003d02aa000001ce000003f1
00c8055800190472008e049300140433003104db004f051d000f05e70019
0472003b03e7005b0543005003f1005503acffd60573004904ba00110266
008d026800110464008d071c008c0545ffd605690050066a004f051e0019
0481008d03cf003f03c2004a045c001903f6000c057200490539008c0465
001003d3003303eb003e03f10046040e004e08de008d0839008d0629008d
056d008d07eb008d0750008d04d900170222ff43056900500539008c0539
008c0539008c0539008c0539008c04d9001704d900170634ffd305290049
0519004904600073056900500569005003eb000008c5008d0839008d0519
00490714008d04e6008d0545008d04d9ffed04d9001703e7ffcd03e70055
0222feac0222ff5c0569003b056900500481ffbf04810078053900390539
008c03eb003e050c008d0523008d0439004603ec003304d9001703e7008d
056900500569005005690050056900500428001004d9ffde0446ffda0385
0011040affab0382003b0496000b055e000f04c0001a03e8ff9102c30003
050f004f049d000f04b4000704d90017047c008d047c008d047c008d043c
004f050b008d050b008d050b008d050b008d050b008d03e7007a03e7007a
03e7008203e7003e03e7008003ac008d05190049050c008d050c008d050c
008d050c0015050c008d0222ff460222ff7e0460008d0460008d0460008d
0362008d03620035036200600362006606fe008d06fe008d06fe008d0545
008d0545008d0545008d0545008d05690050056900500569005005690050
0442008d0442008d0481008d0481008d0481008d0481008d03c8003f03c8
003f03c8003f03c8003f03c8003f03f6000c03f6000c03f6000c03f6000c
0539008c0539008c0539008c0539008c0539008c04bb001604bb00160740
002b0740002b04680021046800210428001003d3003303d3003303d30033
0390002403e40012046300110481008d0562008d04cc008d03f50033043c
003003ac004903e9008d04920029044b007e045ffffb03b60048044b004b
0443004a0288fff8066e007e044b007e03d7007e0281001b03e40005044b
007e05870048044b007e033a004602ed001702c60017041c0014032e0045
03d5003e037400260362003d0779004b0402007e0656007e03f3004701f7
ff61044d0048044b0079044b0079044b0079044b0079044b007904070051
03f3004703f30047063300470474ffde03cb001b03d70042044d0048044d
004803a9001c020bff6b0779004b03cb001b044b007e03f3ffc003f30047
0407ffe30407004a01f7fecf01f7ff73044dffee044d004802d8ff7402d8
0011044b0000044b007903a9002a044b005104db004b041f0048033a0045
03f300470407004a044d0048044d0048044d0048044d004803ca001602a4
007804fc007e02cf0017069d004b069f004b0362ffe103310049032e0045
037a003b03fb00300260000502600005044b004b0308001003f2000c0391
0035040e00580325003c021d009903d9009904b30098029b00e603f30047
044b007e044b007e044b007e03590048044b004b044b004b044b004b044b
004b044b004b0407004a0407004a0407004a0407004a0407004a02880019
03cb001b044b007e044b007e044b0067044bffff044b007e01f7ff3501f7
ff3501f7ff6903d7007e03d7007e03d7006b01f7007201f7ff6d01f7ff6d
01f7ff620682007e0682007e0682007e044b007e044b007e044b007e044b
007e044d0048044d0048044d0048044d0048044b007e044b007e02d8007e
02d8007302d8000d02d8fffa033100490331004903310049033100030331
004902c6001702c6001702c6ffde02c6ffde044b0079044b006e044b0079
044b005a044b007903c9001603c9001605f6002305f6002303ad002003ad
002003ca0016032e0001032e0045032e0008044b007e02c6ffa805f60023
03ca001603f30047021100490290002403f3001a02f9ff970488007e042d
007e033d004503f400170363003802ee0027034e007e0599004204f60005
041c0088042b000a03cb00400429005a049f0019054f0005041c0041038f
006204d20055039600540358ffd304bb0058042b00140278008602fcffed
040500860690008204c7ffd304da00550622005504bb000504250086036f
0045037a004e03d90005037b001b04e1005504ac008403f9000b038f003e
038a004b038a00550385004108030086088f008d05b300860617008d06cf
00860768008d0447000a0210ff4704aa005504ac008404ac008404ac0084
04ac008404ac00840447000a0447000a055cffe2049c0058049c00580405
004804da005504da0055038a000008030086088f008d049c005806b30086
04a0008604c700860447ffc50447000a038fff9d038f004d0210feb20210
ff7004da000904da00550425ff9a0425006904acfff704ac0084038a004b
049c008604c3008604060056038f003e0447000a038f008604da005504da
005504da005504da005503cd000b0447000a03cb005402fc0000037b001b
033300320438001e04ac00000435001b038f00180269000004ad00550425
000003cdfff3039f00500333001e023000a0040600a004a90064026900cf
0447000a04380086043800860438007803cb005a04910086049100860491
00860491008604910086038f0029038f002e038f0050038f001e038f0046
03580086049c0058049c0086049c0086049c0086049c0009049c00860210
ff3e0210ff5504050086040500860405008602fc008602fc000002fc0028
02fc001e06480086064800860648008604c7008604c7008604c7008604c7
008604da005504da005504da005504da005503fd008603fd008604250086
042500860425005c04250086036f0043036f0043036f002c036ffff7036f
0043037b001b037b001b037b001b037b001b04ac008404ac008404ac0084
04ac008404ac00840435001b0435001b068a002b068a002b040400260404
002603cd000b038f000f038f003e038f0038049c0086037b000a068a002b
03cd000b0447000a02fc00000355ff9c03fd000004250086052f00860447
00860390003e03cb00400358004e040a0086047f0019047f001904c40019
047f0019046f0019046f0019047f0019049600190496001906b5001906b5
001906d6001906b5001906b6001906b6001906b5001906d2001904ce0019
04ad001704af001704af001704af001704af001704af001704af001704af
001704af0017072700170728001707280017072800170728001707280017
07280017072800170728001703f3007d044b004b044c007f044b007e0363
003803880048044b004b0461004b040700510407005105240054036a0042
036a003a044f003a043700480255000c045e004b044a004b044a004803d4
001203e0000c044b0079044b007d044b007e026b0010026b0010024a0079
029e001903270013033800130204007904ab007e06820079068200790682
007e044bffc7044b007e0468007e0449004805c1004805a7004405980042
02d8001d02d8001d02d9001d02d8007e02d8007e02a0007902a0001603ea
007e03ea007e0331004901eeffc20246ffee01eeffc2029fffae02c60038
02c6002604b1001004ad00520441007403c9001605f6002303ca001603b4
000e0338004503d5004503a9002a03ae002a0382003b038200480382003b
03590048052d005003f5007e0437004204540048045d007e02a4ffaf03d7
001c033c007e0460004b0382003b0382004806b4004b06fd004b075b004b
0522001704060017059f00170662001904f4007a04be007e0433002c03ef
0057045dffd3045effd30427000a0577ffda063300510425000a03bb005a
046200860462001203600086036a003a01f7006a026d001c03e2008602fa
002005b5004c0474007e04a8005703bb0044048a004e0489004e05280008
06be005203b90044044d0048044d004803db008603f6003403f600860355
001b04860082046f004e05e300440497006204090019063b0026036e003e
035c003a0331004103f40012030c008603eb000a0475008603db008605a4
0072044a0018031300180417000a030a00780327001e036b007802b70078
02b70046037c00550367007801b000780205002802f4007802670078049a
007803920078038d007803a1005502f9004c02f40078030d007802b0001e
0378006e04a1002802bf003602ac004702f5003a042c003602f5005a02f5
003a02c7003a02b8002e027b003802770038029c0018017a004f02c0005a
046c005a02f9005a02f500390244002a02e6003902e6003902f5005a01fa
001c02fb005a02db0044046c005a02a5001902a7001c02f2005a027e0010
02dc003703d1004d02c2002f017a004f0200005a02fb005a02a5001902f2
005a027e001002ed005203d1004d02c2002f069b007904df000e04da004b
032d000e077300140552001404bc000703660014033d001403ec0014032d
00140370001403cb001b032d006403e2003606af0017026c0013029d0013
0474000104e2001204d40012044b007e04ae004b02a8001905b5004b046b
007e0247007306d7007e04a0007e044b007e02d8007303ad0049036cffc2
03d30016042e00200352004504b8004704d2004b046a004b0411004a0388
0042036a003a041100510276006b0363003801eeffc204c80079038b0040
02e5004e02440038026e003802e000390277003401d0001c01c1fffb029c
001802fb005a01f7001401b20052017a005c01f80014022d000001bc005c
01b3005c0248005c046c005a046c005a032c0000032c005a0322006402f5
003903b70039023a003c020a000c0213001c035700160330004102eb0052
02e4005202c10017023a0034029e003402ca003402a200300316004002fb
005a02fb005a0184ffd90200005a01f60022020c002202b4005a041b0020
02a6001701c40035034300280210006b021000170210006a01ce000001ce
00000299004b0299005e03fc004403fc0066044b0032044b003202510000
026800000267000002510000032700000267000002680000023900980239
009801ce000001ce000002aa008202aa008202aa008202aa008202aa001e
02aa009302aa00160176005a023a003c02a900200299005e031000960310
009603100096031000960310009604570096045700960457009604570096
031000430457004304570043045700430457004304570043045700430457
002f0457002f0457002f0457002f0457002f0310002f0457002504570025
0457002504570025045700250310001a0457001a0457001a0457001a0457
001a0457001a031000420457004204570042045700420457004204570042
045700960457009604570096045700960310004204570042045700420457
00420457004204570042045700420457002f0457002f0457002f0457002f
0457002f0310002f0457002f0457002f0457002f0457002f0457002f0310
002604570026045700260457002604570026045700260310004204570042
045700420457004204570042045700420457009604570096045700960457
009603100042045700420457004204570042045700420457004203100026
045700260457002604570026045700260457002603100023045700230457
00230457002304570023045700230310002f0457002f0457002f0457002f
0457002f0457002f0310004b0457004b0457004b0457004b0457004b0457
004b04570096045700960457009604570096031000420457004204570042
0457004204570042045700420310001a0457001a0457001a0457001a0457
001a0457001a031000240457002404570024045700240457002404570024
0310002f0457002f0457002f0457002f0457002f0457002f0310004e0457
004e0457004e0457004e0457004e0457004e045700960457009604570096
0457009602aa006202aa006203360000049a0084037b001b02aa008502aa
008502aa00c802aa00c8029f00660267000003c1004703e30000038e0000
023500a002aa000002aa000002aa009802aa00980440fff60440fff60302
009803270000032700000324000002aa0000071200d4071200d402bf0036
02b8003a02f5003902a9002002c7003d01d9000001d9000001d9000001d9
000002890000028900000289000002890000038e0000038e000003290000
032900000329000003290000032400000324000003290000032900000329
0000032900000324ffff0324ffff03f4000003f4000003f4000003f40000
0324000003240000031f00000314000001ff000001d90000031f0000031f
0000031f0000031f00000314000003140000031400000314000003f40000
03f4000003f4000003f40000027f006a027f006a05690050043c004f0456
003a043c004f0456003a042f0008042ffe46042f000803ac008d05690050
046b000c05be008d04cc000c0433004f0442008d044a0054039400480394
003c04b8001204d7002606c50019043a0060043efff00359004803630038
035900480363002e05a1004603920079044d004803c7000c04ee007e04d0
000e03470049020bffdb045fffab04e4002604d7005503cb005a03cb0040
03cb005a03cb003d040a001e040afe33040a001e0358008604c400500454
003205540086047400370407005503fd008604d9ff9404d9fe4e04d9fe26
04d9feed04d9ff9e04d9fe5904d9fe3004d9feec04d9ff5004d9ff2604d9
001704d9001704d9001704d9ff9404d9fe5804d9fe3004d9feed04d9ff94
04d9fe5904d9fe3004d9feec06a4001706a4ff9406a4fe5806a4fe3006a4
feed06a4ff9406a4fe5906a4fe3006a4feec03e7feba04eafe7404eafe6c
03e7feba04eafe7404eafe6b03e7fe6703e7fe5d050cfeba060ffe74060f
fe6d05c7fece050cfeba060ffe74060ffe6d05c7fecc050cfe68050cfe5c
050c008d050cfeba060ffe74060ffe6c05c7fecd050cfeba060ffe74060f
fe6c05c7fecc06c2008d06c2feba07c5fe7407c5fe6c077dfecd06c2feba
07c5fe7407c5fe6c077dfecc0222feba0325fe740325fe6d02ddfecd0222
feba0325fe740325fe6d0222fecc0222fe670222fe5d0222ff5b0222ff80
0569fede0636fe740636fe420569fede0636fe730636fe440569fe9b0569
fe5e0442feba0428fe620591fe740591fe9c0591ff230428fe000428fe1c
04280010042800100572ff05063efe91063efe5a05f3fed50572fefc063e
fe91063efe5b05fafed40572feb10572fe7a057200490572ff05063efe7c
063efe5005fafecf0572fef1063efe7f063efe5005fafece074400490744
ff050810fe7c0810fe5007ccfecf0744fef10810fe7f0810fe5007ccfece
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c03a9004703a9004703a9004503a9004703a90047
03a9004703a9004703a90047045a007e045a007e045a007e045a007e045a
007e045a007e045a007e045a007e045a007e045a007e045a005d045a007e
045a007e045a007e045a007e045a007e045a007e045a007e045a007e045a
007e045a007e045a007e045a005d024a000b024aff86024aff83024aff6c
024a000a024aff86024aff86024aff69024aff14024aff14024aff60024a
ffef024aff7b024aff32024aff69024aff68044d0048044d0048044d0048
044d0048044d0048044d0048044d0048044d0048043e0064043e00640463
007404630074046300740463007404630074046300740463007404630074
046300080463000904630074046300740463007404630053046300710463
007405be004f05be004f05be004f05be004f05be004f05be004f05be004f
05be004f05be004f05be004f05be004f05be004f05be004f05be004f05be
004f05be004f05be004f05be004f05be004f05be004f05be004f05be004f
05be004f0447000a0447000a0447000a0447000a0447000a0447000a0447
000a0447000a0447000a0447000a0447000a0447000a0447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a0447
000a060c000a0616000a0616000a0616000a0616000a0616000a0616000a
0616000a0616000a038f0086038f0059038f0041038f0086038f0059038f
0041038f0086038f006f049c0086049c0086049c0086049c0086049c0086
049c0086049c0086049c0086049c0086049c0086049c0086049c0086049c
0086049c0086049c0086049c0086049c0086049c0086049c0086049c0086
064a00860659008606590086065900860659008606590086065900860659
008606590086021000250210ff8b0210ff720210ff7b0210001a0210ff8b
0210ff720210ff700210ff0e0210ff0f0210ff77021000090210ffa00210
ff420210ff660210ff7b04da005504da005504da005504da005504da0055
04da005504da005504da005503fd008603fd008603cd000b040a001e03cd
000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a001e
03cd000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a
001e03cd000b040a001e03cd000b040a001e03cd000b040a001e03cd000b
040a001e04e1005504e1005504e1005504e1005504e1005504e1005504e1
005504e1005504e1005504e1005504e1005504e1005504e1005504e10055
04e1005504e1005504e1005504e1005504e1005504e100550696005506a0
005506a0005506a0005506a0005506a0005506a0005506a0005506a00055
04d9001704d9ff9404d9fe5804d9fe3004d9feed04d9ff9404d9fe5904d9
fe3004d9feec050c008d050cfeba060ffe74060ffe6c05c7fecd050cfeba
060ffe74060ffe6c05c7fecc057200490572ff05063efe7c063efe500572
fe470572fef1063efe7f063efe500572fe4606a4001706a4ff9406a4fe58
06a4fe3006a4feed06a4ff9406a4fe5906a4fe3006a4feec06c2008d06c2
feba07c5fe7407c5fe6c077dfecd06c2feba07c5fe7407c5fe6c077dfecc
074400490744ff050810fe7c0810fe5007ccfecf0744fef10810fe7f0810
fe5007ccfece01d9000001d900000289000002890000039a000003290000
032900000324000003290000032900000324ffff03f4000003f400000324
000001d90000031f0000031400000232009d01ef009d01ef009d01ef009d
0588008d048b000f0442008d03870010046f008d071a003a03db003e04f4
008d04b3008d049c0010052b000c0562008d05d2008d0758008d05470050
043c004f03f6000c042800100428001004d700210605000c04cb004d048e
004d048e008d063d001e063d001e0222008d06a9003a04ac008d0558000a
050c008d055d008d048e004d074f008d04d9001704d900170634ffd303e7
0045054300500543005006a9003a03db000b03eb003e0537008d0537008d
056900500569005005690050044f0026046100080461000804610008048e
004d036a008d0663008d0387001004c7002004680021046d00280689003c
06000029043600290710000a0714008d052600490513000c03f100550544
000a04b6007e0407000c044b007e0306001003a7007e063e0030036a003a
044b007e043b007e04170010048d000c0494007e04f5007e05f4007e0483
004803590048031d000903cf001003cf00100402002004e60009043e004e
0406004e0406007e050500160505001605e500300410007e04770014045c
007e049e007e0406004e05e1000f0222008d03f3000d03f3004706330047
04070035040700510407005105e50030036afffd03a9002a0474007e0474
007e044d0048044d0048044d0048037ffffb03ca001603ca001603ca0016
03e8002602d6007e05b2007e0306001003fe002003ad0020044b004b063b
004b0573002a03ca002a063000140657007e045d004804850009036a0042
046e001404f900860419000003fd00860321ffff04420086062200310396
004a04380086043e0086040c000004a9001b04d0008605390086068e0086
04d1005503cb005a037b001b03cd000b03cd000b045a0026054f00190465
005104320051045c008605e1002005e100200210008605d8003104400086
04aa0003049c008604e6008604320051069300860447000a0447000a058f
ffe2038f004e04c7005004c7005005d8003103960003038a004b04b00086
04b0008604da005504d7005504d7005503e6001e03d6001703d6001703d6
00170432004e0321008605d7008603210000045b00260404002604190038
05fc00380580004a0417004a063400030670008604c400580486001b0396
0053049200030400000008000000040000000800000002af000002000000
01550000040e000001bc00000199000001000000000000000000ffdc0000
ff2a040e0024040e002403d9009903fefff90210006a037b006401b70028
0343002804c5002804b200e603fcfffa0290003a052b0050045a004f043c
004f03b60010040e00600682007e05830020075c008d061b008d0799002c
061d0098047c001203f6000c08ee001e047dfffb04bb002004e1004904fa
002804270024043c004f0635003906210034057800e6059d00e603fc0053
070100bc03fc0056045201d7045200be0400fff6040001bd040001bd0400
fff6040001bd0400fff60711008a045d003f047c008d040e003f04a60016
055800560407000e0682007904390048042bfffc035c003503ce00060451
0059033a0010032700000327000003270000025400000254000002540000
0254000002aaff6502aaff6504e0004607f4000a07e2fff70798ffe30792
0056063f008d0535000a0728002905d2002007a8008d03f2000a06760077
04e5001608ca005005b9005007920056079200560424004f05c100230539
007e0495000e064f007e0502001c06ba007e0366000c05e7007603f9ffd3
07a8004804b00048065c004b05c100230342004906c3005505f600860497
000a066300860552003107000086038c000a05d8006e0470001a087a0055
0527005506c3005506c3005503cb005a03c7009602aa00cf040e005b0000
ffdc0000fe5101cf0000025900a501c70000017a004f030cff4b0aa000b4
04d5009202d5008302d5008304d500b202d500700aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40000fc48
000000000000fd170000000000000000039a0000039a0000032400000324
000003240000039a00000324000003240000025600000329000003290000
03bd000002aaff65055001c4027f006303240000039a0000025600000289
001e000000d4000000de0284001e03240000032400000324000003240000
032400000324000003240000032400000324000003240000000000000000
00000000000000000000039a0000039a0000036d00000000000004150000
031c0000036d0000036d0000039200000347000003470000039200000392
00000354000003690000000000840000003f0000fffa0000007500000075
0000007500000075000000750594fe6e0594fe910594ff15042ffe04042f
fe15042f0008042f00080447000a0447000a0447000a060c000a060c000a
060c000a049c0086049c0086049c0086064a0086064a0086064a008603cd
ffec03cdffec03cd000b04e1005504e1005504e1005506a0005506a00055
06a000550000fd7a0000fd4f0000fd5a0000fd5a0000fbfe0000fc010000
fbdc0000fbda0000fbfe0000fbfc0000fbfe0000fbfc0000fbff0000fbff
0000fc000000fc000000fc000000fc000000fbfd0000fbfd0000fda80000
fc2e0000fc2e0000fd0a0000fd0a0000fc7d0000fc7e0000fbe30000fbe3
0000fcac0000fcac0000fcaa0000fca90000fd4f0000fd4f0000fd340000
fd340000fd330000fd330000fd470000fd470000fd760000fd760000fd45
0000fd600000fd600000fd600000fd600000fd340000fd6d0000fc8a0000
fd6e0000fd0a0000fcf10000fcf10000fc970000fc990000fca90000fca9
0000fc700000fca30000fc2e0000fc2f0000fc6d0000fc6d0000fd530000
fcf10000fd6d0000fcf30000fcde0000fcde0000fc660000fc650000fcdd
0000fcdd0000fc2e0000fc7e0000fd760000fc700000fc700000fc6b0000
fc6b0000fc700000fc710000fc460000fd7a0000fced0000fce70000fd45
0000fd450000fca80000fca80000fcde0000fd9f0000fdaf0000fcfb0000
fd530000fd530000fd420000fd420000fd7e0000fcde0000fcde0000fcde
0000fc8f0000fc530000fc530000fc530000fc530000fc920000fc980000
fc980000fc530000fc530000fcbf0000fd650000fd650000fd620000fd62
0000fde60000fde60000fd510000fd510000fd630000fd630000fd800000
fd7f0000fd510000fd510000fd6a0000fd6a0000fce90000fce90000fdc0
0000fdc00000fd8a0000fd8a0000fd570000fd570000fd5b0000fd5b0000
fcc30000fcc30000fcc30000fcc30000fc720000fc3c0000fc3c0000fc01
0000fc010000fc4e0000fc4e0000fc130000fc130000fc0e0000fc0e0000
fc4a0000fc4a0000fdb50000fcd10000fd9f0000fcf60000fd4c0000fd4c
0000fd470000fd470000fd2f0000fd2f0000fccd0000fccd0000fc700000
fc710000fcb20000fcb20000fc960000fc970000fca50000fca50000fcb2
0000fcb20000fc960000fc950000fc9f0000fc9f0000fc380000fc380000
fc380000fc380000fc9f0000fc9f0000fca30000fca90000fd470000fd4c
0000fca40000fca40000fca40000fca40000fca90000fca80000fcaa0000
fcaa0000fc380000fc380000fc380000fc380000fd6d0000fd6d0000fc9f
0000fca40000fca40000fd050000fd050000fd0d0000fd0d0000fc430000
fc43042ffe62040a000a040a000a040a001e01f70072044b004b044b004b
044b004b044b004b046f001906b600190aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40495008d040e
0018040e0034040e00150442002b05e00032040e001e075700260288ffe9
02880019044300000524008d0391fff904cb0050040500480461fff503ca
fff506fe008d04d900190574008d05a4004a02d8001e044d0048038f0062
0184ffd90313001803c8003f03d300330265007801f700640265007801f7
0050050c008d044b007e05c5000c05a7001703db003e0370004803e0001e
03c9003c046c001e047d003c03580086036f004308820019062d0047082f
00190677004707ea0019064d004706c10019059f004706c10019059f0047
06c10019059f0047043c003b0359003e0460001003d7fff90460008d03d7
007e0460001003d7fff9046a008d02f3007e0362001001f7ffef0569ffc9
0449ffd80604005004ef0048091f00500707004804420010044bffe5057d
001e0572001e0646001e068f001e057d0050044b004b0725005005c7004b
041c00500373003c04c6004a04ac004404bb001803c900160740002c05f6
002303db00490379003704420010044bffe504420010044bffe503fa008d
0381007e0366002d0366002d03df0003038b00140453005504530055026d
001805b4004b0366007e07ee007e05b7007e031d007e056e008603ac0017
03e500500569ffe9044b004c0388008d02d8007e03e2003603e2003603e2
00360362000e01f7007e0540008d044b007e0388008d02d8007e04760043
03b70036050c008d034c00220581008d0485007e044fffc20380ffdb03b3
004804be007e056c0019058b002803acffd602880019054c00500473003c
057500500462003c054c00500473003c0519ffcc03cbffe70460001103d7
00090545000b044b00110481000f02d8fffc03c8002f0331004105e80019
03db003e05740050041600220460002203f6000c056a0028035b001b047b
003d0682007e03ac00490442003f06fe008d0222008d0928001804baffde
0633004703ff00650407ffde0505001602880019044b004b0313001402ed
ffaf02ad00140664007e044b007e044b007e040b003d040b003d044d0065
06be004806be004806be004807070048070700480416005a03ed0086028d
007e0406007e03aa002504d600250421005005d2005001eeffc2044b0079
04b100100682007e0682007e04ca0028039b0009043e0009039b00090486
002003adff2b0486ff2b0377fefa03ca00160314006602fb005a02710014
0236001403540028044b004b04e1005506f8000a05be001405f4008d05be
007e065d00400645002b057d0050044b004b0740002b05f600230460008d
03d7007e0758000a05db00140758008d0603007e0543008d047b007e0506
008d046b007e050cffd5045dffc80a3c000a08870019056d002a04650023
0543000a0469001405a900280000ff8f0000ff7e0000ff300000ff100000
fefc0320004b0000ff1f0000ff230000ff470000ffa80000ff2a0000ff3d
0000ff9e0000fead0000fdb2000000000000ff3d0000ff3d000000c80000
feb00000fe1c0000ff180000ff310000ff1f0000ff420000ff450000ff3d
0000feab0000ff5a0000ff3d0000ff180000ff1f0000ff460000ff420000
00000000fe330000ff140000000000000000000000000000000000000000
000000000000000000000000000000000000ffa80000ffa8000000000000
000000000000000000000000ffa80000ffb00273003b0000ff2301f80086
0000049b0000005f0235007b0000ff960000ff960000ff0f0000fe5702fc
0079000000000465004e04be004e03fb002103080018039c001104990072
04ba007201ff007e0279001204ab007e0488005404a0005401ff007e0392
001103c4001103cf00290380001b04bb007e04ca007e04b8003d04cd003d
01ff007e02fc002104b0001e044f000d0440004804720048046700580493
005803b20012040a000f047a0072048900720392001105c8003705d70037
04e9002a0510002a03ff007e03ff007e03ff007e02100017037b001b01ff
007e0000fef303ff007e044f000d0591004d04c8001105c5007204fb0029
04ac001b05e7007e04be00110615002a03fc00340465004e0465004e04be
004e03fb002103fb00210308001803080018039c0011039c001104ba0072
049900720281001001ff007e01ff007e02d5001004a00054028100100392
00110392001103c4001103cf002903cf00290380001b03bcff5a03bcff5a
04cd003d02fc002104b0001e047200480493005804670058040a000f0489
00720392001105d7003705c8003705c8003705d7003705d700370510002a
04e9002a042f001b044a0014063e008d03d30015032e004403d30015032e
004403c8003f033100490287008d024a00790561006404a8007805bb0050
0376002808250050070d004804960000042d0000071d000c063700090678
008d05e5007e074f005006060048071d008d05e7007e04d9001903c70015
05d200200502001c071d008d059b007e04e5001803f9000c0543002c047f
001e0616000c053f001905f8000a0505001407ee008d061f004c05690050
044d004805690050044d0048091e0050070600480655007e0000fe7007e2
005b074b00b407e0001e03d1007d00000064000000640000006400000064
000000640000006400000064000000640000fe2f0000ff0f03a2000001f4
00040562000c04a8001903c8003d033100490837003e073d003a072c004d
060e003005d2000c052d00190558000c0431000903f6000c031e00090543
008d047f007003e6000c031e0009056d001e04a80014048e008d044b007e
076a008d0659007e091f00500707004805690050044d00480357000a02d5
005100000064042d008d03a0007e03f6000d03bb001e0537008d0474007e
02a600030460008d047c008d0442008d0442003f050b008d03f6000c03f6
000c051900490460008d0460002202a60003043c004f043c003003d30033
03ac008d03ac004906fe008d0545008d0362008d03c8003f0481008d0481
003404c0001a04bb0016050c008d0519006702a6008d0740002b04680021
04280010047c004604d9001704d9001703e7008d03e7005b0222008d0569
00500539008c0539008c0362000e050b004b0223007d0223007d03db007d
03db007d023500a0023500a004d60064039700640591003c052b000d087a
002e05df002b038a002e0a3b002e0a42002e0000fff4043d0042043d0042
0763000005a9007b071a007b03c4005f0283004f0354003707ab002e048c
00000283004f0218ffa803dd004f03ca0069006affa8041001680410014d
041000b004100044041000a9041000a40410007c04100044041000440410
0096050b007b023c003c025f00640340004c038000a60a96007e05ce00a3
045f00880410016804100148041000ab0410003f04100057041000660410
0097041000430410004304100096022a008f02860078037d007801990097
0241008c0241008c031a008c031a008c031a008c031a008c031a008c031a
008c033700a9033700a9022e007a0239008c0239008c02330071035400a0
035400a0028effa8028effa8028effa804be006704be00d1028e005a028e
ffa8028e002402a00000028e0055028e0067028effa8028e0064028effa8
028e006b028effa8028e006c028effa8028e0099028effa80410007e0410
00ab01fe005f023f006003490060040100480370005f0366004f03a90032
03ee003203ee00320375003101fe005f023f0060034900600401004803fd
005f03e2004f039f003003ee003203ee0032037500310392004f035a003c
027000cf027000be027000600270001d0270005802700058027000420270
0019027000190270004b02700028027000360270003b0270004202700053
02700031027000540270004002700044027000270270004b027000360270
003c0270003102700036026600d5026600c4026600680266002802660064
0266006102660049026600230266002302660059026600340266003d0266
005a0266004a026600640266003802660059026600470266004a0266002f
026600510266003d02660044026600390266003d04c2002e000000000000
000004c2002e04c2002e0000ffa80000fed60000fee00000febc0000fed6
0000fdf30000fef00000fe790000ff240000ff520000ff490000ff520000
ff0f0000fee10000ff100000ff1b0000ff3d0000ff1a0000ff290000ff58
0000ff0a0000ff4a0000ff4a0000ffa50000ff390000ff3f0000ff110000
ff250000ff260000ff7c0000ff3d0000ff1a0000ff180000ffa50000fe28
0000fe8d0000fef20000ff190000ff3a0000ff220000fe9a0000ff740000
ff840000ff370000ff650000fe9a0000ff0a0000fe9c0000ff2a0000ff57
0000ff570000ff750000ff610000ff390000ff1c0000ff1d0000ff1c0000
ff0f0000ff100000ff210000ffaa0000ff3d0000ff340000ffaa0000ff3d
0000ff340000fecd0000fec40000fecd0000ff800000ff0d0000ff1b0000
ff1a0000ff8e0000ff8e0000ff8e0000ff8e0000ff160000fea90000ff32
0000ff040000ff710000feed0000ff070000ff1d0000ff290000ff170000
ff290000ff0d0000ff1b0000ff0f0000ff350000feed0000ff3f0000ff04
0000ff00027a0000018afff00182fff101820053018affb2018affc90182
ffca023f0053018affa0018affa601d6ffc301d5ffe001d6003d01d60053
01d5ffb901d5ffb901d6001601d6005301d5ff9201d5ff990684003b0684
003b0684003b0684003b0684003b0684003b0684003b0684003b0684003b
0684003b0684003b0684003b0684003b0684003b0684003b0684003b0684
003b0684003b0684003b0684003b0684003b0218ffa80218ffa80218ffa8
0218ffa80218ffa80218ffa80218ffa80218ffa80218ffa80218ffa80218
ffa80218ffa80218ff890218ffa80218ffa80218ffa80218ffa80218ffa8
0218ffa80218ffa80218ffa80281ffa80281ffa80281ffa80281ffa80281
ffa80281ffa80281ffa80281ffa80281ffa80281ffa80281ffa80281ffa8
0281ffa80281ffa80281ffa80281ffa80281ffa80281ffa80281ffa80281
ffa80281ffa80718003b0718003b0718003b0718003b0718003b0718003b
0718003b0718003b0718003b0718003b0718003b0718003b0718003b0718
003b0718003b0718003b0718003b0718003b0718003b0718003b0718003b
04f0003b04f0003b04f0003b04f0003b04f0003b04f0003b04f0003b04f0
003b04f0003b04f0003b04f0003b04f0003b04f0003b04f0003b04f0003b
04f0003b04f0003b04f0003b051affa8051affa8051affa8051affa8051a
ffa8051affa8051affa8051affa8051affa8051affa8051affa8051affa8
051affa8051affa8051affa8051affa8051affa8051affa80564ffa80564
ffa80564ffa80564ffa80564ffa80564ffa80564ffa80564ffa80564ffa8
0564ffa80564ffa80564ffa80564ffa80564ffa80564ffa80564ffa80564
ffa80564ffa804e7003b04e7003b04e7003b04e7003b04e7003b04e7003b
04e7003b04e7003b04e7003b04e7003b04e7003b04e7003b04e7003b04e7
003b04e7003b04e7003b04e7003b04e7003b037f0055037f0055037f0055
037f0055037f0055037f0055037f0055037f0055037f0055037f0055037f
0055037f0055037f0055037f0055037f0055040e0055040e0055040e0055
040e0055040e0055040e0055040e0055040e0055040e0055040e0055040e
0055040e0055040e0055040e0055040e0055037200000372000003720000
037200000372000003720000037200000372000003720000037200000372
000003720000037200000372000003720000037200000394000003720000
03c1000003c1000003c1000003c1000003c1000003c1000003c1000003c1
000003c1000003c1000003c1000003c1000003c1000003c1000003c10000
03c1000003c9000003c100000772003b0772003b0772003b0772003b0772
003b0772003b0772003b0772003b0772003b0772003b0772003b055dffa8
055dffa8055dffa8055dffa8055dffa8055dffa8055dffa8055dffa8055d
ffa8055dffa8055dffa805b2ffa805b2ffa805b2ffa805b2ffa805b2ffa8
05b2ffa805b2ffa805b2ffa805b2ffa805b2ffa805b2ffa807e7003b07e7
003b07e7003b07e7003b07e7003b07e7003b07e7003b07e7003b07e7003b
07e7003b07e7003b0878003b0878003b0878003b0878003b0878003b0878
003b0635ffa70635ffa70635ffa70635ffa70635ffa70635ffa70661ffa7
0661ffa70661ffa70661ffa70661ffa70661ffa708a2003b08a2003b08a2
003b08a2003b08a2003b08a2003b06520027065200270652002706520027
0502ffa80502ffa80502ffa80502ffa80533ffa80533ffa80533ffa80533
ffa80687002706870027068700270687002704cd003b04cd003b04cd003b
04cd003b04cd003b04cd003b04cd003b04cd003b03efffa803efffa803ef
ffa803efffa803efffa803efffa803efffa803efffa803afffa803afffa8
03afffa803afffa803afffa803afffa803afffa803afffa80413003b0413
003b0413003b0413003b0413003b0413003b0413003b0413003b06fe003b
06fe003b06fe003b06fe003b06fe003b06fe003b06fe003b06fe003b06fe
003b06fe003b02feffa802feffa802feffa802feffa802feffa802feffa8
02feffa802feffa802feffa802feffa80379ffa80379ffa80379ffa80379
ffa80379ffa80379ffa80379ffa80379ffa80379ffa80379ffa80756003b
0756003b0756003b0756003b0756003b0756003b0756003b0756003b0756
003b0756003b0516003b0516003b0516003b0516003b0516003b02feffa8
02feffa802feffa802feffa802feffa80379ffa80379ffa80379ffa80379
ffa80379ffa8053a003b053a003b053a003b053a003b053a003b05a30027
05a3002705a3002705a3002705a3002705a30027075d003b075d003b075d
003b075d003b075d003b075d003b075d003b075d003b075d003b075d003b
075d003b075d003b075d003b075d003b03deffa703deffa703deffa703de
ffa703deffa703deffa703deffa703deffa703deffa703deffa703deffa7
03deffa703deffa703deffa703e0ffa703e0ffa703e0ffa703e0ffa703e0
ffa703e0ffa703bcffa803bcffa803bcffa803bcffa803bcffa803bcffa8
03bcffa803bcffa803bcffa803bcffa803bcffa803bcffa803bcffa803bc
ffa803bcffa803bcffa803bcffa803bcffa803bcffa803bcffa8065c003b
065c003b065c003b065c003b065c003b065c003b0752003b0752003b0752
003b0752003b0752003b0752003b0752003b0752003b0752003b0752003b
0752003b0752003b0752003b0752003b08ed002707c9ffa80804ffa8092e
0027047e003b0487003b0487003b0487003b047e003b047e003b047e003b
01f6ffa80201ffa80201ffa80201ffa801f6ffa801f6ffa801f6ffa80223
ffa80223ffa80223ffa80223ffa80223ffa80223ffa80223ffa804b2003b
04b2003b04b2003b04b2003b04b2003b04b2003b04b2003b03a0004503a0
004503a0004503a000450353ffa80353ffa80353ffa80353ffa803baffa8
03baffa803baffa803baffa8045100450451004504510045045100450474
003b0474003b0474003b0474003b0474003b0474003b0474003b0474003b
0474003b0218ffa80218ffa80218ffa80218ffa80218ffa80218ffa80218
ffa80218ffa80218ffa80281ffa80281ffa80281ffa80281ffa80281ffa8
0281ffa80281ffa80281ffa80281ffa804bb003b04bb003b04bb003b04bb
003b04bb003b04bb003b04bb003b04bb003b04bb003b0564002705640027
03b9003b056400270449ffa80449ffa80218ffa80449ffa8036affa8036a
ffa80328ffa8036affa803c3003b0578002703c3003b0578002702e1003b
02e1003b02e1003b02e1003b02e1003b03c3003b03c3003b03b9003b03b9
003b03c3003b039b0000039b0000039b0000039b0000039b0000039b0000
039b0000039b0000039b0000039b0000039b0000039b0000039b0000039b
0000039b0000039b00000351003b03f8000003f8000003f8000003f80000
03f8000003f8000003f8000003f8000003f8000003f8000003f8000003f8
000003f8000003f8000003f8000003f8000002f9003b055d003b055d003b
055d003a055d0014055d0014055d003b055d003b055d003b055d003b055d
0039055d003b055d003b055d003b055d003b055d003b055d003b055d003b
0218ffa80218ffa80218ffa80218ffa80218ffa80218ffa80218ffa80218
ffa80218ffa80218ffa80218ffa80218ffa80218ffa80218ffa80218ffa8
0218ffa80218ffa80281ffa80281ffa80281ffa80281ffa80281ffa80281
ffa80281ffa802b7ffa80281ffa80281ffa80281ffa80281ffa80281ffa8
0281ffa80281ffa80281ffa80281ffa8049a003b045f003b049a003b049a
0018049a0018049a003b049a003b049a003b049a003b049a003b049a003b
049a003b049a003b049a003b049a003b049a003b049a003b055dff16045f
feda0853003b0853003b0345003b0347003d0853003b0853003b0218ffa8
0218ffa80281ffa80281ffa80347003d0347003d030c0053030c005303a0
004503f000530458005305c9003b0631003b05f300000668000005f30000
0668000005f300000668000005f30000066800000510000005cf00000489
ffa80510000005cf00000489ffa8049b003b049b003b01d6005301820053
0475ffea0475ffe004a3002704a3002704e5000804e50027050100270501
0027094b003b07a6003b094b003b07a6003b0a45003a083f006a07630057
075700000986000007caff5a098b000009c40000095200000182ffb101d6
ffe10309005403090054018a005301d500530487003b0201ffa80223ffa8
04b2003b0565002705650027056500270565002705cc002705cc002705cc
002705cc00270565002705cf000005cf00000480ffa80483ffa80483ffa8
059f0027059f002703890000038900000389000003890000038900000389
000003890000038900000389000003890000038900000389000003890000
03890000038900000389000003c900000389000003ba000003ba000003ba
000003ba000003ba000003ba000003ba000003ba000003ba000003ba0000
03ba000003ba000003ba000003ba000003ba000003ba0000037f0055037f
0055037f0055037f0030037f0055037f0055037f00550372000003720000
06fe003b06fe003b06fe003b06fe003b06fe003b06fe003b02feffa802fe
ffa802feffa602feff4a02feffa802feffa802feffa803deffa703deffa7
03deffa703deffa703e0ff8603e0ffa701f6ff530353ffa80218ff840565
00270444ffa80326ff430326ff430326ff430326ff430326ff1f0326ff43
0347ffa70347ffa70347ffa70347ffa70347ff860347ffa70289ff430289
ff430289ff430289ff43027bff1f027bff430218ffa80218ffa80218ffa8
0218ff540218ff3d0218feeb0218ffa80218ff8a0218ff8a0218ff200218
ff970218ff8e0218ffa80218ffa80218ffa80218ff540218ff200218ffa8
0218ff200218ff200218ff200218ff200218ff200218ff200218ffa80218
ff540218ff200218ff200218ff540218ff200218ff200218ff200218ff20
0218ffa80218ffa80218ffa80218ff9a0218ff830218ff3a0218ffa80218
ff9b0218ff9b0218ff6f0218ff950218ff8b0218ffa80218ffa80218ffa8
0218ff9a0218ff6f0218ffa80218ff6f0218ff6f0218ff6f0218ff660218
ff6f0218ff6f0218ffa80218ff9a0218ff6f0218ff6f0218ff6f0218ff6f
0218ff6f0218ff6f0218ff6f0281ffa80281ffa80281ffa80281ff9a0281
ff830281ff3a0281ffa80281ff9b0281ff9b0281ff6f0281ff950281ff8b
0281ffa80281ffa80281ffa80281ff9a0281ff6f0281ffa80281ff6f0281
ff6f0281ff6f0281ff660281ff6f0281ff6f0281ffa80281ff9a0281ff6f
0281ff6f0281ff6f0281ff6f0281ff6f0281ff6f0281ff6f0217ffa80217
ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217ffa8
0217ffa80217ffa80217ffa80217ffa80217ff890217ffa80217ffa80217
ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217ffa8
0217ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217
ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217ffa8
0217ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217ffa80217
ffa80217ffa80217ffa80217ffa8024effa8024effa8024effa8024effa8
024effa8024effa8024effa8024effa8024effa8024effa8024effa8024e
ffa8024effa8024effa8024effa8024effa8024effa8024effa8024effa8
024effa8024effa8024effa8024effa8024effa8024effa8024effa8024e
ffa8024effa8024effa8024effa8024effa8024effa8024effa8024effa8
024effa8024effa8024effa80270ffa8024effa8024effa8024effa8024e
ffa8024effa8024effa8024effa8024effa8024effa8024effa8024effa8
0217ffa80217ffa80217ffa80217ff540217ff3d0217feeb0217ffa80217
ff8a0217ff8a0217ff200217ff970217ffa80217ffa80217ffa80217ffa8
0217ff540217ff200217ffa80217ff200217ff200217ff200217ff200217
ff200217ff200217ffa80217ff540217ff200217ff200217ff540217ff20
0217ff200217ff200217ff200217ffa80217ffa80217ffa80217ff9a0217
ff830217ff3a0217ffa80217ff9b0217ff9b0217ff6f0217ff950217ff8b
0217ffa80217ffa80217ffa80217ff9a0217ff6f0217ffa80217ff6f0217
ff6f0217ff6f0217ff660217ff6f0217ff6f0217ffa80217ff9a0217ff6f
0217ff6f0217ff6f0217ff6f0217ff6f0217ff6f0217ff6f024effa8024e
ffa8024effa8024eff9a024eff83024eff3a024effa8024eff9b024eff9b
024eff6f024eff95024eff8b024effa8024effa8024effa8024eff9a024e
ff6f024effa8024eff6f024eff6f024eff6f024eff66024eff6f024eff6f
024effa8024eff9a024eff6f024eff6f024eff6f024eff6f024eff6f024e
ff6f024eff6f0326ff430326ff430326ff430326ff430326ff430326ff43
0326ff430326ff430326ff430326ff430326ff430326ff430326ff430326
ff430326ff430326ff430326ff430326ff430326ff430326ff43031bff42
031bff42031bff42031bff42031bff42031bff42031bff42031bff42031b
ff42031bff42031bff42031bff42031bff42031bff42031bff42031bff42
031bff42031bff42031bff42031bff420347ffa70347ffa70347ffa70347
ffa70347ffa70347ffa70347ffa70347ffa70347ffa70347ffa70347ffa7
0347ffa70347ffa70347ffa70347ffa70347ffa70347ffa70347ffa70347
ffa70347ffa703bcffa803bcffa803bcffa803bcffa803bcffa803bcffa8
03bcffa803bcffa803bcffa803bcffa803bcffa803bcffa803bcffa803bc
ffa803bcffa803bcffa803bcffa803bcffa803bcffa803bcffa80289ff43
0289ff430289ff430289ff430289ff430289ff430289ff430289ff430289
ff430289ff430289ff430289ff430289ff430289ff43027bff43027bff43
027bff43027bff43027bff43027bff43031bff42031bff42031bff42031b
ff42031bff42031bff42031bff42031bff42031bff42031bff42031bff42
031bff42031bff42031bff42031bff42031bff42031bff42031bff42031b
ff42031bff4206c7003b06c7003b06c7003b06c7003b06c7003b06c7003b
06c7003b06c7003b06c7003b06c7003b06c7003b06c7003b06c7003b06c7
003b0752003b0752003b0752003b0752003b0752003b0752003b0752003b
0752003b0752003b0752003b0752003b0752003b0752003b0752003b06cd
003b06cd003b06cd003b06cd003b0462003b0462003b0462003b0462003b
0182ffb50182ff8501d6004801d600160218ffa80218ffa80218ffa80218
ff950218ffa80218ff640218ffa80218ffa80218ff640218ff640218ffa8
0218ff950218ff640218ff640218ff8b0218ff640218ff640281ffa80281
ffa80281ffa80281ffa80281ffa80281ffa80281ffa80281ffa80281ffa8
0281ffa80281ffa80281ffa80281ffa80281ffa80281ffa80281ffa80217
ffa80217ffa80217ffa80217ff950217ffa80217ff640217ffa80217ffa8
0217ff640217ff640217ffa80217ff950217ff640217ff640217ff8b0217
ff640217ff64024effa8024effa8024effa8024effa8024effa8024effa8
024effa8024effa8024effa8024effa8024effa8024effa8024effa8024e
ffa8024effa8024effa8051affa8051affa8051affa8051affa8051affa8
051affa8051affa8051affa80564ffa80564ffa80564ffa80564ffa80564
ffa80564ffa80564ffa80564ffa8037f0055037f0055037f0055040e0055
040e0055040e0055055dffa805b2ffa802feffa80379ffa80444ffa804a3
00270501002704a3002705010027028effa80000feb20000fed60000fee0
0000febc0000fed60000fdf30000fef00000fe790000ff240000ff520000
ff4a0000ff520000ff1b0000fedb0000ff1f0000ff1b0000ff3d0000ff21
0000ff290000ff580000ff0a0000ff4a0000ff4c0000ffa50000ff3d0000
ff3f0000ff110000ff250000ff260000ff890000ff3d0000ff1b0000ff18
0000ffa50000fe280000fe8d0000fef20000ff190000ff3a0000ff210000
fe9a0000ff740000ff8c0000ff370000ff650000fe9a0000ff0a0000feae
0000ff2a0000ff5e0000ff5e0000ff7e0000ff620000ff3d0000ff1c0000
ff1d0000ff1c0000ff100000ff100000ff1d0000ffb30000fecd0000fec4
0000fecd0000ff7f0000ff010000ff1b0000ff210000ff8e0000ff8e0000
ff8e0000ff8e0000ff160000feb20000ff3b0000ff0d0000ff710000fee7
0000ff160000ff1d0000ff290000ff170000ff290000ff0d0000ff1b0000
ff1b0000ff350000fee70000ff4a0000ff0b0000ff0604be006704be00ee
0a80006b0359ffa8035d001e0264001e023700640284004f0284004f0000
ff13043d00420000ff6d0000ff000000ff6a0000ff260000ff000000feff
0000ff300000ff000000ff7c0000ff1a0000ff8b0000ff350000ff890000
ff510000ff350000ff340000ff5b0000ff1d0000ffa20000ff5e0000ff7c
0000fee50000ff3f0000ff3f0000ff180000ff250000ff4c0000ff260000
ff4c0000fef00000fef00000ff040000fe6a0000fe6a0000ffb50000ffb5
00000003000000030000ff910000ffa60000ff650000ff690000ff510000
ff650000feda0000ff6d0000ff000000ff6a0000ff000000feff0000fe7d
0000ff000000ff7c0000ff190000ff350000ff890000ff350000ff340000
fecb0000ff1d0000ff890000ff4e0000ff930000ff4e0000ff4d0000ff2f
0000ff3f0000ff180000ff250000ff500000ff260000ff4c0000fef00000
fef00000ff040000ff190000fed70000ff470000ff650000ff650000ff65
0000ff650000ff6604a300270475002704ac0027047e00270501002704e5
00270501002704e5002705800007088a000008e20000097c000009aa0000
05aa00000897ffcc08f0ffcb098affcc09b7ffcb0693003b054b003b060b
003b066d003b0808003b0852003b0914003b09b9003b09fa003b0a07003b
093e003b0973003b075c003b06e5003b054d003b06ef003b065a003b0574
003b0651003b0651003b055f003b055f003b0637003b0637003b066b003b
07c6003b07c4003b0808003b0885003b07c4003b0894003b0808003b07f1
003b0a1900360a01003506e1003b04d1003b0799003b06ef003b078f003b
082f003b087c003b08a9003b0724003b0715003b0724003b0516003b0724
003b04d8003b06e1003b06e1003b04c2003b04c2003b06e1003b06e1003b
0426003b0426003b0724003b0591003b0724003b0724003b0660003b0724
003b0919003b0945003b0546003b0566003b0664003b078f003b087c003b
06cd003b0664003b0566003b059a003b051c003b0574003b0546003b051a
003b051a003b0546003b0546003b04b3003b04b3003b0599003b05f5003b
0645003b0645003b0660003b0664003b0918003b0841003b09c000270000
ff6e0000ff6504b1008d040e008d00>
<000000000000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c000002c20000042400000424000004240000042400000424
000004240000042400000424000004240000042400000424000004240000
042400000424000004240000042400000424000004240000051c0000051c
0000051c0000051c0000051c0000051c0000051c00000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000069200000692000006920000
069200000692000006920000069200000692000006920000069200000692
000006920000069200000692000006920000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
0000086800000868000009aa00000ad400000ad400000ad400000ad40000
0ad400000ad400000ad400000ad400000ad400000ad400000c0a00000c0a
00000c0a00000c0a00000da000000da000000da000000da000000da00000
0da000000da000000da000000da000000da000000da000000da000000da0
00000da000000da000000da000000da000000da000000da000000da00000
0da000000da000000da000000da000000da000000da000000da000000da0
00000da000000da000000da000000da000000da000000da000000da00000
0da000000da000000da000000da000000da000000da000000da000000da0
00000da000000da000000da000000da000000da000000da000000da00000
0faa00000faa00000faa00000faa00000faa00000faa00000faa00000faa
00000faa00000faa000010a4000010a4000010a40000114c0000114c0000
114c0000114c0000114c0000114c0000114c0000114c0000114c0000114c
0000114c0000114c0000114c0000114c0000114c0000114c0000114c0000
114c000011d0000011d0000011d0000011d0000011d0000011d000001352
0000145e0000145e0000145e0000145e0000145e0000145e0000145e0000
154200001542000015420000154200001542000015420000154200001542
000015420000154200001542000015420000154200001542000015420000
163e0000163e0000163e0000163e000017e2000017e2000017e2000017e2
000017e2000017e2000017e2000017e2000017e2000017e20000190e0000
190e0000190e0000190e0000190e0000190e0000190e0000190e0000190e
0000190e0000190e0000190e0000190e0000190e0000190e0000190e0000
190e0000190e0000190e0000190e0000190e0000190e0000190e0000190e
0000190e0000190e0000190e00001a0400001a0400001a0400001a040000
1a0400001a0400001a0400001a0400001a0400001a0400001a0400001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00001adc00001adc00001adc00001adc00001adc
00001adc00001adc00001adc00001adc00001adc00001adc00001adc0000
1adc00001adc00001adc00010000192c044200170110000800020010002f
006000000cf8013f000400010000000e00ae000000030000000002100000
000000030000000700760210000100000000000001080286000100000000
00030013038e0001000000000004001303a10001000000000006001303b4
0001000000000007003b03c7000300010409000002120402000300010409
0001002606140003000104090002000e063a000300010409000300260648
00030001040900040026066e000300010409000600260694000300010409
0007007606ba00a9002000320030003100370020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e000d004800650062007200650077
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200063006f00700079007200690067
00680074002000a900200032003000300033002000260020003200300030
0037002c002000520061006c00700068002000480061006e0063006f0063
006b002000260020004a006f0068006e00200048007500640073006f006e
002e002000540068006900730020006c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020006900730020006f0070
0065006e00200073006f007500720063006500200073006f006600740077
00610072006500200075006e00640065007200200074006800650020004d
004900540020004c006900630065006e00730065003b0020007300650065
00200065006d0062006500640064006500640020006c006900630065006e
007300650020006400650073006300720069007000740069006f006e0020
0066006f0072002000640065007400610069006c0073002e00430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002ea92032303137204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e0d486562726577204f70656e54797065204c
61796f7574206c6f67696320636f7079726967687420a920323030332026
20323030372c2052616c70682048616e636f636b2026204a6f686e204875
64736f6e2e2054686973206c61796f7574206c6f67696320666f72204269
626c6963616c20486562726577206973206f70656e20736f757263652073
6f66747761726520756e64657220746865204d4954204c6963656e73653b
2073656520656d626564646564206c6963656e7365206465736372697074
696f6e20666f722064657461696c732e484e544b43552b43616c69627269
2d426f6c64484e544b43552b43616c696272692d426f6c64484e544b4355
2b43616c696272692d426f6c6443616c6962726920697320612074726164
656d61726b206f6620746865204d6963726f736f66742067726f7570206f
6620636f6d70616e6965732e00a9002000320030003100370020004d0069
00630072006f0073006f0066007400200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e000d000a00480065
00620072006500770020004f00700065006e00540079007000650020004c
00610079006f007500740020006c006f00670069006300200063006f0070
007900720069006700680074002000a90020003200300030003300200026
00200032003000300037002c002000520061006c00700068002000480061
006e0063006f0063006b002000260020004a006f0068006e002000480075
00640073006f006e002e002000540068006900730020006c00610079006f
007500740020006c006f00670069006300200066006f0072002000420069
0062006c006900630061006c002000480065006200720065007700200069
00730020006f00700065006e00200073006f007500720063006500200073
006f00660074007700610072006500200075006e00640065007200200074
006800650020004d004900540020004c006900630065006e00730065003b
002000730065006500200065006d0062006500640064006500640020006c
006900630065006e00730065002000640065007300630072006900700074
0069006f006e00200066006f0072002000640065007400610069006c0073
002e0048004e0054004b00430055002b00430061006c0069006200720069
002d0042006f006c00640052006500670075006c006100720048004e0054
004b00430055002b00430061006c0069006200720069002d0042006f006c
00640048004e0054004b00430055002b00430061006c0069006200720069
002d0042006f006c00640048004e0054004b00430055002b00430061006c
0069006200720069002d0042006f006c006400430061006c006900620072
006900200069007300200061002000740072006100640065006d00610072
006b0020006f006600200074006800650020004d006900630072006f0073
006f00660074002000670072006f007500700020006f006600200063006f
006d00700061006e006900650073002e000000>
<b20903eb411d03430001003b03410001008b0330009b033000020004032f
0064032f0074032f00d4032f0004032d032a0038001f032c032a0038001f
032b032ab2381f24bf032a00a4032a00b4032a0003ffc0032ab2232746b9
ffc0032ab21c20464163033c0038033b0055033a00380339005503380038
033700550336003803350055033400380333005503230038032200550321
003803200055002b03400001006b03400001033d003803220055006b033b
00010024033100540331000200240331003403310054033100f403310004
001403270044032700e40327000300040327002403270044032700740327
008403270094032700d4032700f40327000800a403220001003403200001
001403200024032000440320005403200074032000840320000602f9b21e
1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1f
b802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802
f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb2
1e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c
1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb8
02e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802df
b21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d
191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1f
b802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802
d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb2
1d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab21d19
1fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb8
02c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1
b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d
2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1f
b802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802
b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b2
1c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb21c33
1fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c321fb8
02a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3
b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c
331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c311f
b8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321fb802
96b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb80292b2
1c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb21c31
1fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb8
0289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb80285
b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281b21b
341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b341f
b8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341fb802
78b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb80274b2
1b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b21b34
1fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8
026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb80267
b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263b21a
351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a351f
b8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351fb802
5ab21a351fb80259b219371fb80258b219371fb80257b219371fb80256b2
19371fb80255b219371fb80254b219371fb80253b219371fb80252b21937
1fb80251b219371fb80250b219371fb8024fb219371fb8024eb219371fb8
024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb80249
b219371fb80248b219371fb80247b219371fb80246b219371fb80245b219
371fb80244b219371fb80243b219371fb80242b219371fb80241b219371f
b80240b219371fb8023fb219371fb8023eb219371fb8023db219371fb802
3cb219371fb8023bb219371fb8023ab219371fb80239b218391fb80238b2
18391fb80237b218391fb80236b218391fb80235b218391fb80234b21839
1fb80233b218391fb80232b218391fb80231b218391fb80230b218391fb8
0301b2182e1fb8022fb218391fb8022eb218391fb8022db218391fb8022c
b218391fb8022bb218391fb8022ab218391fb80229b218391fb80228b218
391fb80227b218391fb80226b218391fb80225b2173b1fb80224b2173b1f
b80223b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1fb802
1fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2
173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b
1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2173b1fb8
0212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020e
b2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab217
3b1fb80209b217321fb80208b217321fb80207b2173b1fb80206b2173b1f
b80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb802
01b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2
173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b
1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb8
01f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0
b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb217
3b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1f
b801e7b217321fb801e6b216231fb801e5b216231fb801e4b216371fb801
e3b216371fb801e2b216381fb801e1b216381fb801e0b216431fb801dfb2
16441fb801deb216441fb801ddb216441fb801dcb216451fb801dbb21646
1fb801dab216461fb801d9b216461fb801d8b216231fb801d7b216231fb8
01d6b216381fb801d5b216431fb801d4b216431fb801d3b216431fb801d2
b216441fb801d1b216461fb801d0b216461fb801cfb216461fb801ceb216
461fb801cdb216461fb801ccb216461fb801cbb216431fb801cab216231f
b801c9b216231fb801c8b216371fb801c7b216371fb801c6b216381fb801
c5b216421fb801c4b216431fb801c3b216441fb801c2b216451fb801c1b2
16461fb801c0b216461fb801bfb216461fb801beb216461fb801bdb21646
1fb801bcb216461fb801bbb216461fb801bab216371fb801b9b216381fb8
01b8b216421fb801b7b216431fb801b6b216431fb801b5b216431fb801b4
b216441fb801b3b216441fb801b2b216441fb801b1b216451fb801b0b216
451fb801afb216451fb801aeb216461fb801adb216461fb801acb216461f
b801abb216461fb801aab216461fb801a9b215341fb801a8b215411fb801
a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b2
15521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f
1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8
019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb80196
b215501fb80195b215521fb80194b215521fb80193b215521fb80192b215
411fb80191b2154f1fb80190b215501fb8018fb215501fb8018eb215511f
b8018db215521fb8018cb215521fb8018bb215521fb8018ab214581fb801
89b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2
145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb8018140af14
5d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561f
b20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b
561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561f
a30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a
681f980a681f970a681f960a681f950a681f940a681f930a681f920a681f
910a681f9009681f8f09681f8e09681f8d09681f8c09681f410902fc02fa
0056001f02fb02fa0068001f017fb213321fb8017eb212371fb80174b212
371fb80173b211421fb80172b211421fb80171b211421fb80170b211421f
b8016fb211421fb8016eb211421fb8016db211421fb8016cb211421fb801
6bb211421fb8016ab211421fb8013cb211421fb8013bb210421fb8013ab2
10421fb80139b210421fb80138b210421fb80137b210421fb80136b21042
1fb80135b210421fb80134b210421fb80133b210421fb80132b20f451fb8
0131b20f451fb80130b20f451fb80112b20f451fb80111b20f451fb80110
b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8010cb20e
481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108b20e481f
b80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a
1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda
0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b56
1fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab211401fb80179
b211421fb80178b211421fb80177b211421fb80176b211421fb80175b211
421fb80143b211421fb80142b210421fb80141b210421fb80140b210421f
b8013fb210421fb8013eb210421fb8013db20f451fb80115b20f451fb801
14b20f451fb80113b20f451fb903030302b2401fa4be030200b4030200c4
030200030300b213321fb8017bb213321fb80153b212371fb80152b21140
1fb80151b211401fb80150b211401fb8014fb211401fb8014eb211401fb8
014db211401fb8014cb211401fb8014bb211401fb8014ab211401fb80149
b211401fb80148b211401fb80147b211401fb80146b211401fb80145b211
401fb80144b211401fb80122b211401fb80121b210421fb80120b210421f
b8011fb210421fb8011eb210421fb8011db210421fb8011cb210421fb801
1bb210421fb8011ab210421fb80119b210421fb80118b20f451fb80117b2
0f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e48
1ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff1
0d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e
1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc6
0c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b56
1fb40b561fb30b561f9b0a681fb802fdb212371fb8017db212371fb8017c
b212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166b211
401fb80165b211401fb80164b211401fb80163b211401fb80162b211401f
b80161b211401fb80160b211401fb8015fb211401fb8015eb211401fb801
5db211401fb8015cb211401fb8015bb211401fb8015ab211401fb80159b2
11401fb80158b211401fb80157b211401fb80156b211401fb80155b21140
1fb80154b211401fb8012fb211401fb8012eb210421fb8012db210421fb8
012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb80128
b210421fb80127b210421fb80126b210421fb80125b20f451fb80124b20f
451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f451f
b80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e481f
e80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c
4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f82488055
81ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb
7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c7648
75555475e475f4750314755475647574759475d475e47507a475b475c475
03b8ffc0401275383b46807590750214757475020075010fb8ffc0402175
0b0e467448725573ab725504723472023bf47201e0720102307201507260
7202b8ffc0b372242846b8ffc0403572161a461072307240720371486f55
70ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d46
6e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe000100ef
02fe40ff016b032e1f6a03251f692e675568ab6755662e645565ab645563
2e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e5855570325
1f562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b554c
ab4b554a2e485549ab4855504801472e46554503361f001f01001e01001e
701e801ef01e040b601d701d02701de01df01d03701cf01c027f1b010f1a
7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f198f19
9f19030c7012801202701180110230114011d011e011040011a011020f8f
0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f
0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f
0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946
ef0aff0a02400a242746ef09ff0902ff0901000301200101000110012001
0308b8ffc0b401151f4603bd0100010000050001019000542b4bb807ff52
4bb008505bb00188b02553b00188b040515ab00688b000555a5b58b10101
8e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358b2
03a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d4259
2b5e73757373742b732b73742b2b73745e732b5e7374757374755e737475
73015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73
755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b0073747373747374732b73742b2b2b2b2b2b2b2b2b732b2b2b
73737373185f5e00000000>
[6877 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 1060 87 <0002008dfffa0403050e001c0029007eb10102435558b12406bb02930011
001d02c14009001125180b0f014c25b8012bb306060c23b8ffe8b40b0f01
4c23b8012bb44015510c5500183f3f1aed2b12392fed2b012fd4ed10ed32
30311bb625180b0f014c25b8012bb306060c23b8ffe8b40b0f014c23b801
2bb44015510c5500183f3f1aed2b12392fed2b30315901140e0223231114
0e0223222e02351134363321321e0405342e0223231133323e0204034482
bd806c0d1e322726331e0c312801312e537477542cfeed30464d2970763f
55361c03856da8733cfe630a100a06060a100a048c2f2f07173e5f7f6244
582a0bfe49223d55>PHAAAA+Calibri-Bold AddT42Char 
3 2152 271 <0002007effe904000570002a003d0094b10102435558b20a2136bb026000
15002b0284400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b46104c39180b0f014c39b8014ab240054d00183f1aed2b3f3f3fed
2b121739012fd4ed10ed323930311bb60a363521040530b8ffe8b40b0f01
4c30b8014b400d264a1b46104c39180b0f014c39b8014ab240054d00183f
1aed2b3f3f3fed2b12173930315901140e0223222e022715140e0223222e
023511343e0233321e0215113e0333321e0205342e0223220e0207111616
33323e02040034628f5b2d4e4745240b192a1e1f29190a0c1d302525301d
0c2244444828638a5728fefb112a4333193033361e35613531442d1401ec
77be864811263a29610b0f0a04040a0f0b05230a100b06060b100afe1322
301f0e4f86b375396a52310e223628fed84447325066>PHAAAA+Calibri-Bold AddT42Char 
3 3082 286 <0002004affe903b603d7002b00340103b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d01
2fed32dded12392f30311b4009032c132c021b2cc304b8ffc040170d014d
00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ff
e840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d
09f9401c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed
5e5d3031590114062321141e0233323e0233321e0215140e0623222e0235
343e0233321e021527362623220e020703b62924fde11b3b5d4142644930
0f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b5f30
472f190201fa2e2c395d412213171307122119161f160f0e1817113c7aba
7d77bf85464275a05e206a79243d532f>PHAAAA+Calibri-Bold AddT42Char 
3 4010 346 <0001007efffa03d205700032006bb10102435558b9000b025fb2322a14b8
0260b31e2a1910b8ffe8b40b0f014c10b8014d4009402d4a2446194c054c
00183f3f3f3f1aed2b1239012fed32d4ed30311bb22a1910b8ffe8b40b0f
014c10b8014d4009402d4a2446194c054c00183f3f3f3f1aed2b12393031
5925140e0223222e023511342e022322060711140e0223222e023511343e
0233321e021511363633321e021503d20c1c312425311c0c132439263062
350c1d302525301d0c0c1d302525301d0c4187495b7d4d22220a0f0a0505
0a0f0a01fd414a351d4643fdaf0a0f0a05050a0f0a05230a100b06060b10
0afe13403f3c688b6300>PHAAAA+Calibri-Bold AddT42Char 
3 4260 349 <0002006bfffa018d054e001500210043b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61aed012fedd4ed3031
1bb9001f017bb540191049054c00183f3fd61aed30315925140e0223222e
023511343e0233321e0215131406232226353436333216017a0c1d302525
301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f0a03
7a0a0f0b06060b0f0a01304c3a38494c3b39>PHAAAA+Calibri-Bold AddT42Char 
3 4428 367 <0001007efffa017a05700015003eb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1aed30315f5e5d
5d5d5d1bb31046054c00183f3f30315925140e0223222e023511343e0233
321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a0f
0a05230a100b06060b100a00>PHAAAA+Calibri-Bold AddT42Char 
3 5442 396 <0001007efffa02bb03d70033006eb10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1aed2b5f5e5d012fc4ed3930311bb9000affe8
b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1aed
2b30315901140e0223222e0223220e020711140e0223222e023511343e02
33321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c0c1d
302525301d0c0a1a291f202a170a233e38381c0d1e20180b050402034b24
2e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a0f0a
6f3241260f0307090a0c152a>PHAAAA+Calibri-Bold AddT42Char 
3 5694 400 <00010049ffe902f203d7004900e7b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1aed5f5e5d2b3f123939ed2b5d11
39392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed30311b4020042e
012ee4370b0a010ae71137400b014d10372037020337113711160f3c013c
b8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f240
054d00183f1aed5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed5d10
ed5d30315901140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0602f239688e5332
5b4830160c04080c090b2b40553622352714253d4d514d3d25325e87542a
4f402c1308040303070c080926394b3022322010263e4f514f3e26011e4c
744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a3f40
6b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c4059
>PHAAAA+Calibri-Bold AddT42Char 
3 6414 437 <00010079ffe903cc03c600320069b10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1aed2b3f1239393f012fedd4ed3930311b400e2d49270b0519492418
0b0f014c24b8014db4400e4d054c00183f3f1aed2b3f1239393f30315925
140e0223222e023535060623222e023511343e0233321e021511141e0233
32363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d210b
1d312425301d0c122539263061370b1d302525301c0c220a0f0a05050a0f
0a6750503c68896602220a0f0a05050a0f0afe08464a351d464302510a0f
0a05050a0f0a>PHAAAA+Calibri-Bold AddT42Char 
3 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3031011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>PHAAAA+Calibri-Bold AddT42Char 
PHAAAA+Calibri-Bold /CharStrings get begin
/P 87 def
/b 271 def
/e 286 def
/h 346 def
/i 349 def
/l 367 def
/r 396 def
/s 400 def
/u 437 def
end
PHAAAA+Calibri-Bold /Encoding get
dup 80 /P put
dup 98 /b put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 114 /r put
dup 115 /s put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/NCETVX+Calibri-Bold /PHAAAA+Calibri-Bold findfont ct_VMDictPut
/NCETVX+Calibri-Bold*1 
[80{/.notdef}rp /P 17{/.notdef}rp /b 2{/.notdef}rp /e 2{/.notdef}rp /h 
/i 2{/.notdef}rp /l 5{/.notdef}rp /r /s /.notdef /u 
138{/.notdef}rp]
NCETVX+Calibri-Bold nf
NCETVX+Calibri-Bold*1 [18 0 0 -18 0 0 ]msf
34.1024 184.56 mo
(Publisher)
[9.59396 9.72005 9.72005 4.44604 4.44604 7.20004 9.60125 8.99831 0 ]xsh
4.56 lw
131.76 178.56 mo
178.74 185.351 li
@
177.462 178.254 mo
190.022 186.981 li
175.504 191.793 li
cp
ef
6.78 395.82 mo
6.78 380.643 34.771 368.34 69.3 368.34 cv
103.829 368.34 131.82 380.643 131.82 395.82 cv
131.82 410.997 103.829 423.3 69.3 423.3 cv
34.771 423.3 6.78 410.997 6.78 395.82 cv
0 0 0 0 cmyk
ef
2.04 lw
6.78 395.82 mo
6.78 380.643 34.771 368.34 69.3 368.34 cv
103.829 368.34 131.82 380.643 131.82 395.82 cv
131.82 410.997 103.829 423.3 69.3 423.3 cv
34.771 423.3 6.78 410.997 6.78 395.82 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
NCETVX+Calibri-Bold*1 [18 0 0 -18 0 0 ]msf
34.1839 401.732 mo
(Publisher)
[9.59396 9.72005 9.72005 4.44604 4.44604 7.20004 9.60125 8.99831 0 ]xsh
4.56 lw
131.76 395.7 mo
176.89 388.545 li
@
175.71 395.658 mo
188.15 386.76 li
173.567 382.147 li
cp
ef
280.2 198.12 mo
332.257 270.719 li
@
336.488 264.88 mo
338.9 279.983 li
325.37 272.851 li
cp
ef
275.16 360.479 mo
331.77 288.901 li
@
335.721 294.933 mo
338.841 279.96 li
324.991 286.447 li
cp
ef
597.9 257.82 mo
689.46 257.82 li
689.46 302.94 li
597.9 302.94 li
cp
0 0 0 0 cmyk
ef
2.28 lw
[2.28 2.28 ] 0 dsh
597.9 257.82 mo
689.46 257.82 li
689.46 302.94 li
597.9 302.94 li
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: RHAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /RHAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f3299c236e8000000cc000000606376
7420b970d8350000012c000005bc6670676d7ede0337000006e800000d2b
676c7966f31ec69c00010a880000246068656164f69a851a000014140000
0036686865610dad1c6d0000144c00000024686d7478e437c0af00001470
000064b06c6f636103680c4400007920000064b46d6178702c1d07a90000
ddd4000000206e616d655c79d8410000ddf4000007a77072657013672219
0000e59c000024eb676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e0002affc000247b00000009000000004d53202000400000
feff0600fe0001c4079e0226200001ff0000000003b7050e000000200014
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000051a001500a0fff8ff77
fff803480066015401cc00ac00a200b4008c0101006e0000000000000000
0000011f000a04e2001400b4fff6035c00140028fdda0568fea2ffef405a
868574737271706f6e6d6c6b6a696867666564625f5e5d5c5b5a59585554
535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736
352f2e2d2c2826252423221f181411100f0d0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b0042623
48482d2c45234660b0206120b04660b004262348482d2c4523462361b020
6020b02661b02061b004262348482d2c45234660b0406120b06660b00426
2348482d2c4523462361b0406020b02661b04061b004262348482d2c0110
203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b0042651582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab102
00080d2d2c2045b00325456164b050515845441b2121592d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb02923
44b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2c4523456023456023456023766818b0806220
2d2cb00426b00426b00425b0042545234520b003266062636820b0032661
658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45b1
302f4523456160b0016069442d2c4b5158b02f2370b01423421b2121592d
2c4b515820b0032545695358441b2121591b2121592d2c45b01443b00060
63b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d2c
4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b00326
458a586466b01f601b64b020606620581b21b04059b001615923586559b0
2923442310b029e01b2121212121592d2cb0164358b004254564b0206066
20581b21b04059b0016123586559b0292344b00425b00725082058021b03
59b0052510b004252046b0042523423cb0072510b006252046b00425b001
6023423c2058011b0059b0052510b00425b029e0b0072510b00625b029e0
b00425b00725082058021b0359b00425b003254348b00625b00325b00160
43481b2159212121212121212d2cb0164358b004254564b020606620581b
21b04059b0016123581b6559b0292344b00525b00825082058021b0359b0
042510b005252046b0042523423cb00425b0072508b0072510b006252046
b00425b0016023423c2058011b0059b0042510b00525b029e0b029204565
44b0072510b00625b029e0b00525b00825082058021b0359b00525b00325
4348b00425b0072508b00625b00325b0016043481b215921212121212121
2d2c02b00425202046b004252342b0052508b003254548212121212d2c02
b0032520b0042508b0022543482121212d2c452320451820b00050205823
652359236820b040505821b04059235865598a60442d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2cb000214b5458381b2121592d2cb002435458b0462b
1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b048
2b1b21212121592d2cb002435458b0492b1b212121592d2c2320b000508a
8a64b10003255458b0401bb10103255458b005438b59b04f2b5923b0622b
2321235865592d2cb108000c215460432d2c014623466023466123201020
468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b
21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b2020202436042b12401885458b202200243604200
4b014b5258b2020802436042591bb940000080885458b202040243604259
b94000008063b80100885458b202080243604259b94000010063b8020088
5458b202100243604259b12601885158b94000020063b80400885458b202
400243604259b94000040063b80800885458b202800243604259b1280188
5158b94000080063b81000885458ba000201000002436042595959595959
59b10002435458400a0540084009400c020d021bb10102435458b2054008
ba010000090100b30c010d011bb18002435258b2054008b80180b109401b
b901000002435258b2054008ba0180000901401bb901800002435258b205
4008b80200b109401bb2054008ba010000090100595959b9400000808855
b94000020063b8040088555a58b30c000d011bb30c000d01595959424242
42422d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2cb0022563b0206066b00225b820
00626023622d2c204569442d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b00343525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b00343525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12801885158b940
00040063b8080088545c1bb001592d2cb12801885158b94000040063b808
0088545c1bb001592d00000100000006333335a1e1d15f0f3cf500190800
00000000bbeb7ccc00000000d5968a66fbfafd8009ec0836000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
00000000000000000000192c040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb005003fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1e01d6ff1e01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340055
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
023200940267002102e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff2a040e0024040e00240329009003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e0023040e0054040e001b040e002e0557001e040e001e07570026
02710024027100250430000004e300ac0366000f0476006203cb005a0438
ffff039fffe106d700ac04a10023053f00ac05a2005d02ca00350438005a
03800072016dffd802f5001c03ad004703bf003b0254007801de00640254
007801de006404fc00ac04340099058b000f056d002103ca004b038f005a
03c100220366001e046800220411001e035000a1034f0049084900230610
005c081400220671005c07cc0022063b005c068800230545005c06880023
0545005c068800230545005c04440057036200500428001203a3ffe90428
00ac03a300990428001203a3ffe9040900ac027b0099035d001201d6fff6
054cffe20438ffec05c8006304b9005a091b0063070f005a042200120434
ffea054e0037052e003705cc0014067800250562006304340060070c0063
05a40060041e00780335005004a7005303fd0032048a0022039d0022071e
003e05b8003503bc004b03a7004b0422001c0434ffea0422001c0434ffea
03a300ac032000990346003c0346003c03df001e03700014042b005c042b
005c0262003c05690060031b009907a300990569009902ca0099051900a1
034e002103b70064054cfff604340061035f00ac02ca009903c4003503c4
003503c40035035d001201d60099052400ac04340099035f00ac02ca0099
049f005a03b7005a04fc00ac02fe0000054f00ac046200990461ffcc038d
ffe10362005a043400990504000f053f005003adffd602710025051e0063
0444005a053800630437005a051e00630444005a050cffb803c400080428
000803a30008052afffe0434001c0458002602ca000c03ad003a03210051
058d000f03ca004b053c006103ec00000428003003e6000f052e000a035b
0024047b00450664009903ad00590422005b06d700ac020400ac08d50022
048afff2062f005c03a4006f03fbfff204c80015027100250434006002a6
001401d6ff1d01d6fffa06640099043400990434009903c7004903c70049
043c007406cc005a06cc005a06cc005a070f005a070f005a0401006403ed
00a1028d009903dd00990393001404a6001403b2003f057b003f01eaffd5
0434009404a4002706640099066400990470fffa0369001203be00120369
0012041a00290377ff4a041aff4a0377fef003510022030c008402e9006c
01ee0000015effc7031d00000434006004b1006606550003055800160579
00ac056c009906550052062c00380562006304340060071e003d05b80035
042800ac03a300990721000305db0016073800ac060c0099051f00ac0450
009904d100ad043c00990512ffec0447ffc2096e000508030017049b0005
040d0017050b0003043c0016052400280000ff8f0000ff7e0000ff300000
ff100000fefc0320007c0000ff2f0000ff310000ff530000ffb70000ff4c
0000ff4d0000ffad0000fec30000fdc5000000000000ff4d0000ff4d0000
00d50000fecb0000fe4b0000ff320000ff460000ff2f0000ff550000ff5e
0000ff4d0000feb70000ff660000ff4d0000ff320000ff2f0000ff5f0000
ff55000000000000fe4d0000ff3700000000000000000000000000000000
00000000000000000000000000000000000000000000ffb70000ffb70000
00000000000000000000000000000000ffb70000ffc3027300450000ff31
01de00a10000048400000057022400960000ffa80000ffa80000ff190000
fe6e02eb009400000000044b006a046b006a03f3002b02f30019038f0018
048f008c049a008c01da009902530018049d0099046e006b0477006b01da
00990390001803a1001803ce002e0378001c04ae009904b3009904a50054
04ad005401da009902eb002b048b0028043100150427005b0439005b0454
006d0464006d037a002003e20019044b008c0451008c03900018058c004a
0591004a04d7003604e5003603b5009903b5009903b5009901ff002a0359
002b01da00990000ff0603b50099043100150577006904bb001805bb008c
04fa002e04a4001c05da009904bc00180603003603fc0046044b006a044b
006a046b006a03f3002b03f3002b02f3001902f30019038f0018038f0018
049a008c048f008c0242001e01da009901da00990299001e0477006b0242
001e039000180390001803a1001803ce002e03ce002e0378001c03adff6a
03adff6a04ad005402eb002b048b00280439005b0464006d0454006d03e2
00190451008c039000180591004a058c004a058c004a0591004a0591004a
04e5003604d7003603e8001c042f001d05f400ac03bf00370329005903bf
00370329005903ad004703210051025000ac02320094050e008204010064
055e0050037d003208790063073500640440ffd703c2ffcd06d7000f05df
000a062600ac057b00990708006305c6005a06f000ac058d009904a10022
039d002205c800550480001b06f000ac059b009904c8001403d20022051c
002c0455001d05d20005050d001705b7000304d1001607a900ac05f70060
054c00630438005a054c00630438005a091b0063070f005a0655007e0000
fea207e2006f074b00c807e2002603d1007d000000640000006400000064
00000064000000640000006400000064000000640000fe480000ff32036e
0000025b005e052700010477001703b700470338005107c9004b06c2004b
0706007405e6004205b5000104ed00170530000f043d000a03e6000f0319
000a051c00ac0468008503e6000f0319000a05340014048c0014047200ad
04340099071a00ac060f0099091b0063070f005a054c00630431005a03a2
006402e5006400000064040900ac036d009903e6000f03190014052200ac
04530099028d0007042800ac045a00ac042200ac0422005b04ec00ac03e6
000f03e6000f050c005b042800ac04280030028d00070444006104440038
03bf003b03ad00ac03ad005906d700ac052a00ac035d00ac03ad00470458
00ac0458004d04950024048a002204fc00ac050c0094028d00a9071e003d
0427003003e6001e045a005904a1002304a1002303e800ac03e8006c0204
00ac054c0063052200aa052200aa035d001204ec005d0205009702050097
039500970395009702000097020000970454006403970064053d004b0500
000c083b003205c30031038200310a1500320a1a00320000fff6042d004b
042d004b06cc000005aa00c806f400c803d300620266006a033e00450764
0031045900000266006a01ffffa8037e006a03ca0075005fffa804100180
04100157041000ba04100047041000c3041000b5041000950410004c0410
004c041000aa057300c8022300490243007103400056035b00c50a6d0084
05ce00a3045f00880410018004100155041000b8041000430410006f0410
0076041000930410004c0410004c041000aa024400b102820085035a0085
0175009c0200008c0200008c02bf008c02bf008c02bf008c02bf008c02bf
008c02bf008c02d0009602d00096020f007b0201008c0201008c02180071
031e009e031e009e0282ffa80282ffa80282ffa804be006704be00d20282
00680282ffa80282002d02a000000282005b0282006c0282ffa802820068
0282ffa80282006d0282ffa80282006a0282ffa8028200ab0282ffa80410
007d041000c701ee006f0243006f03470070040600540350006f0360005d
038e003903ea003903ea00390364003901ee006f0243006f034700700406
005403d9007003dd005d0393003803ea003903ea0039036400390398005d
0329003c027000d2027000b6027000490270001e0270004a027000410270
002c0270001b0270001b0270003902700013027000170270002302700020
02700045027000120270003702700025027000260270001e027000280270
00190270001b0270001402700019026600de026600c30266006902660025
0266006c02660068026600580266002b0266002b026600640266003c0266
00420266005702660048026600750266003e0266005e0266004f0266004f
0266002e026600510266004402660047026600400266004404c400310000
00000000000004c4003104c400310000ffa80000fef50000fef90000fee4
0000fef50000fe1e0000ff090000fe840000ff310000ff5e0000ff4a0000
ff5e0000ff220000feeb0000ff170000ff2a0000ff490000ff250000ff29
0000ff650000ff120000ff4b0000ff480000ffaa0000ff480000ff440000
ff210000ff350000ff370000ff930000ff490000ff2a0000ff150000ffad
0000fe390000fe920000ff030000ff190000ff3b0000ff220000fe9f0000
ff7b0000ff890000ff480000ff6a0000fe9f0000ff120000febb0000ff2a
0000ff610000ff610000ff840000ff690000ff480000ff290000ff220000
ff290000ff1e0000ff150000ff300000ffb20000ff4c0000ff3a0000ffb2
0000ff4c0000ff3a0000fee50000feda0000fee50000ff620000ff1e0000
ff2a0000ff250000ff980000ff980000ff980000ff980000ff2d0000fed2
0000ff470000ff170000ff6f0000fefc0000ff0b0000ff230000ff290000
ff210000ff240000ff150000ff2a0000ff220000ff3c0000fefc0000ff48
0000ff130000ff070276000001790005018500250185007f0179ffd10179
ffda0185fffa0225007f0179ffc70179ffcb01deffbc01dd000401de005d
01de007f01ddffe001ddffd901de003201de007f01ddffc001ddffc40669
004c0669004c0669004c0669004c0669004c0669004c0669004c0669004c
0669004c0669004c0669004c0669004c0669004c0669004c0669004c0669
004c0669004c0669004c0669004c0669004c0669004c01f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa801f6ff9501f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa80251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ff9d0251ffa80251ffa80251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa806e2004c06e2004c06e2004c06e2004c06e2004c
06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2
004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c
06e2004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca
004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c
04ca004c04ca004c04ca004c04ca004c04c5ffa804c5ffa804c5ffa804c5
ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa8
04c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa8051d
ffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8
051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051d
ffa8051dffa8051dffa804ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c0347005803470058
034700580347005803470058034700580347005803470058034700580347
0058034700580347005803470058034700580347005803f1005703f10057
03f1005703f1005703f1005703f1005703f1005703f1005703f1005703f1
005703f1005703f1005703f1005703f1005703f100570358000003580000
035800000358000003580000035800000358000003580000035800000358
0000035800000358000003580000035800000358000003580000036d0000
0358000003a9000003a9000003a9000003a9000003a9000003a9000003a9
000003a9000003a9000003a9000003a9000003a9000003a9000003a90000
03a9000003a9000003a0000003a90000072b004c072b004c072b004c072b
004c072b004c072b004c072b004c072b004c072b004c072b004c072b004c
0507ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507
ffa80507ffa80507ffa80507ffa80566ffa80566ffa80566ffa80566ffa8
0566ffa80566ffa80566ffa80566ffa80566ffa80566ffa80566ffa80791
004c0791004c0791004c0791004c0791004c0791004c0791004c0791004c
0791004c0791004c0791004c0846004c0846004c0846004c0846004c0846
004c0846004c0616ffa80616ffa80616ffa80616ffa80616ffa80616ffa8
063affa8063affa8063affa8063affa8063affa8063affa80865004c0865
004c0865004c0865004c0865004c0865004c061c003b061c003b061c003b
061c003b04d5ffa804d5ffa804d5ffa804d5ffa804f4ffa804f4ffa804f4
ffa804f4ffa8063b003b063b003b063b003b063b003b04b5004c04b5004c
04b5004c04b5004c04b5004c04b5004c04b5004c04b5004c03dfffa803df
ffa803dfffa803dfffa803dfffa803dfffa803dfffa803dfffa8038effa8
038effa8038effa8038effa8038effa8038effa8038effa8038effa80401
004c0401004c0401004c0401004c0401004c0401004c0401004c0401004c
06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c06c8
004c06c8004c06c8004c02dbffa802dbffa802dbffa802dbffa802dbffa8
02dbffa802dbffa802dbffa802dbffa802dbffa80351ffa80351ffa80351
ffa80351ffa80351ffa80351ffa80351ffa80351ffa80351ffa80351ffa8
072f004c072f004c072f004c072f004c072f004c072f004c072f004c072f
004c072f004c072f004c04f9004c04f9004c04f9004c04f9004c04f9004c
02dbffa802dbffa802dbffa802dbffa802dbffa80351ffa80351ffa80351
ffa80351ffa80351ffa80506004c0506004c0506004c0506004c0506004c
0556003b0556003b0556003b0556003b0556003b0556003b0720004c0720
004c0720004c0720004c0720004c0720004c0720004c0720004c0720004c
0720004c0720004c0720004c0720004c0720004c03bdffa803bdffa803bd
ffa803bdffa803bdffa803bdffa803bdffa803bdffa803bdffa803bdffa8
03bdffa803bdffa803bdffa803bdffa803beffa803beffa803beffa803be
ffa803beffa803beffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
0635004c0635004c0635004c0635004c0635004c0635004c0736004c0736
004c0736004c0736004c0736004c0736004c0736004c0736004c0736004c
0736004c0736004c0736004c0736004c0736004c08d9003b07a5ffa807d4
ffa80909003b045f004c0469004c0469004c0469004c045f004c045f004c
045f004c01cdffa801d9ffa801d9ffa801d9ffa801cdffa801cdffa801cd
ffa8020cffa8020cffa8020cffa8020cffa8020cffa8020cffa8020cffa8
04ad004c04ad004c04ad004c04ad004c04ad004c04ad004c04ad004c036e
0059036e0059036e0059036e0059032fffa8032fffa8032fffa8032fffa8
0392ffa80392ffa80392ffa80392ffa80414005904140059041400590414
0059045b004c045b004c045b004c045b004c045b004c045b004c045b004c
045b004c045b004c01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa801f6ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80495004c0495004c0495
004c0495004c0495004c0495004c0495004c0495004c0495004c0524003b
0524003b039e004c0524003b040fffa80411ffa801f6ffa80411ffa8033e
ffa8033effa802dcffa8033effa80378004c052e003b0378004c052e003b
02c6004c02c6004c02c6004c02c6004c02c6004c0378004c0378004c039e
004c039e004c0378004c037a0000037a0000037a0000037a0000037a0000
037a0000037a0000037a0000037a0000037a0000037a0000037a0000037a
0000037a0000037a0000037a00000317004c03cb000003cb000003cb0000
03cb000003cb000003cb000003cb000003cb000003cb000003cb000003cb
000003cb000003cb000003cb000003cb000003cb000002c9004c055b004c
055b004c055b003b055b0031055b0031055b004c055b004c055b004c055b
004c055b0039055b004c055b004c055b004c055b004c055b004c055b004c
055b004c01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa80251ffa80251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa802abffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80497004c0497004c0497
004c04970046049700460497004c0497004c0497004c0497004c0497004c
0497004c0497004c0497004c0497004c0497004c0497004c0497004c055b
ff3b044bff0007dc004c07dc004c0306004c02d0001507dc004c07dc004c
01f6ffa801f6ffa80251ffa80251ffa802d0001502d000150301007f0301
007f036e005903d8007f0433007f0562004c05bc004c05a90000060b0000
05a90000060b000005a90000060b000005a90000060b000004fa000005ab
00000441ffa804fa000005ab00000441ffa80467004c0467004c01de007f
0185007f043affd9043afffd0458003b0458003b04d4000304d4003b04f2
003b04f2003b08a4004b072c004b08a4004b072c004b09e90030083f006b
0763005f06cd0000095500000960ffe4096000000960fffe0930ffff0185
ffd901de000402d2007c02d2007c0179007f01dd007f0469004c01d9ffa8
020cffa804ad004c04f5003b04f5003b04f5003b04f5003b054e003b054e
003b054e003b054e003b04f5003b05ab000005ab00000400ffa80444ffa8
0444ffa80556003b0556003b037300000373000003730000037300000373
000003730000037300000373000003730000037300000373000003730000
0373000003730000037300000373000003a0000003730000038700000387
000003870000038700000387000003870000038700000387000003870000
038700000387000003870000038700000387000003870000038700000347
005803470058034700580347004103470058034700580347005803580000
0358000006c8004c06c8004c06c8004c06c8004c06c8004c06c8004c02db
ffa802dbffa802dbff8d02dbff6f02dbffa802dbffa802dbffa803bdffa8
03bdffa803bdffa803bdffa803beffa803beffa801cdff2f032fffa801f6
ff8904f5003b03b4ffa802dcff2802dcff2802dcff2802dcff2802dcff28
02dcff28032dffa8032dffa8032dffa8032dffa8032dffa8032dffa80245
ff280245ff280245ff280245ff280243ff280243ff2801f6ffa801f6ffa8
01f6ffa801f6ff3301f6ff2301f6fed101f6ffa801f6ff5c01f6ff5c01f6
ff2201f6ff5d01f6ff5501f6ffa801f6ffa801f6ffa801f6ff3301f6ff22
01f6ff9401f6ff2201f6ff2201f6ff2201f6ff2201f6ff2201f6ff2201f6
ffa801f6ff3301f6ff2201f6ff2201f6ff4e01f6ff2201f6ff2201f6ff22
01f6ff2201f6ffa801f6ffa801f6ffa801f6ffa401f6ff9401f6ff4101f6
ffa801f6ffa501f6ffa501f6ff9201f6ff9c01f6ff9b01f6ffa801f6ffa8
01f6ffa801f6ffa401f6ff9201f6ffa801f6ff9201f6ff9201f6ff9201f6
ff9301f6ff9201f6ff9201f6ffa801f6ffa401f6ff9201f6ff9201f6ff92
01f6ff9201f6ff9201f6ff9201f6ff920251ffa80251ffa80251ffa80251
ffa40251ff940251ff410251ffa80251ffa50251ffa50251ff920251ff9c
0251ff9b0251ffa80251ffa80251ffa80251ffa40251ff920251ffa80251
ff920251ff920251ff920251ff930251ff920251ff920251ffa80251ffa4
0251ff920251ff920251ff920251ff920251ff920251ff920251ff9201fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbff9501fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ff9d0233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80255ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa801fbffa801fbffa801fbffa801fbff3301fbff2301fbfed101fb
ffa801fbff5c01fbff5c01fbff2201fbff5d01fbff8801fbffa801fbffa8
01fbffa801fbff3301fbff2201fbff9401fbff2201fbff2201fbff2201fb
ff2201fbff2201fbff2201fbffa801fbff3301fbff2201fbff2201fbff52
01fbff2201fbff2201fbff2201fbff2201fbffa801fbffa801fbffa801fb
ffa401fbff9401fbff4101fbffa801fbffa501fbffa501fbff9201fbff9c
01fbff9b01fbffa801fbffa801fbffa801fbffa401fbff9201fbffa801fb
ff9201fbff9201fbff9201fbff9301fbff9201fbff9201fbffa801fbffa4
01fbff9201fbff9201fbff9201fbff9201fbff9201fbff9201fbff920233
ffa80233ffa80233ffa80233ffa40233ff940233ff410233ffa80233ffa5
0233ffa50233ff920233ff9c0233ff9b0233ffa80233ffa80233ffa80233
ffa40233ff920233ffa80233ff920233ff920233ff920233ff930233ff92
0233ff920233ffa80233ffa40233ff920233ff920233ff920233ff920233
ff920233ff920233ff9202dcff2802dcff2802dcff2802dcff2802dcff28
02dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dc
ff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff28
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff27032dffa8032dffa8032d
ffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8
032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032d
ffa8032dffa8032dffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
0245ff280245ff280245ff280245ff280245ff280245ff280245ff280245
ff280245ff280245ff280245ff280245ff280245ff280245ff280243ff28
0243ff280243ff280243ff280243ff280243ff2802f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff270694004c0694004c0694004c0694004c0694004c
0694004c0694004c0694004c0694004c0694004c0694004c0694004c0694
004c0694004c0736004c0736004c0736004c0736004c0736004c0736004c
0736004c0736004c0736004c0736004c0736004c0736004c0736004c0736
004c0668004c0668004c0668004c0668004c03d0004c03d0004c03d0004c
03d0004c0185ffc70185ff9601de005d01de003201f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa801f6ff8201f6ffa801f6ffa801f6ff8201f6ff82
01f6ffa801f6ffa801f6ff8201f6ff8201f6ff9401f6ff8201f6ff820251
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbff8201fbffa8
01fbffa801fbff8201fbff8201fbffa801fbffa801fbff8201fbff8201fb
ff9401fbff8201fbff820233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa804c5ffa804c5ffa804c5ffa804c5ffa8
04c5ffa804c5ffa804c5ffa804c5ffa8051dffa8051dffa8051dffa8051d
ffa8051dffa8051dffa8051dffa8051dffa8034700580347005803470058
03f1005703f1005703f100570507ffa80566ffa802dbffa80351ffa803b4
ffa80458003b04f2003b0458003b04f2003b0282ffa80000feb70000fef5
0000fef90000fee40000fef50000fe1e0000ff090000fe840000ff310000
ff5e0000ff500000ff5b0000ff2a0000feeb0000ff2b0000ff2a0000ff49
0000ff2a0000ff2d0000ff650000ff120000ff4e0000ff4e0000ffb10000
ff490000ff440000ff210000ff350000ff370000ff9e0000ff490000ff2a
0000ff150000ffb10000fe390000fe920000ff060000ff2c0000ff3b0000
ff210000fe9f0000ff7b0000ff950000ff480000ff6a0000fe9f0000ff12
0000fec80000ff2d0000ff680000ff680000ff8b0000ff690000ff490000
ff290000ff220000ff290000ff1d0000ff1c0000ff2a0000ffba0000fedf
0000feda0000fed90000ff620000ff140000ff2a0000ff2a0000ff980000
ff980000ff980000ff980000ff2d0000feda0000ff4f0000ff1f0000ff6f
0000fefc0000ff1f0000ff270000ff2d0000ff210000ff2d0000ff190000
ff2a0000ff2a0000ff3c0000fefc0000ff4e0000ff180000ff1504be0067
04be00ee0a07006b0321ffa80341001e0242001e02280071024c006a024c
006a0000ff1d042d004b0000ff8e0000ff2d0000ff870000ff490000ff2d
0000ff2c0000ff560000ff240000ff990000ff420000ff970000ff3f0000
ff920000ff620000ff3f0000ff3e0000ff650000ff2e0000ffac0000ff66
0000ff840000fef40000ff480000ff480000ff1d0000ff350000ff560000
ff370000ff560000ff090000ff090000ff1d0000fe760000fe760000ff5f
0000ff5f0000000f0000000f0000ff9f0000ffae0000ff770000ff6c0000
ff590000ff6e0000ff000000ff8e0000ff2d0000ff870000ff2d0000ff2c
0000fec10000ff240000ff990000ff350000ff3f0000ff920000ff3f0000
ff3e0000fedc0000ff2e0000ff9f0000ff570000ffa00000ff4f0000ff4e
0000ff240000ff480000ff1d0000ff350000ff5a0000ff370000ff560000
ff090000ff090000ff1d0000ff240000fefb0000ff720000ff770000ff77
0000ff770000ff6e0000ff740458003b043a003b0461003b0443003b04f2
003b04d4003b04f2003b04d4003b05370004080700000866000009380000
095d0000055500000811ffdc0870ffdb0942ffdc0968ffdb0648004c0543
004c05f7004c0659004c07d6004c0833004c08b7004c0941004c09c9004c
09cf004c08f2004c0910004c073b004c0683004c053e004c0694004c0637
004c0585004c0647004c0647004c0557004c0557004c060c004c060b004c
0617004c075b004c077b004c079e004c07fa004c077b004c0813004c079e
004c078e004c09e4004c09d7004c068a004c048a004c071e004c06a4004c
074a004c0788004c0865004c084a004c0720004c06a8004c0720004c04ad
004c0722004c0453004c0688004c0688004c04a5004c04a5004c0688004c
0688004c0405004c0405004c0720004c051a004c0720004c0720004c05f5
004c0720004c0930004c091a004c04ba004c04cd004c064b004c070a004c
0825004c067a004c0624004c04e1004c051c004c04a5004c055a004c04ce
004c04a5004c04a5004c04ba004c04ba004c045e004c045e004c052e004c
0570004c0626004c0626004c05f5004c0668004c08f0004c07ed004c0960
003b0000ffaa0000ff7704b100ac040e00ac00>
<000000000000017e0000017e0000017e0000017e0000017e0000017e0000
017e0000017e0000017e0000017e0000017e0000017e0000017e0000017e
0000017e0000017e0000017e0000017e000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000003de
000003de000003de000003de000003de000003de000003de000003de0000
03de000003de000004d6000004d6000004d6000004d6000004d6000004d6
000004d6000004d6000004d6000004d6000004d6000004d6000004d60000
04d6000004d6000004d6000004d6000004d6000004d6000004d6000004d6
000004d6000004d6000004d6000004d6000004d6000004d6000004d60000
04d6000004d6000004d6000004d6000004d6000004d6000004d6000004d6
000004d6000004d6000004d6000004d6000004d6000004d6000004d60000
04d6000004d6000004d6000004d6000004d6000004d6000004d6000004d6
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c0000063c0000063c0000063c0000
063c0000063c0000063c0000063c0000063c0000063c0000063c0000063c
0000063c0000063c0000063c0000063c000007e0000007e0000007e00000
07e0000007e0000007e0000007e0000007e0000007e0000007e0000007e0
000007e0000007e00000094400000a9a00000a9a00000a9a00000a9a0000
0a9a00000a9a00000a9a00000a9a00000a9a00000a9a00000bf800000bf8
00000bf800000bf800000d7600000d7600000d7600000d7600000d760000
0d7600000d7600000d7600000d7600000d7600000ea000000ea000000ea0
00000ea000000ea000000ea000000ea000000ea000000ea000000ea00000
0ea000000ea000000ea000000ea000000ea000000ea000000ea000000ea0
00000ea000000ea000000ea000000ea000000ea000000ea000000ea00000
0ea000000ea000000ea000000ea000000ea000000ea000000ea000000ea0
00000ea000000ea000000ea000000ea000000ea000000ea000000ea00000
10c0000010c0000010c0000010c0000010c0000010c0000010c0000010c0
000010c0000010c0000011ec000011ec000011ec000012f8000012f80000
12f8000012f8000012f8000012f8000012f8000012f8000012f8000012f8
000012f8000012f8000012f8000012f8000012f80000144a0000144a0000
144a000014e0000014e0000014e0000014e0000014e0000014e0000016d6
0000181c0000181c0000181c0000181c0000181c0000181c0000181c0000
195a0000195a0000195a0000195a0000195a0000195a0000195a0000195a
0000195a0000195a0000195a0000195a0000195a0000195a0000195a0000
1a6e00001a6e00001a6e00001a6e00001c3c00001c3c00001c3c00001c3c
00001c3c00001c3c00001c3c00001c3c00001c3c00001c3c00001d600000
1d6000001d6000001d6000001d6000001d6000001d6000001d6000001d60
00001d6000001d6000001d6000001d6000001d6000001d6000001d600000
1d6000001d6000001d6000001d6000001d6000001d6000001d6000001d60
00001d6000001d6000001d6000001ea600001ea600001ea600001ea60000
1ea600001ea600001ea600001ea600001ea600001ea600001ea60000203e
00002240000022400000224000002240000022400000237e0000237e0000
237e0000237e0000237e0000237e00002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
246000002460000024600000246000002460000024600000246000002460
000024600000246000002460000024600000246000002460000024600000
2460000024600000246000010000192c043a00170108000800020010002f
0087000012360235000400010000000e00ae000000030000000002100000
000000030000000700760210000100000000000001080286000100000000
0003000e038e0001000000000004000e039c0001000000000006000e03aa
0001000000000007003b03b80003000104090000021203f3000300010409
0001001c06050003000104090002000e06210003000104090003001c062f
0003000104090004001c064b0003000104090006001c0667000300010409
00070076068300a9002000320030003100370020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e000d004800650062007200650077
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200063006f00700079007200690067
00680074002000a900200032003000300033002000260020003200300030
0037002c002000520061006c00700068002000480061006e0063006f0063
006b002000260020004a006f0068006e00200048007500640073006f006e
002e002000540068006900730020006c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020006900730020006f0070
0065006e00200073006f007500720063006500200073006f006600740077
00610072006500200075006e00640065007200200074006800650020004d
004900540020004c006900630065006e00730065003b0020007300650065
00200065006d0062006500640064006500640020006c006900630065006e
007300650020006400650073006300720069007000740069006f006e0020
0066006f0072002000640065007400610069006c0073002e00430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002ea92032303137204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e0d486562726577204f70656e54797065204c
61796f7574206c6f67696320636f7079726967687420a920323030332026
20323030372c2052616c70682048616e636f636b2026204a6f686e204875
64736f6e2e2054686973206c61796f7574206c6f67696320666f72204269
626c6963616c20486562726577206973206f70656e20736f757263652073
6f66747761726520756e64657220746865204d4954204c6963656e73653b
2073656520656d626564646564206c6963656e7365206465736372697074
696f6e20666f722064657461696c732e4d46454f554b2b43616c69627269
4d46454f554b2b43616c696272694d46454f554b2b43616c696272694361
6c6962726920697320612074726164656d61726b206f6620746865204d69
63726f736f66742067726f7570206f6620636f6d70616e6965732e00a900
2000320030003100370020004d006900630072006f0073006f0066007400
200043006f00720070006f0072006100740069006f006e002e0020004100
6c006c002000520069006700680074007300200052006500730065007200
7600650064002e000d000a0048006500620072006500770020004f007000
65006e00540079007000650020004c00610079006f007500740020006c00
6f00670069006300200063006f0070007900720069006700680074002000
a9002000320030003000330020002600200032003000300037002c002000
520061006c00700068002000480061006e0063006f0063006b0020002600
20004a006f0068006e00200048007500640073006f006e002e0020005400
68006900730020006c00610079006f007500740020006c006f0067006900
6300200066006f00720020004200690062006c006900630061006c002000
48006500620072006500770020006900730020006f00700065006e002000
73006f007500720063006500200073006f00660074007700610072006500
200075006e00640065007200200074006800650020004d00490054002000
4c006900630065006e00730065003b002000730065006500200065006d00
62006500640064006500640020006c006900630065006e00730065002000
6400650073006300720069007000740069006f006e00200066006f007200
2000640065007400610069006c0073002e004d00460045004f0055004b00
2b00430061006c00690062007200690052006500670075006c0061007200
4d00460045004f0055004b002b00430061006c0069006200720069004d00
460045004f0055004b002b00430061006c0069006200720069004d004600
45004f0055004b002b00430061006c006900620072006900430061006c00
690062007200690020006900730020006100200074007200610064006500
6d00610072006b0020006f006600200074006800650020004d0069006300
72006f0073006f00660074002000670072006f007500700020006f006600
200063006f006d00700061006e006900650073002e0000>
<b10903415302c802c60038001f02c702c60038001f02dd003802da005502
d9003802d7005502d8003802d7005502d6003802d5005502d4003802d300
5502d2003802d1005502bf003802be005502bd003802bc0055000402db00
3402db005402db0003003402db005402db006402db00a402db00d402db00
05006b02d50001000b02d10001001402c2004402c2006402c2007402c200
9402c2000500a402be000100a402bc000100200284b40918014a20b80283
b40918014a20b80282b40918014a20b80281b40918014a20b80280b40918
014a20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20
b8027cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279
b40918014a20b80278b40918014a20b80277b40918014a20b80276b40918
014a20b80275b40918014a20b80274b40918014a20b80273b40918014a20
b80271b40918014a20b80270b40918014a20b8026fb40918014a20b8026e
b40918014a20b8026db40918014a20b8026cb40918014a20b8026bb40918
014a20b8026ab40918014a20b80269b40918014a20b80268b40918014a20
b80267b40918014a20b80266b40918014a20b80265b40918014a20b80264
b40918014a20b80263b40918014a20b80262b40918014a20b80261b40918
014a20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20
b8025db40918014a20b8025cb40918014a20b8025bb40918014a20b8025a
b40918014a20b80259b40918014a20b80258b40918014a20b80257b40918
014a20b80256b40918014a20b80255b40918014a20b80254b40918014a20
b80253b40918014a20b80252b40918014a20b80251b40918014a20b80250
b40918014a20b8024fb40918014a20b8024eb40918014a20b8024db40918
014a20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20
b80249b40918014a20b80248b40918014a20b80247b40918014a20b80246
b40918014a20b80245b40918014a20b80244b40918014a20b80243b40918
014a20b80242b40918014a20b80241b40918014a20b80240b40918014a20
b8023fb40918014a20b8023eb40918014a20b8023db40918014a20b8023c
b40918014a20b8023bb40918014a20b8023ab40918014a20b80239b40918
014a20b80238b40918014a20b80237b40918014a20b80236b40918014a20
b80235b40918014a20b80234b40918014a20b80233b40918014a20b80232
b40918014a20b80231b40918014a20b80230b40918014a20b8022fb40918
014a20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20
b8022bb40918014a20b8022ab40918014a20b80229b40918014a20b80228
b40918014a20b80227b40918014a20b80226b40918014a20b80225b40918
014a20b80224b40918014a20b80223b40918014a20b80222b40918014a20
b80221b40918014a20b80220b40918014a20b8021fb40918014a20b8021e
b40918014a20b8021db40918014a20b8021cb40918014a20b8021bb40918
014a20b8021ab40918014a20b80219b40918014a20b80218b40918014a20
b80217b40918014a20b80216b40918014a20b80215b40918014a20b80214
b40918014a20b80213b40918014a20b80212b40918014a20b80211b40918
014a20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20
b8020db40918014a20b8020cb40918014a20b8020bb40918014a20b8020a
b40918014a20b80209b40918014a20b80208b40918014a20b80207b40918
014a20b80206b40918014a20b80205b40918014a20b80204b40918014a20
b80203b40918014a20b80202b40918014a20b80201b40918014a20b80200
b40918014a20b801ffb40918014a20b801feb40918014a20b801fdb40918
014a20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20
b801f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6
b40918014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918
014a20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20
b801efb40918014a20b801eeb40918014a20b801edb40918014a20b801ec
b40918014a20b801ebb40918014a20b801eab40918014a20b801e9b40918
014a20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20
b801e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2
b40918014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918
014a20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20
b801dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8
b40918014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918
014a20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20
b801d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ce
b40918014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918
014a20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20
b801c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4
b40918014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918
014a20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20
b801bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801ba
b40918014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918
014a20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20
b801b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0
b40918014a20b801afb40918014a20b801aeb40918014a20b801adb40918
014a20b801acb40918014a20b801abb40918014a20b801aab40918014a20
b801a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6
b40918014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918
014a20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20
b8019fb40918014a20b8019eb40918014a20b8019db40918014a20b8019c
b40918014a20b8019bb40918014a20b8019ab40918014a20b80199b40918
014a20b80198b40918014a20b80197b40918014a20b80196b40918014a20
b80195b40918014a20b80194b40918014a20b80193b40918014a20b80192
b40918014a20b80191b40918014a20b80190b40918014a20b8018fb40918
014a20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20
b8018bb40918014a20b8018ab40918014a20b80189b40918014a20b80188
b40918014a20b80187b40918014a20b80186b40918014a20b80185b40918
014a20b80184b40918014a20b80183b40918014a20b80182b40918014a20
b80181b40918014a20b80180b40918014a20b8017fb40918014a20b8017e
b40918014a20b8017db40918014a20b8017cb40918014a20b8017bb40918
014a20b8017ab40918014a20b80179b40918014a20b80178b40918014a20
b80177b40918014a20b80176b40918014a20b80175b40918014a20b80174
b40918014a20b80173b40918014a20b80172b40918014a20b80171b40918
014a20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20
b8016db40918014a20b8016cb40918014a20b8016bb40918014a20b8016a
b40918014a20b80169b40918014a20b80168b40918014a20b80167b40918
014a20b80166b40918014a20b80165b40918014a20b80164b40918014a20
b80163b40918014a20b80162b40918014a20b80161b40918014a20b80160
b40918014a20b8015fb40918014a20b8015eb40918014a20b8015db40918
014a20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20
b80159b40918014a20b80158b40918014a20b80157b40918014a20b80156
b40918014a20b80155b40918014a20b80154b40918014a20b80153b40918
014a20b80152b40918014a20b80150b40918014a20b8014fb40918014a20
b8014eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80149b40918014a20b80148b40918014a20b80147b40918
014a20b80146b40918014a20b80145b40918014a20b80144b40918014a20
b80143b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb8
0281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027d
b21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d
411fb80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411f
b80274b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb802
70b21d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb2
1d431fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c45
1fb80267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb8
0263b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025f
b21c451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c
451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451f
b80256b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c451fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b49
1fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb8
0245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241
b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b
4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1f
b80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb802
34b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b2
1b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c
1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb8
0227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223
b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b
4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1f
b8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb802
16b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b2
1a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f
1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb8
0209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205
b219511fb80204b219511fb80203b219501fb80202b219511fb80201b219
511fb80200b219511fb801ffb219511fb801feb219501fb801fdb219511f
b801fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801
f8b219511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b2
18531fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b21853
1fb801efb218541fb801eeb218541fb801edb218541fb801ecb218531fb8
01ebb218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7
b218541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218
541fb801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531f
b801deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801
dab218531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b2
17561fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b21757
1fb801d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb8
01cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9
b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217
571fb801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571f
b801c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801
bcb217571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b2
17561fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b21757
1fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb8
01afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801ab
b2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b216
5b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1f
b801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb801
9eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2
165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b
1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb8
0191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018d
b2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b216
5b1fb80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621f
b80184b215621fb80183b215661fb80182b215661fb80181b215551fb801
80b215451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb2
15621fb8017bb215621fb8017ab215641fb80179b215661fb80178b21566
1fb80177b215661fb80176b215661fb80175b215661fb80174b215661fb8
0173b215451fb80172b215621fb80171b215621fb80170b215631fb8016f
b215641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215
661fb8016ab215661fb80169b215621fb80168b215621fb80167b215611f
b80166b215641fb80165b215641fb80164b215661fb80163b215661fb801
62b215661fb80161b215661fb80160b215661fb8015fb215661fb8015eb2
15551fb8015db215451fb8015cb215451fb8015bb215361fb8015ab21561
1fb80159b215621fb80158b215621fb80157b215631fb80156b215641fb8
0155b215661fb80154b215661fb80153b215661fb80152b215661fb80151
b214401fb80150b214551fb8014fb214561fb8014eb214831fb8014db214
2d1fb8014cb214401fb8014bb214401fb8014ab214411fb80149b214401f
b80148b214401fb80147b214411fb80146b2147e1fb80145b214871fb801
44b2147f1fb80143b214801fb80142b212461fb80141b212461fb80140b2
12461fb8013fb212461fb8013eb212441fb8013db212461fb8013cb21159
1fb8013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb8
0137b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133
b2112c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211
571fb8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1f
b8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb801
26b2115b1fb80125b211561fb80124b211561fb80123b211571fb80122b2
11581fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b
1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb8
0119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115
b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b210
5e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1f
b8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb801
08b2105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2
105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f
621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631f
f80f641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f
641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641f
e90f641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e
681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681f
da0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d
261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1f
cb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d
261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c
711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711f
b50c721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b
7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1f
a60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b
791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f
970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a
4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f
8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb
7d4012060a7c557a557bab7a557955775578ab7755ba028600660285403c
5576ab755504751475747503f47501ab7501447501307501020075107520
75030c7455725573ab7255007250728072b072043bb072e072020072010a
b8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a
03251f6938675568ab67556638645565ab645563386255613860555f385d
555eab5d555c385a555bab5a55593858555703251f5638545555ab545553
38515552ab51554f384e554e03251f4d384b554cab4b554a38485549ab48
55473846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142
301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f1901
6f197f198f19030f18cf18024018292c460f17cf17df17ef170413401729
2e460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b3
16313546b8ffc0401f162326460f15010f151f150245ef15018600030120
01010001100120010308b8ffc0b401151f4603bd01000100000500010190
00542b4bb80800524bb008505bb00188b02553b00188b040515ab00688b0
00555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d00
1d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff53
58b20300001d42592b5e7375732b58403d0011e011f0110315bf10cf1002
0f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e313746
0f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f
0b02553f0b4f0b02400b3f4346400b2d3046000301200101000110012001
0308b8ffc0b301151f462b5e7375732b2b745e732b2b5e73742b73742b73
74745e735901755e73742b2b2b2b5e732b5e732b7374755e735e735e7375
5e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2bb1000243545841ff02840064028300640282006402810064028000
64027f0064027e0064027d0064027c0064027b0064027a00640279006402
780064027700640276006402750064027400640273006402710064027000
64026f0064026e0064026d0064026c0064026b0064026a00640269006402
680064026700640266006402650064026400640263006402620064026100
6402600064025f0064025e0064025d0064025c0064025b0064025a006402
590064025800640257006402560064025500640254006402530064025200
640251006402500064024f0064024e0064024d0064024c0064024b006402
4a0064024900640248006402470064024600640245006402440064024300
64024200640241006402400064023f0064023e0064023d0064023c006402
3b0064023a00640239006402380064023700640236006402350064023400
6402330064023200640231006402300064022f0064022e0064022d006402
2c0064022b0064022a006402290064022800640227006402260064022500
640224006402230064022200640221006402200064021f0064021e006402
1d0064021c0064021b0064021a0064021900640218006402170064021600
64021500640214006402130064021200640211006402100064020f006402
0e0064020d0064020c0064020b0064020a00640209006402080064020700
640206006402050064020441ff0064020300640202006402010064020000
6401ff006401fe006401fd006401fc006401fb006401fa006401f9006401
f8006401f7006401f6006401f5006401f4006401f3006401f2006401f100
6401f0006401ef006401ee006401ed006401ec006401eb006401ea006401
e9006401e8006401e7006401e6006401e5006401e4006401e3006401e200
6401e1006401e0006401df006401de006401dd006401dc006401db006401
da006401d9006401d8006401d7006401d6006401d5006401d4006401d300
6401d2006401d1006401d0006401cf006401ce006401cd006401cc006401
cb006401ca006401c9006401c8006401c7006401c6006401c5006401c400
6401c3006401c2006401c1006401c0006401bf006401be006401bd006401
bc006401bb006401ba006401b9006401b8006401b7006401b6006401b500
6401b4006401b3006401b2006401b1006401b0006401af006401ae006401
ad006401ac006401ab006401aa006401a9006401a8006401a7006401a600
6401a5006401a4006401a3006401a2006401a1006401a00064019f006401
9e0064019d0064019c0064019b0064019a00640199006401980064019700
640196006401950064019400640193006401920064019100640190006401
8f0064018e0064018d0064018c0064018b0064018a006401890064018800
640187006401860064018500644180018400640183006401820064018100
6401800064017f0064017e0064017d0064017c0064017b0064017a006401
790064017800640177006401760064017500640174006401730064017200
640171006401700064016f0064016e0064016d0064016c0064016b006401
6a0064016900640168006401670064016600640165006401640064016300
64016200640161006401600064015f0064015e0064015d0064015c006401
5b0064015a00640159006401580064015700640156006401550064015400
64015300640152006401500064014f0064014e0064014c0064014b006401
4a0064014900640148006401470064014600640145006401440064014300
642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b2b2b2b2b2b2b185f
5e0000>
[9313 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
3 382 18 <00010061fff0040c051e00390097b0852b58b31c003b2bb8ffe8b310014d
2bb8fff0b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b
014d2bbe0233000e0018012f00210026012cb2135304bb012a0035003001
2eb10956003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c431301bb12118
b8012fb36c211326b8012cb46c13533504b8012ab36c350930b8012eb26c
095600183f2bc42b3f2bc42b30315925140e0623222e0235343e0233321e
0615140e0223222e0223220e0215141e0233323e0233321e02040c020508
14405f7b497ecb8f4d5396d17f386a5a461b08050304080b080e324f714f
568d64373563905b4d7351340f070a0603b71018120e1429271b54a4f19d
a1fcaf5c15202a1b0e131a12141c1309272f274586c17c7bbd7f41262f26
06111e00>RHAAAA+Calibri AddT42Char 
3 990 38 <000100acfffa0354050e00270083b0852b58b10713b8ffe8b310014d13b8
fff0b30f014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d
13b80211b50d1d001e1d07b8010cb313131906b80128b322511955003f3f
ed12392fed012f2fc41139e12b2b2b2b2b3231301bb11307b8010cb56c13
13192206b80128b46c2251195500183f3f2b12392f2b30315901140e0223
211121321e0215140e02232111140e0223222e02351134363321321e0203
54040a0d07fe2601c0070d0a04040a0d07fe400814201a18221408291702
46070d0a0404c4131c1108fe4807101b15131b1109fde5070d070505070d
0704ae271f08121d>RHAAAA+Calibri AddT42Char 
3 1596 258 <0002005cffed033f03ca0033004000f6b0852b5840200f421f422f42030b
0917340c0c014d34100d014d34180b014d34100f10014c34b801f7400e00
27270f00010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8
ffe8b30b014d3ab8ffe8b40f10014c3ab8020840141117c500341034023b
c0340100340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d
04002f3fed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b
5e5d392f10e12b2b2b2b323931305e5d1b400d0b17013417c56c34342e41
222ab8011b40166c00220116042222042e1dea6c2e4a0c3ddc6c0c4d0400
182f3f2b3f2b12392f5f5e5d2b1112392f2b5d3031592514060623222626
3535060623222e0235343e02333335342e0223220e0223222e0235343e04
33321e02150723220e0215141633323637033f101c1b1a1f0e3b91514773
512d3e74a8697c16314e393d6149310c080c0904071b4256663461885426
a48d4464421f5950416f3d180c0c06060c0c5a3f46254666414c704a2546
3450351b1d231d0810190f191d1a231d132c557e54c4172d3f2946534244
>RHAAAA+Calibri AddT42Char 
3 2016 271 <00020099ffed03d50571002a003d00b6b0852b58b53f3f010a2136b8fff6
b30c014d36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36
b801f8401b152b120c014d2b200d014d2b180b014d2b1810014d2b100f01
4d2bb8020a400900150a363521040530b80105b6264a1b46104c39b80105
b1054d003fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b3239
31305d1bb70a36352104052630b8010540096c264a1b46104c0539b80105
b26c054d00183f2b3f3f3f2b12173930315901140e0223222e022715140e
0223222e023511343e0233321e0215113e0333321e0207342e0223220e02
0711161633323e0203d53363905d2b4946462708121b15141c1206071320
1819201208284b484828628b5728ae15345640203e404527447c433e5837
1901e775bb844611263a296e080c070404070c080538080c080404080c08
fde5293823104e83b0754582643d122a4232fe9953573c637b00>RHAAAA+Calibri AddT42Char 
3 2372 272 <0001005affed032003c9003500c8b0852b58b11c00b8ffc0b310014d00b8
ffe0b30d014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f01
4d27b8ffeeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b40
0d2f0e010e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48
312cb80106b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b
2b2b3231301b400c1f19e76c1f400a0d481f1324b80102b76c134a3103eb
6c31b8ffc0b5090d4831092cb80106b26c094d00183f2bc42b2b3f2bc42b
2b30315925140e0623222e0235343e0233321e0615140623222e02232206
15141e0233323e0233321e020320020507193c4b582f6196653541719959
2b51443518090602120d0f273c553a777f21405d3c39563f2b0c070a0703
a21119110d19251d12407bb37585bf7a3b101a22180e131812271f212821
b7ae5783582b242b2308131d>RHAAAA+Calibri AddT42Char 
3 4588 349 <00020085fffa0151052f0015002100a7b0852b58b73f234f236f230316b8
ffe8b30d014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d
16b8fff0b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d
15b8fff6b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b6
0a1f400f014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4
e12b2b2b2b2b2b31305d1bb1191fb8013eb56c191049054c00183f3fc62b
30315925140e0223222e023511343e0233321e0215131406232226353436
333216013e08122019182013070713201819201208132c3b3a2b2c3b3a2b
19080b080404080b080384070c080404080c0701303a2a29393a2a29>RHAAAA+Calibri AddT42Char 
3 4856 364 <00010099fffa037c0571003400b3b0852b58400c3f360129310131401201
4d31b8ffd0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0
b30b014d31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8ff
f6b30c014d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c
014d0016220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f
10f12b2b2b2b32e02b2b2b2b2b31305d5d1b400b220b0528491c46114c05
4c00183f3f3f3f12393930315925140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>RHAAAA+Calibri AddT42Char 
3 5194 367 <00010099fffa013e057100150051b0852b58b73f174f176f170300b8fff0
b30d014d00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00
b801f8b40a1046054c003f3f012fe12b2b2b2b31305d1bb31046054c0018
3f3f30315925140e0223222e023511343e0233321e0215013e0812201918
201307071320181920120819080b080404080b080538080c080404080c08
>RHAAAA+Calibri AddT42Char 
3 5846 374 <00010099fffa03a003ca003200b8b0852b58400f12100b014d13100b014d
3f34012a13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8
fff6b30c014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d01
4d0b100f014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b8
0106400a2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b
2b2b10e12b2b2b2b2b3931305d002b2b1bb12d10b80106400b6c2d4a2a19
2449194c054c00183f3f3f12393f2b30315925140e0223222e023511342e
022322060711140e0223222e023511343e0233321e021515363633321e02
1503a00812201819201208182e49303e7c44081220191820130706121c17
161d10074c974d5a7b4c2119080b080404080b08020f4d5e44245855fd8b
080b080404080b080384080b090303090b0877554f3d66896000>RHAAAA+Calibri AddT42Char 
3 6172 381 <0002005affed03de03ca0013002700c9b0852b58401c3f29012812012911
01260d01260c012608012607012a03012902011eb8ffe8b310014d1eb8ff
f0b30f014d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1e
b8020a401e2f0a010a141810014d14100f014d14200d014d14120c014d14
180b014d14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b801
02b1054d003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d
5d5d5d5d5d5d5d5d1bb10f19b80101b46c0f4a0523b80102b26c054d0018
3f2b3f2b30315901140e0223222e0235343e0233321e0207342e0223220e
0215141e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e
6a4f496944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427e
b47c49826239345f824d4a826139345e8200>RHAAAA+Calibri AddT42Char 
3 7228 410 <00010021ffef026d04ad003a0089b0852b58b4290011232db8fff0b30f01
4d2db8fff0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b3
0b014d2db801f8400c170d2ded23481d0ded174831b80104b1074d003fed
3fedcd3fed012f33e12b2b2b2b2b32cdc43231301b4011232ded6c23481d
1740170ded6c17480731b80104b26c074d00183f2b3f2b1a10cd3f2b3031
5925140e0423222e02351123222635343e02333335343e0233321e021515
33321e02151406232311141633323e0233321e02026d081020292e174664
401d7e0f1205080d087d0713201819201208e7080c0904120fe737471724
1c1408050905045b1d22100e0906254b734e020e2024131a1107d6070c09
0404090c07d607111a132420fe0a5d5f090a09050e18>RHAAAA+Calibri AddT42Char 
3 7520 437 <00010094ffed039c03bc003200b8b0852b58401f3f34010b27100d014d27
0a0c014d27080b014d27100f10014c27100b014d27b801f9b6004011014d
001fb8fff0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8
b30b014d1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49
270b05194924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b
2b2bd42be12b2b2b2b2b3931305d1b40092d49270b0519490e24b80105b4
6c0e4d054c00183f3f2b3f1239393f30315925140e0223222e0235350606
23222e023511343e0233321e021511141e023332363711343e0233321e02
15039c07121d15171d11064d964d5a7b4c210714201818201308172f4830
3e7b4507141f191820120919080b080404080b0877554e3c678962022208
0b090303090b08fdf44f5f432558550275080b090303090b0800>RHAAAA+Calibri AddT42Char 
3 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>RHAAAA+Calibri AddT42Char 
RHAAAA+Calibri /CharStrings get begin
/C 18 def
/F 38 def
/a 258 def
/b 271 def
/c 272 def
/i 349 def
/k 364 def
/l 367 def
/n 374 def
/o 381 def
/t 410 def
/u 437 def
end
RHAAAA+Calibri /Encoding get
dup 67 /C put
dup 70 /F put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/NCETVY+Calibri /RHAAAA+Calibri findfont ct_VMDictPut
/NCETVY+Calibri*1 
[67{/.notdef}rp /C 2{/.notdef}rp /F 26{/.notdef}rp /a /b /c 
5{/.notdef}rp /i /.notdef /k /l /.notdef /n /o 
4{/.notdef}rp /t /u 138{/.notdef}rp]
NCETVY+Calibri nf
NCETVY+Calibri*1 [14.04 0 0 -14.04 0 0 ]msf
620.135 276.588 mo
(Callback)
[7.43988 6.72101 3.23907 3.24048 7.31476 6.72101 5.88281 0 ]xsh
618.688 293.394 mo
(Function)
[6.47943 7.31476 7.31476 5.88281 4.67963 3.24048 7.4397 0 ]xsh
4.56 lw
[] 0 dsh
560.28 280.62 mo
581.014 280.504 li
@
578.773 287.357 mo
592.414 280.44 li
578.696 273.677 li
cp
ef
2.28 lw
149.7 65.58 mo
708.06 65.58 li
708.06 474.06 li
149.7 474.06 li
cp
@
372.06 48.18 mo
474.66 48.18 li
474.66 79.62 li
372.06 79.62 li
cp
0 0 0 0 cmyk
ef
372.06 48.18 mo
474.66 48.18 li
474.66 79.62 li
372.06 79.62 li
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: PHAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NCETVX+Calibri-Bold gcheck setglobal} if
3 1308 94 <0001003fffe9038c0525004900b9b10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1aed2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2fed
30311bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f014c
3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1aed
2b3f123939ed2b1139392f2f10ed10ed30315901140e0223222e0435343e
0233321e0233323e0235342e0635343e0233321e0615140e0223222e0223
220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49304c
351c304d6268624d3045759f592e5c503e1407050203070d0b0b30465c37
2b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b212821
172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a0c1c
211b1525341d2b3f312b303d5573>NCETVX+Calibri-Bold AddT42Char 
3 2474 272 <00010048ffea032103d60035009bb10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1afd2bd42bed3ffd
2bd4ed012fedc43230311bbc0018011f001f0024ffe8b40b0f014c24b801
1fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b240
094d00183f1afd2bd42bed3ffd2bd4ed30315925140e0623222e0235343e
0233321e0615140623222e0223220615141e0233323e0233321e02032103
0507183a4a572e679f6c374378a462284d43351609050314101126344832
62681a334d33344b38260d090c0704b01a23180f17211a10407db47486c3
803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00>NCETVX+Calibri-Bold AddT42Char 
NCETVX+Calibri-Bold /CharStrings get begin
/S 94 def
/c 272 def
end
NCETVX+Calibri-Bold /Encoding get
dup 83 /S put
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NCETVX+Calibri-Bold*1 
[80{/.notdef}rp /P 2{/.notdef}rp /S 14{/.notdef}rp /b /c /.notdef 
/e 2{/.notdef}rp /h /i 2{/.notdef}rp /l 5{/.notdef}rp /r 
/s /.notdef /u 138{/.notdef}rp]
NCETVX+Calibri-Bold nf
NCETVX+Calibri-Bold*1 [20.04 0 0 -20.04 0 0 ]msf
379.183 70.4246 mo
(Subscriber)
[9.47906 10.7996 10.6794 8.0401 8.40076 7.08005 4.91986 10.7996 10.0803 0 ]xsh
391.26 257.82 mo
404.34 257.82 li
404.34 302.22 li
391.26 302.22 li
cp
0 0 0 0 cmyk
ef
3 lw
391.26 257.82 mo
404.34 257.82 li
404.34 302.22 li
391.26 302.22 li
cp
.750271 .679713 .654902 .901946 cmyk
@
365.1 257.82 mo
378.18 257.82 li
378.18 302.22 li
365.1 302.22 li
cp
0 0 0 0 cmyk
ef
365.1 257.82 mo
378.18 257.82 li
378.18 302.22 li
365.1 302.22 li
cp
.750271 .679713 .654902 .901946 cmyk
@
378.18 257.82 mo
391.26 257.82 li
391.26 302.22 li
378.18 302.22 li
cp
0 0 0 0 cmyk
ef
378.18 257.82 mo
391.26 257.82 li
391.26 302.22 li
378.18 302.22 li
cp
.750271 .679713 .654902 .901946 cmyk
@
404.22 257.82 mo
417.42 257.82 li
417.42 302.22 li
404.22 302.22 li
cp
0 0 0 0 cmyk
ef
404.22 257.82 mo
417.42 257.82 li
417.42 302.22 li
404.22 302.22 li
cp
.750271 .679713 .654902 .901946 cmyk
@
417.3 257.82 mo
430.5 257.82 li
430.5 302.22 li
417.3 302.22 li
cp
0 0 0 0 cmyk
ef
417.3 257.82 mo
430.5 257.82 li
430.5 302.22 li
417.3 302.22 li
cp
.750271 .679713 .654902 .901946 cmyk
@
430.38 257.82 mo
443.46 257.82 li
443.46 302.22 li
430.38 302.22 li
cp
0 0 0 0 cmyk
ef
430.38 257.82 mo
443.46 257.82 li
443.46 302.22 li
430.38 302.22 li
cp
.750271 .679713 .654902 .901946 cmyk
@
338.94 257.82 mo
352.02 257.82 li
352.02 302.22 li
338.94 302.22 li
cp
0 0 0 0 cmyk
ef
338.94 257.82 mo
352.02 257.82 li
352.02 302.22 li
338.94 302.22 li
cp
.750271 .679713 .654902 .901946 cmyk
@
352.02 257.82 mo
365.1 257.82 li
365.1 302.22 li
352.02 302.22 li
cp
0 0 0 0 cmyk
ef
352.02 257.82 mo
365.1 257.82 li
365.1 302.22 li
352.02 302.22 li
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: RHAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NCETVY+Calibri gcheck setglobal} if

3 0 3 <> NCETVY+Calibri AddT42Char 
3 1238 89 <00020063ff41058705210027003b00beb0852b58401d0a2112281810014d
28100f014d28140d014d28120c014d28180b014d28b80232400a00201c30
1c801c031c32b8ffe8b310014d32b8fff0b30f014d32b8ffecb30d014d32
b8ffeeb30c014d32b8ffe8b30b014d32b80233b412210a0d2db80129b417
53250437b8012bb10d56003fedd4cd3fed123939012fe12b2b2b2b2bd45d
c4e12b2b2b2b2b12393931301bb4210a0d172db8012940096c1753254004
0d0d37b8012bb26c0d5600183f2b10d41acd3f2b12393930315905140e02
23222e0227060623222e0235343e0233321e0215140e02071e0501342e02
23220e0215141e0233323e020587050a0c06145974843e31966392d58b44
4a94de948bd38f4813293e2a496e48281408feac275b987070985f29265a
9772719a5e2872171f1106213f5a3c1e2c56a6f7a09af9af5f56a5f29d51
9484702d3c43220f132302e06ebc8b4e538dba6872bf8c4d548fbd00>NCETVY+Calibri AddT42Char 
3 3064 286 <0002005dffed039903ca002b003400eab0852b58402a2f363f366f360313
200d014d13200f014d1313212c100c014d2c180b014d2c100d014d2c100f
10014c2cb801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d01
4d04b8ffeeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a
4021212cc78004900402c00401d0040104041c2fdc264a18ea600e700e02
0e09ea1c4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b
5de12b2b2b2b12392f2b2b31305d1b4022042cc76c76040104041c262fdc
6c264a0e18ea6c000e100e020f030e1c09ea6c1c4d00183f2bc45f5e5d2b
3f2b12392f5d2b3031590114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>NCETVY+Calibri AddT42Char 
NCETVY+Calibri /CharStrings get begin
/space 3 def
/Q 89 def
/e 286 def
end
NCETVY+Calibri /Encoding get
dup 32 /space put
dup 81 /Q put
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NCETVY+Calibri*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 2{/.notdef}rp /F 10{/.notdef}rp /Q 
15{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 
/.notdef /k /l /.notdef /n /o 4{/.notdef}rp /t 
/u 138{/.notdef}rp]
NCETVY+Calibri nf
NCETVY+Calibri*1 [15.96 0 0 -15.96 0 0 ]msf
343.272 328.063 mo
(Callback Queue)
[8.52271 7.68002 3.72034 3.72034 8.39487 7.68002 6.71921 7.19958 3.36752 10.6789 8.39484 7.91937 
8.39487 0 ]xsh
474.66 139.62 mo
507.92 139.62 li
557.81 139.62 li
674.22 139.62 li
674.22 164.68 li
674.22 175.42 li
674.22 182.58 li
557.81 182.58 li
548.587 217.283 li
507.92 182.58 li
474.66 182.58 li
474.66 175.42 li
474.66 164.68 li
cp
0 0 0 0 cmyk
ef
2.04 lw
474.66 139.62 mo
507.92 139.62 li
557.81 139.62 li
674.22 139.62 li
674.22 164.68 li
674.22 175.42 li
674.22 182.58 li
557.81 182.58 li
548.587 217.283 li
507.92 182.58 li
474.66 182.58 li
474.66 175.42 li
474.66 164.68 li
474.66 139.62 li
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: RHAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NCETVY+Calibri gcheck setglobal} if
3 686 28 <000100ac0000037c050e002c00aeb0852b58b11a27b8ffe8b310014d27b8
fff0b30f014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d
27b80211400909132013200009001ab80108400d802601c02601d0260126
260619b8010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f
2f1239392f2f10e12b2b2b2b2b3231301bb1261ab80108400b6c00260116
032626060d19b8010cb46c0d510627b8010cb26c065400183f2b3f2b1239
2f5f5e5d2b30315925140e0223212226351134363321321e0215140e0223
211121321e0215140e0223211121321e02037c040a0d08fd931729291702
66080d080505080d08fe0601b2080d090404090d08fe4e0201080d0a0447
121b12081f270482271f08121b14121b1108fe6a09101c13121a1007fe31
08111b00>NCETVY+Calibri AddT42Char 
3 2714 282 <00020060ffed039c056d0026003900bcb0852b58401f3f3b010b1b39100d
014d390a0c014d391010014d39100f014d39180b014d39bb01f90000002f
ffe0b30d014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d
2fb8ffe8b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a
34b80104b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b
2b2b2b2b323931305d1b400a21460b39271b040e182ab80105b46c184a0e
34b80104b46c0e4d054c00183f3f2b3f2b1217393f30315925140e022322
2e023535060623222e0235343e023332161711343e0233321e0215032626
23220e0215141e0233323e0237039c07111c14151c120847995b638c5728
3262915f4f834007141f1819201209a6437d443f58371915345641213d40
462719080c070404070c08774d564d83b16274bb84474543020b070d0705
05070d07fd4553573c627c404482653d122a4331>NCETVY+Calibri AddT42Char 
3 3446 296 <00010025fffa02860578003c0088b0852b58b2161000b8ffe0b40b014d00
1bb8fff0b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b3
0b014d1bb801f9b2302a25b8ffd040121011014c250aed36471a26ed3048
204c1048003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c431301b40
11360aed6c36471a3026ed6c3048204c104800183f3f3f2b323f2b303159
01140e0223222e0223220e02151533321e02151406232311140e0223222e
02351123222635343e02333335343e0233321e0402860405080607151e29
1b2534200ec9080b0905120fc908132018182013087f101004080c087f23
486d4a2342240c0803050f13170e05090b091833513a6207111a132420fc
eb080b080404080b0803152024131a11075d5e8756290d0f0c131b00>NCETVY+Calibri AddT42Char 
3 3744 336 <00030035fe93038903c8003e004e005f0116b0852b584015122d47100f01
4d47080c014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d
3fb8ffe0b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707
b8ffe0b310014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040
340b014d0058100f014d58201012014c582a25400b12014c250f30070338
4ada0c53e81515603803e93c482a2042d9384a5bd9204f003fed3fed1239
3fed1112392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b11
12173910cd2b10cd2b2b2b10cd2b2b2b10cd31301b40270f300703380c4a
da6c0c151553e86c151560383c03e96c3c482a203842d96c384a205bd96c
204f00183f2b3f2b12393f2b1112392f2b10c62b12173930315901140623
23161615140e0223222627060615141617171e0315140e0223222e023534
3e0237262635343637262635343e023332161721321601342623220e0215
141633323e0213342627270e0315141633323e020389130f81231c325d80
4e37631b12174136eb4370522e346ba6716d99622c10213120312f32251f
24345c814c29471f01101111fefe655d30472f17655b31482f17535f51e9
2029180984764b653e1b0374231f24572f4e78532c1d16122e1e232e020a
02213d593b3e70553125405934213e383319194c2c3d6026255d424d7a54
2d090821fef15c672038492859661f3748fd5e3a3f0208192d2928154143
1d303e00>NCETVY+Calibri AddT42Char 
3 4288 346 <00010099fffa03a005710032009db0852b58b43f34012a13b8ffe8b30b01
4d13b8fff0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f8
40171e0b0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a
00400c014d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239
012f2f2be12b2b2b2b10e12b2b2b2b3931305d1bb32a192d10b801064009
6c2d4a2446194c054c00183f3f3f3f2b123930315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021511363633
321e021503a00812201819201208182e49303e7c44081220191820130707
132018192012084790495a7b4c2119080b080404080b08020f4d5e442458
55fd8b080b080404080b080538080c080404080c08fde54b493d66896100
>NCETVY+Calibri AddT42Char 
3 5344 373 <00010099fffa05d003ca0050011eb0852b58401b12100b014d13180b014d
26100b0c014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b
014d13b8fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8
401e1e160d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f1001
4c0ab801f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27
b8fff0b310014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200
100106b24b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f
1239393fed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b
2b2b2b3931305d002b2b2b2b1bb14b10b80106b46c4b4a4124b80106400e
6c414a3e462d38492d4c194c054c00183f3f3f3f1239393f2b3f2b303159
25140e0223222e023511342e022322060711140e0223222e023511342e02
2322060711140e0223222e023511343e0233321e021515363633321e0217
3e0333321e021505d00812201819201308142c442e397345081320181721
1307162c432e397444081220191820130706121c17161d10074c8f493859
4430102d514b47245776491f19080b080404080b080223395e44245855fd
8b080b080404080b080223395e44245855fd8b080b080404080b08038408
0b090303090b0877554f1a2f412831442a133d66894c>NCETVY+Calibri AddT42Char 
3 6490 396 <00010099fffa02a703ca00330086b0852b58b4703501260fb8fff6b30c01
4d0fb8ffe8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f8
4012004013014d004011014d00200d014d001a0ab8012540092b4a260f15
2049154c003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d1bb12b
0ab80125400a6c2b4a260f152049154c00183f3f1239393f2b3031590114
0e0223222e0223220e020711140e0223222e023511343e0233321e021515
3e0333321e0602a70206090808171d24151930353a230812201918201307
06121c17161d100725413a391d0d21241d0c0403010362161e1109090908
142e4c37fdb0080b080404080b080384080b090303090b08833644270f03
080a0a090e1b>NCETVY+Calibri AddT42Char 
3 6766 400 <00010051ffed02ce03ca00490110b0852b58400c2f4b3f4b4f4b7f4baf4b
0541b8fff0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b3
13014d41b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c
1b100d014d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f600
00ffc0400a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2e
dd370aeb115011601170110337113711163cdb411b05294a16e8054d003f
ed3f123939ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b12
39392f2fe12b2b2b2b2b2b31305d1b4025372edd6c110aeb6c0011101120
11030e033711371116293cdb6c411b05294a0516e86c054d00183f2b3f12
39392b1139392f2f5f5e5d2b2b30315901140e0223222e0435343e023332
1e0233323e0235342e0635343e0233321e0615140e0223222e0223220e02
15141e0602ce335e824e30574530160a04060b070b2b3f56382a44321b27
40505551402729527b5224483a291507030303070a06092236492f2a4029
1528405255534027010e456c4a260f171914241f131a10071b201b122336
252634281f222b3e563c3561492c0c1215100c0f16101119100716191613
23301c27352820222a3c5400>NCETVY+Calibri AddT42Char 
3 7846 448 <00010022fffa037b03bc002c010db0852b58b90023fff840170b0c014c1f
080b0c014c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b3
0b014d14b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8ff
f040370b014d37110126110127100128050122280b014d3d220124220121
280b014d3f210124210120280b014d3d2001242001270f0176210121b8ff
d04009111548212013014d21b8ffe8400910014d21200f014d21b8ffe8b3
0c014d21b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b
2b2b2b2b002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b
5d2b5d2b2b1bb5002101100521b8ffd0400b1115482849210b1a490b4c00
183f3f12393f2b5f5e5d30315901140e0207010e0323222e0227012e0235
343e0233321e0217131737133e0333321e02037b01020302fecd040d1a28
1e1e28190e04fece04050108131f171d23130904fe0403fb020a13211b17
1e1107039f04090a0c07fca90b0e080304080e0a03570c120903080c0702
03080c09fd1a0c0c02e6090c080302080b00>NCETVY+Calibri AddT42Char 
3 8768 454 <00010029fffa034b03bc002f00a4b0852b58b90031ffc040110b014d2f08
0b014d2e100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d
16b8fff0b60b014d34160109b8fff0402a0b014d00080b014d3c00013823
01360b010b2010014d0b200c014d0b0b31302949230b111d49114c054c00
3f3f3f1239393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b
2b2b1b400b2949230b111d49114c054c00183f3f3f1239393f3031592516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>NCETVY+Calibri AddT42Char 
NCETVY+Calibri /CharStrings get begin
/E 28 def
/d 282 def
/f 296 def
/g 336 def
/h 346 def
/m 373 def
/r 396 def
/s 400 def
/v 448 def
/x 454 def
end
NCETVY+Calibri /Encoding get
dup 69 /E put
dup 100 /d put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 109 /m put
dup 114 /r put
dup 115 /s put
dup 118 /v put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NCETVY+Calibri*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C /.notdef /E /F 10{/.notdef}rp 
/Q 15{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o 2{/.notdef}rp /r /s /t /u /v /.notdef 
/x 135{/.notdef}rp]
NCETVY+Calibri nf
NCETVY+Calibri*1 [12 0 0 -12 0 0 ]msf
496.79 157.9 mo
(Extract data from each message )
[5.88007 5.16 4.08008 3.95999 5.76001 5.0401 4.08008 2.75879 6.35986 5.64008 3.96008 5.76007 
2.51996 3.71991 3.95996 6.35992 9.59998 2.63995 6 5.76007 5.04004 6.35992 2.64001 9.59991 
5.99884 4.68005 4.68005 5.76007 5.51996 6 0 ]xsh
494.63 172.3 mo
(buffer in message receive thread)
[6.35992 6.35992 3.59991 3.35989 6.00006 4.07996 2.39996 2.76007 6.35992 2.63995 9.59998 6 
4.68005 4.68011 5.76001 5.51996 6 2.99994 4.08002 6 5.0401 6 2.76001 5.27997 
6 2.64001 4.08008 6.35992 4.07996 6 5.76007 0 ]xsh
4.56 lw
443.4 279.96 mo
459.6 280.265 li
@
457.45 273.383 mo
470.998 280.48 li
457.192 287.061 li
cp
ef
504.997 243.133 mo
513.331 241.198 522.071 242.065 529.863 245.6 cv
521.828 263.31 li
517.932 261.543 513.562 261.109 509.395 262.077 cv
cp
0 0 0 0 cmyk
ef
4.5 lw
[4.5 4.5 ] 0 dsh
504.997 243.133 mo
513.331 241.198 522.071 242.065 529.863 245.6 cv
521.828 263.31 li
517.932 261.543 513.562 261.109 509.395 262.077 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
547.815 262.169 mo
551.773 269.312 553.382 277.519 552.414 285.627 cv
533.104 283.324 li
533.588 279.27 532.783 275.166 530.805 271.595 cv
cp
0 0 0 0 cmyk
ef
547.815 262.169 mo
551.773 269.312 553.382 277.519 552.414 285.627 cv
533.104 283.324 li
533.588 279.27 532.783 275.166 530.805 271.595 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
542.498 307.266 mo
536.98 313.301 529.701 317.444 521.693 319.105 cv
517.743 300.063 li
521.746 299.232 525.386 297.161 528.146 294.143 cv
cp
0 0 0 0 cmyk
ef
542.498 307.266 mo
536.98 313.301 529.701 317.444 521.693 319.105 cv
517.743 300.063 li
521.746 299.232 525.386 297.161 528.146 294.143 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
499.818 317.318 mo
492.367 314.448 485.98 309.357 481.523 302.732 cv
497.658 291.877 li
499.887 295.189 503.08 297.734 506.806 299.169 cv
cp
0 0 0 0 cmyk
ef
499.818 317.318 mo
492.367 314.448 485.98 309.357 481.523 302.732 cv
497.658 291.877 li
499.887 295.189 503.08 297.734 506.806 299.169 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
474.958 278.874 mo
475.45 269.971 478.986 261.508 484.973 254.901 cv
499.383 267.961 li
496.39 271.264 494.622 275.496 494.376 279.947 cv
cp
0 0 0 0 cmyk
ef
474.958 278.874 mo
475.45 269.971 478.986 261.508 484.973 254.901 cv
499.383 267.961 li
496.39 271.264 494.622 275.496 494.376 279.947 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
484.45 255.491 mo
489.737 249.414 496.781 245.128 504.609 243.226 cv
509.201 262.123 li
505.287 263.074 501.765 265.217 499.122 268.256 cv
cp
0 0 0 0 cmyk
ef
484.45 255.491 mo
489.737 249.414 496.781 245.128 504.609 243.226 cv
509.201 262.123 li
505.287 263.074 501.765 265.217 499.122 268.256 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
552.355 286.102 mo
551.325 293.915 547.947 301.231 542.667 307.081 cv
528.23 294.05 li
530.87 291.125 532.56 287.468 533.074 283.561 cv
cp
0 0 0 0 cmyk
ef
552.355 286.102 mo
551.325 293.915 547.947 301.231 542.667 307.081 cv
528.23 294.05 li
530.87 291.125 532.56 287.468 533.074 283.561 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
521.699 319.103 mo
514.453 320.607 506.929 320.013 500.009 317.39 cv
506.901 299.205 li
510.361 300.516 514.124 300.814 517.746 300.062 cv
cp
0 0 0 0 cmyk
ef
521.699 319.103 mo
514.453 320.607 506.929 320.013 500.009 317.39 cv
506.901 299.205 li
510.361 300.516 514.124 300.814 517.746 300.062 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
481.556 302.781 mo
476.862 295.827 474.543 287.542 474.944 279.161 cv
494.369 280.091 li
494.168 284.281 495.328 288.424 497.675 291.901 cv
cp
0 0 0 0 cmyk
ef
481.556 302.781 mo
476.862 295.827 474.543 287.542 474.944 279.161 cv
494.369 280.091 li
494.168 284.281 495.328 288.424 497.675 291.901 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
549.765 225.353 mo
557.175 228.784 563.317 234.46 567.321 241.577 cv
550.372 251.113 li
548.37 247.554 545.299 244.716 541.594 243 cv
cp
0 0 0 0 cmyk
ef
[] 0 dsh
549.765 225.353 mo
557.175 228.784 563.317 234.46 567.321 241.577 cv
550.372 251.113 li
548.37 247.554 545.299 244.716 541.594 243 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
37.14 286.62 mo
95.8 286.62 li
120.94 286.62 li
137.7 286.62 li
137.7 303.63 li
137.7 310.92 li
137.7 315.78 li
120.94 315.78 li
185.213 353.765 li
95.8 315.78 li
37.14 315.78 li
37.14 310.92 li
37.14 303.63 li
cp
0 0 0 0 cmyk
ef
2.04 lw
37.14 286.62 mo
95.8 286.62 li
120.94 286.62 li
137.7 286.62 li
137.7 303.63 li
137.7 310.92 li
137.7 315.78 li
120.94 315.78 li
185.213 353.765 li
95.8 315.78 li
37.14 315.78 li
37.14 310.92 li
37.14 303.63 li
37.14 286.62 li
cp
.750271 .679713 .654902 .901946 cmyk
@
%ADOBeginSubsetFont: RHAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NCETVY+Calibri gcheck setglobal} if
3 8254 449 <00010035fffa058403bc00450131b0852b58b90047ffc0403d0f014d3808
0c014d29380137080c014d252e01262101262001261f01261e01261d0127
1c012804012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b3
10014d10b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0
400c0d014d0f200c014d0f414910b8ffe040200f014d3f104f106f107f10
04104012164810334925493a902c012c200f014d2cb8ffc0401013164867
2c772c02452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f01
2f2b2b2b2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b
1b401d41490f101f103f104f10040c10401216481040334925493a502c01
032cb8ffc04012131648262c362c02022c010d042c174c094c00183f3fd5
5f5e5d5d2b5f5dc43f3f1acd2b5e5d3f30315901140607010e0323222e02
27032707030e0323222e022701262635343e0233321e0217131737133e03
33321e0217131737133e0333321e0205840405fef7030d17281e1f2a190c
03bd0202af030d1a291e1f27190c03fef90504081320171c22120803d902
02c70209121f19181f120802d70201d6020913211a181d1107039f07140f
fca90b0e080304080e0a028d0909fd730b0e080304080e0a03570f140709
0b070203070d09fd1a090902e6090d070303070c08fd18090902e6090d07
0302080a>NCETVY+Calibri AddT42Char 
NCETVY+Calibri /CharStrings get begin
/w 449 def
end
NCETVY+Calibri /Encoding get
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NCETVY+Calibri*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C /.notdef /E /F 10{/.notdef}rp 
/Q 15{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o 2{/.notdef}rp /r /s /t /u /v /w 
/x 135{/.notdef}rp]
NCETVY+Calibri nf
NCETVY+Calibri*1 [14.04 0 0 -14.04 0 0 ]msf
48.8979 305.769 mo
(wait message)
[9.95993 6.7196 3.24049 4.67542 3.11685 11.1603 6.96386 5.52061 5.52061 6.7196 6.47935 0 
]xsh
37.14 89.58 mo
95.8 89.58 li
120.94 89.58 li
137.7 89.58 li
137.7 106.59 li
137.7 113.88 li
137.7 118.74 li
120.94 118.74 li
185.213 156.725 li
95.8 118.74 li
37.14 118.74 li
37.14 113.88 li
37.14 106.59 li
cp
0 0 0 0 cmyk
ef
37.14 89.58 mo
95.8 89.58 li
120.94 89.58 li
137.7 89.58 li
137.7 106.59 li
137.7 113.88 li
137.7 118.74 li
120.94 118.74 li
185.213 156.725 li
95.8 118.74 li
37.14 118.74 li
37.14 113.88 li
37.14 106.59 li
37.14 89.58 li
cp
.750271 .679713 .654902 .901946 cmyk
@
NCETVY+Calibri*1 [14.04 0 0 -14.04 0 0 ]msf
48.898 108.734 mo
(w)sh
58.8524 108.734 mo
(ait message)
[6.7196 3.24049 4.67542 3.11684 11.1589 6.96386 5.52061 5.52062 6.7196 6.47936 0 ]xsh
187.62 94.14 mo
287.58 94.14 li
287.58 130.5 li
187.62 130.5 li
cp
0 0 0 0 cmyk
ef
2.28 lw
187.62 94.14 mo
287.58 94.14 li
287.58 130.5 li
187.62 130.5 li
cp
0 1 1 .00173953 cmyk
@
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: PHAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NCETVX+Calibri-Bold gcheck setglobal} if

3 0 3 <> NCETVX+Calibri-Bold AddT42Char 
3 316 68 <0001008dfffa0671050e003c00d7b10102435558400b0d3030172f2f0a2e
18181ab80264b424310c0c0ab80264b700243651190c0b18bb012d004000
2efff0b41023024c31b8fff040201023024c17101023024c0d101023024c
0d172f30312e061f28511f551255055500183f3f3f3f1217392b2b2b2b1a
ed3232323f012fd4ed32113310ed32113311393d2f3333113330311bb536
51190c0b18bb012d0040002efff0b41023024c31b8fff040201023024c17
101023024c0d101023024c0d172f30312e061f28511f551255055500183f
3f3f3f1217392b2b2b2b1aed3232323f30315925140e0223222e02351123
010e0323222e0227012311140e0223222e02351134363333321e02170133
013e033333321e021506710b1d302524301c0c02fe8904121f302222301f
1203fe96020b1e2f2524301d0b362dac2e4230200c01180401220d1f2938
25b11b27190d240a100a06060a100a041dfbe40d110a03050b100b041cfb
e30a100a06060a100a048133360f23392afcfd03012a3a240f0e1b271900
>NCETVX+Calibri-Bold AddT42Char 
3 1682 258 <00020047ffe9037603d7003300400127b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f
5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed323930311b
400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e41
2ab80118401be02201037d228d2202402250226022030f221f22020c0422
22041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe8400910014d
3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f5e5d5d5d5f5ded1112
392f2b5d71ed5d7130315925140606232226263535060623222e0235343e
02333335342e0223220e0223222e0235343e0433321e02150723220e0215
1416333236370376142b2a2d2911378d56477757303d79b4775711274130
3f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35592e
1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a2617
1f241d231e132955865cda122433213840363400>NCETVX+Calibri-Bold AddT42Char 
3 2772 282 <0002004bffe903cc056d002600390093b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1aed2b3fed2b12
17393f012fedd4ed323930311b400921460b39271b040e2ab8ffe8b40b0f
014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f3f
1aed2b3fed2b1217393f30315925140e0223222e023535060623222e0235
343e023332161711343e0233321e021503262623220e0215141e0233323e
023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d3025
25301c0cfa36633631472b15122944341a31333620220b0f0a04040a0f0b
634a524f86b36377be86483d3b01e30a100b06060b100afd344448315265
35386a53320f22372800>NCETVX+Calibri-Bold AddT42Char 
3 3488 336 <0003001bfe9303a203d3003e004e005f0100b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d3fed5d5d12393f
ed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173930311b40550f3007
0338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e5301
18530153f1cd150117150100151015021515603803f93c482a203c42cc42
020442010f00420142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d
3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d1217
393031590114062323161615140e0223222627060615141617171e031514
0e0223222e0235343e0237262635343637262635343e0233321617213216
01342623220e0215141633323e0213342627270e0315141633323e0203a2
1610691613346189542b4e150c13332ed94c77512b3a74af7572a1672f11
21301f2b2f362b232a376288522a4d21011b1115febd5049253825125047
263825133b483fb31a1f1306655c394e30140360302e183d214e79532b15
0e0d24161d2502080325435e3c4275563224405935213c373217174f2f3b
61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d3002
051323201e10323417262f00>NCETVX+Calibri-Bold AddT42Char 
3 6114 410 <00010017ffec028e04b1003a0091b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1aed3fed2bcd3fed2b012f
33fd32c4321112392f30311bb9002dffe8b40b0f014c2db8011fb323481d
0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1aed3f
ed2bcd3fed2b30315925140e0423222e02351123222635343e0233333534
3e0233321e02151533321e02151406232311141633323e0233321e02028e
0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a0f0a
051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c92f37
1d28170ac70a100b05050b100ac70a17281d372ffe5d4949070907071524
>NCETVX+Calibri-Bold AddT42Char 
3 6660 448 <00010016fffa03b303c6002c004eb10102435558b210211fb80284b41521
062123b8025d400b0040212849210b1a490b4c00183f3f12393f01192f1a
18dded123910dded123930311bb72849210b1a490b4c00183f3f12393f30
315901140e0207010e0323222e0227012e0235343e0233321e0217131737
133e0333321e0203b301030504fef405112743363543261105fef4060701
0b1c312529321d0c04cb0606c8030d1c2f26252f1a0a039f050e11160efc
d911150c04050c1510032714200e060a0f0a040509110cfd711919028f0c
110905040a0f>NCETVX+Calibri-Bold AddT42Char 
NCETVX+Calibri-Bold /CharStrings get begin
/space 3 def
/M 68 def
/a 258 def
/d 282 def
/g 336 def
/t 410 def
/v 448 def
end
NCETVX+Calibri-Bold /Encoding get
dup 32 /space put
dup 77 /M put
dup 97 /a put
dup 100 /d put
dup 103 /g put
dup 116 /t put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NCETVX+Calibri-Bold*1 
[32{/.notdef}rp /space 44{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 
13{/.notdef}rp /a /b /c /d /e /.notdef /g 
/h /i 2{/.notdef}rp /l 5{/.notdef}rp /r /s /t 
/u /v 137{/.notdef}rp]
NCETVX+Calibri-Bold nf
NCETVX+Calibri-Bold*1 [12 0 0 -12 0 0 ]msf
195.247 108.947 mo
(Message receive )
[10.4399 6.00008 4.80002 4.80003 5.88004 5.51999 6.00008 2.75998 4.20114 6.00008 5.03999 6.00006 
3.00003 5.52008 6.00006 0 ]xsh
220.927 123.347 mo
(thread)
[4.2 6.48004 4.19994 6.00008 5.88005 0 ]xsh
187.62 283.62 mo
287.58 283.62 li
287.58 319.98 li
187.62 319.98 li
cp
0 0 0 0 cmyk
ef
187.62 283.62 mo
287.58 283.62 li
287.58 319.98 li
187.62 319.98 li
cp
0 1 1 .00173953 cmyk
@
.750271 .679713 .654902 .901946 cmyk
NCETVX+Calibri-Bold*1 [12 0 0 -12 0 0 ]msf
195.247 298.401 mo
(Message )
[10.4399 6.00008 4.80002 4.80003 5.88004 5.51999 6.00008 0 ]xsh
241.447 298.401 mo
(r)sh
245.647 298.401 mo
(eceive )
[6.00008 5.03998 6.00009 3 5.52011 6.00006 0 ]xsh
220.927 312.801 mo
(thread)
[4.2 6.48004 4.19995 6.00006 5.88004 0 ]xsh
432.18 100.26 mo
538.14 100.26 li
538.14 121.98 li
432.18 121.98 li
cp
0 0 0 0 cmyk
ef
432.18 100.26 mo
538.14 100.26 li
538.14 121.98 li
432.18 121.98 li
cp
0 1 1 .00173953 cmyk
@
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: PHAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NCETVX+Calibri-Bold gcheck setglobal} if
3 706 69 <0001008dfffa04b80512003d00b3b10102435558b6270f0a2e0f0f14b802
34b21e2e32b80234b4001e385229b8fff040120f26024c29282e220c100f
26024c0c0b060fb8017db7270a19225119552eb8017db240065400183f1a
ed3f3f123939ed1139392b111239392b3f012fd4ed3210ed322f11331133
30311bb2385229b8fff040120f26024c29282e220c100f26024c0c0b060f
b8017db7270a19225119552eb8017db240065400183f1aed3f3f123939ed
1139392b111239392b3f30315925140e022323222e022701262627231616
1511140e0223222e02351134363333321e0217131e03173326263511343e
0233321e021504b8101b25137023332b2819febe1c3a170204040b1b2e24
232e1a0a37288d2634292413fc162b2826120103030c1c2e24222e190a5c
1724180b0e253f32025d367d3b488f4cfd5b0a100b06060b100a048b2f2f
0d1e3527fe272b53535028469845025f0a100c05050c100a>NCETVX+Calibri-Bold AddT42Char 
3 4560 373 <0001007efffa060903d7005000a9b10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1aed2b3fed2b012fed39d4ed11392fed3930311bb900
10ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d400e
40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1aed2b3fed2b
30315925140e0223222e023511342e022322060711140e0223222e023511
342e022322060711140e0223222e023511343e0233321e02151536363332
1e02173e0333321e021506090c1c302526301d0b112335252d5c360c1d30
2425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a4a93
503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a351d
4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a0f0a
037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>NCETVX+Calibri-Bold AddT42Char 
3 4946 374 <0001007efffa03d203d70032007fb10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1aed2b2b012fd4ed10ed393031
1bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a19
2449194c054c00183f3f3f12393f1aed2b2b30315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021515363633
321e021503d20c1c312425311c0c132439263062350c1d302525301d0c0a
1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a351d46
43fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61>NCETVX+Calibri-Bold AddT42Char 
3 5214 381 <00020048ffe9040403d700130027006fb10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1aed2b3fed2b012fedd4ed30311bb90019ffe8b40b
0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1aed
2b3fed2b30315901140e0223222e0235343e0233321e0205342e0223220e
0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fefd15
32533f3854361b1631543e3954361a01e972bc884a427eb87672bd874a41
7eb881426f522e294f6f47426f522d294e6f>NCETVX+Calibri-Bold AddT42Char 
NCETVX+Calibri-Bold /CharStrings get begin
/N 69 def
/m 373 def
/n 374 def
/o 381 def
end
NCETVX+Calibri-Bold /Encoding get
dup 78 /N put
dup 109 /m put
dup 110 /n put
dup 111 /o put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NCETVX+Calibri-Bold*1 
[32{/.notdef}rp /space 44{/.notdef}rp /M /N /.notdef /P 2{/.notdef}rp 
/S 13{/.notdef}rp /a /b /c /d /e /.notdef 
/g /h /i 2{/.notdef}rp /l /m /n /o 
2{/.notdef}rp /r /s /t /u /v 137{/.notdef}rp]
NCETVX+Calibri-Bold nf
NCETVX+Calibri-Bold*1 [12 0 0 -12 0 0 ]msf
439.261 115.047 mo
(Node main thread)
[7.91995 6.47995 6.48001 6.00009 2.75995 9.72006 5.88004 2.99884 6.48001 2.75998 4.20001 6.48004 
4.19992 6.00009 5.88 0 ]xsh
%ADOBeginSubsetFont: RHAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NCETVY+Calibri gcheck setglobal} if
3 9086 460 <00010059000002d703b7002b0060b0852b58b90010fff040160c0d014c26
100c0d014c2f0001003409440902092511b80102b319480f27b80102b105
4b003fed323fed32012f5dcd5d31302b2b1bb2251911b80102b56c19480f
0527b80102b26c054b00183f2b323f2b3230315925140e02232122263535
343e02370121222635343e023321321e021515140e02070121321e0202d7
06080e08fdd6151b04080e0a018dfe7f101304090d0902040b110c070408
0e0afe7501a6080d090646131b11071c21220e16161910026a2125121b11
07060e1611200e18171a10fd9607101b>NCETVY+Calibri AddT42Char 
NCETVY+Calibri /CharStrings get begin
/z 460 def
end
NCETVY+Calibri /Encoding get
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NCETVY+Calibri*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C /.notdef /E /F 10{/.notdef}rp 
/Q 15{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o 2{/.notdef}rp /r /s /t /u /v /w 
/x /.notdef /z 133{/.notdef}rp]
NCETVY+Calibri nf
NCETVY+Calibri*1 [15.96 0 0 -15.96 0 0 ]msf
182.758 256.045 mo
(message buffer)
[12.7201 7.91936 6.24048 6.24045 7.68002 7.44044 7.91936 3.71866 8.40125 8.39966 4.79904 4.56125 
7.91937 0 ]xsh
182.758 444.836 mo
(message buffer)
[12.7201 7.91936 6.24048 6.24045 7.68002 7.44044 7.91936 3.71866 8.40125 8.39966 4.79904 4.56125 
7.91937 0 ]xsh
542.848 334.648 mo
(d)sh
551.243 334.648 mo
(eserialize)
[7.91937 6.24048 7.92096 5.51892 3.71875 7.67999 3.71875 3.71875 5.99945 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/NCETVX+Calibri-Bold*1 uf
/NCETVX+Calibri-Bold uf
/PHAAAA+Calibri-Bold uf
/NCETVY+Calibri*1 uf
/NCETVY+Calibri uf
/RHAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
